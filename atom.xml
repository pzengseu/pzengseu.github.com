<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[zp's blog]]></title>
  <subtitle><![CDATA[Reading, thinking and coding]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://pzengseu.github.io/"/>
  <updated>2016-04-12T12:43:29.000Z</updated>
  <id>http://pzengseu.github.io/</id>
  
  <author>
    <name><![CDATA[zpeng]]></name>
    <email><![CDATA[zpeng@seu.edu.cn]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Hello  537]]></title>
    <link href="http://pzengseu.github.io/2016/04/12/hello/"/>
    <id>http://pzengseu.github.io/2016/04/12/hello/</id>
    <published>2016-04-12T12:38:25.000Z</published>
    <updated>2016-04-12T12:43:29.000Z</updated>
    <content type="html"><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="a"><a href="#a" class="headerlink" title="a"></a>a</h3><h3 id="b"><a href="#b" class="headerlink" title="b"></a>b</h3><h3 id="c"><a href="#c" class="headerlink" title="c"></a>c</h3><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=29947420&auto=1&height=32"></iframe>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="a"><a ]]>
    </summary>
    
      <category term="hello" scheme="http://pzengseu.github.io/tags/hello/"/>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[明朝哪些事儿]]></title>
    <link href="http://pzengseu.github.io/2016/04/06/read/Ming-those-things/"/>
    <id>http://pzengseu.github.io/2016/04/06/read/Ming-those-things/</id>
    <published>2016-04-06T11:20:56.000Z</published>
    <updated>2016-04-06T14:18:51.000Z</updated>
    <content type="html"><![CDATA[<p>午后在图书馆,看完了<em>明朝那些事儿</em>的最后一章,作者以这么一句话介绍全书: <em>成功只有一个——按照自己的方式，去度过人生</em>。瞬间热泪盈眶.<br><a id="more"></a><br>这本两百多万字的书,我看了一个多月,读完意犹未尽,下面总结下这本书给我印象较深的人和事.<br>首先第一个人就是陈又凉,谁叫这位大哥是我老乡呢!但说来惭愧,对这位人物的唯一印象是<em>倚天屠龙记</em>里的明教叛徒,为了得到倚天剑屠龙刀不折手段,是个坏人.历史人物没有好坏,他是一位枭雄,被朱元璋打败.对朱元璋这位开国皇帝,一直以为他跟刘邦一样地鳖流氓出身,但朱元璋当皇帝后更残忍,当年帮他打天下的人物,抄家的抄家,充军的充军,毫不留情.同时朱元璋肃贪,也是好不留情,当官成了苦差事.<br>朱元璋时期的太子比较短命,但是他特别喜欢他的孙子朱允文,于是朱允文成了明朝第二任皇帝,朱允文是个好人,好人不适合做皇帝.朱允炆的削藩最终导致朱棣造反,好人朱允炆明确表示打仗时不能上了朱棣,这导致朱棣几次死里逃生,最终朱棣造反成功,朱允炆失踪,成为历史谜题.我以前对这两位的印象停留在<em>穿越时空的爱恋</em>,电视剧不可信,更不用说天朝第一部穿越剧.朱棣是个很有作为的皇帝,他执政时期,明朝第一位也是唯一一位因好事名垂千古的太监出现了,他就是郑和,郑和七下西洋.郑和下西洋,不像欧帝去外殖民,郑和是在国外传播中华文明,扬我国威,最后出现四方来朝的盛况.<br>接下来就要说说传奇皇帝朱祁镇了.这位皇帝的人生可谓没白活,太丰富多彩了.受到明朝第一位著名太监王振的怂恿,亲自率军出征蒙古,结果出现土木堡之变,全军覆没不说,还当了一年俘虏,可这位皇帝没有富贵病,成为俘虏了居然还能与别人打成一片,不可思议.这个时候朱祁镇的弟弟朱祁钰上场了,果然权利能改变了,原本关系很好的两人因为皇位也就是权利闹翻,朱祁钰将蒙古人送回来的朱祁镇囚禁七年,可真实苦了这位皇帝了.七年之后夺门之变朱祁镇再次坐上宝座,这人生值了.可是重夺宝座的朱祁镇却干掉了于谦,千古忠臣啊.最近有部剧叫<em>女医明妃传</em>,看了它的简介,心中一万个草泥马在奔腾,历史能被改成这样,小编也是想象力丰富.<br>我以前不相信皇帝会有爱情,但我看到了朱见深的爱情,一生只爱大她17岁的万妃.这个万贵妃长得并不出色，年纪已经大了，为什么皇上还会集万千宠爱于她一身呢。朱见深知道大臣们的疑惑，但他不想解释什么。因为他们是不会理解的。在那孤独无助的岁月里，只有她守护在我身边，陪伴着我，走过无数的风雨，始终如一，不离不弃。在我心中，也许他不能算是一位好的皇帝，但最是这份挚爱情深，问世间有多少人一朝做到高处还能够做到对他的老婆不离不弃。<br>明朝最会玩的皇帝朱厚照,封自己为威武大将军的皇帝,这是个奇葩皇帝.著名太监刘瑾就出现在这一时期,但被隐忍的李东阳干掉了,厚照也把自己玩死了.这一时期出现了一位圣人王阳明,哲学家发明了心学,所谓知行合一的来源.<br>嘉靖时期,朱厚熜当了40多年皇帝, 出现了著名奸臣严嵩, 以前一直一位严嵩很厉害是考他自己上位的,原来不是,原来他有个好儿子严世藩,严世藩聪明绝顶,帮他一步步上位.徐阶就是整了他儿子,才把严嵩搞下去.这一时期,倭寇侵犯东南,戚继光救火.<br>万历皇帝朱翊钧,明朝最长的一个年号.其间出现了张居正这样的千古人物.张居正任首辅期间,大势改革,发明了考勤制度,一时大明王朝国库充盈,如果没有张居正明朝没有钱用来打仗,明朝覆灭的进程将会加快.这一时期,抗日援朝,万历皇帝二十年不上朝,因为赌气不立太子.明朝从万历中期开始补补走走衰落.这里不得不说说这个时候的千古廉臣海瑞了.以前有部电视剧叫<em>海瑞斗严嵩</em>,所以对他的印象就是一个廉洁的代表.但海瑞是一个可以做事却不能做大事的人,看明白是一件事,取解决又是一件事,海瑞的确值得敬佩,但只是他的品质,而不是能力.<br>朱由校这位皇帝也是个奇葩,中国历史唯一的一个木匠皇帝,可以生在帝王家.从历史上看,奇葩皇帝一定伴有大奸,该魏忠贤上场了,可能这是历史上最有名的太监了,封了个九千九百岁.<br>好了,轮到最后一位皇帝朱由检上场了,崇祯皇帝他一上来就灭了魏忠贤,想要救火可谁知,水灭不了火!!!乱世出英雄,这一时期出现的人物太多,袁崇焕,孙承宗,毛文龙,李自成,张献忠,皇太极…我只想谈谈袁崇焕,孙承宗,毛文龙这三个人.很多人说明朝的覆灭是因为昏庸的崇祯灭了袁崇焕,也有很多人说袁崇焕并不能拯救大明,孙承宗才能.以前我一直认为袁崇焕是个可以与岳飞比肩的大英雄,就是因为他的死才导致大明覆灭.现在看来谁都救不了了,这是一个从量变到质变的过程,只能说谁能推迟它的灭亡,孙承宗可以,袁崇焕不仅不行还加速了大明灭亡.袁崇焕是孙承宗的徒弟,孙承宗打造的宁锦防线守住了大明几时了,袁崇焕做事太冲动,他有能力,却没有战略眼光.要说说毛文龙了,他的手下全是流氓,而流氓只有大流氓才能管的住,一直以来都是毛文龙在后金后面骚扰后金,可是袁崇焕因为看毛文龙不爽把毛文龙杀了,接着把这些流氓交给毛文龙儿子管,他儿子怎么可能管的了这些流氓,最后这些人都反了.由于他们开了先河,之后造反的队伍如雨后春笋.明朝亡国是内忧外患,内忧直接导致亡国.大多数人觉得袁崇焕好,但事实是袁崇焕是好,但没想象中好,这要看历史是谁写的,历史是清朝写的,只有说袁崇焕好,才能体现崇祯的昏.<br>历史是个说不清道不明的东西,我们知道的历史不一定是真的,可能早已被改的面目全非.</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="http://music.163.com/outchain/player?type=2&id=29947420&auto=1&height=32"></iframe>
]]></content>
    <summary type="html">
    <![CDATA[<p>午后在图书馆,看完了<em>明朝那些事儿</em>的最后一章,作者以这么一句话介绍全书: <em>成功只有一个——按照自己的方式，去度过人生</em>。瞬间热泪盈眶.<br>]]>
    
    </summary>
    
      <category term="书单" scheme="http://pzengseu.github.io/tags/%E4%B9%A6%E5%8D%95/"/>
    
      <category term="历史" scheme="http://pzengseu.github.io/tags/%E5%8E%86%E5%8F%B2/"/>
    
      <category term="阅读" scheme="http://pzengseu.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="阅读" scheme="http://pzengseu.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Maching learning in action，naive bayes算法笔记]]></title>
    <link href="http://pzengseu.github.io/2016/03/06/data_mining/naive_bayes/"/>
    <id>http://pzengseu.github.io/2016/03/06/data_mining/naive_bayes/</id>
    <published>2016-03-06T08:41:45.000Z</published>
    <updated>2016-03-06T06:39:22.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u57FA_u4E8E_u6982_u7387_u8BBA_u7684_u5206_u7C7B_u65B9_u6CD5_3A__u6734_u7D20_u8D1D_u53F6_u65AF"><a href="#u57FA_u4E8E_u6982_u7387_u8BBA_u7684_u5206_u7C7B_u65B9_u6CD5_3A__u6734_u7D20_u8D1D_u53F6_u65AF" class="headerlink" title="基于概率论的分类方法: 朴素贝叶斯"></a>基于概率论的分类方法: 朴素贝叶斯</h1><p>naive bayes是基于贝叶斯定理与特征条件独立假设的分类方法.对于给定的训练数据集,首先基于特征条件假设学习输入/输出的联合概率分布:然后基于此模型,对给定的输入x,利用贝叶斯定理求出后验概率最大的输出y.naive bayes法实现简单,学习与预测的效率都很高,是一种常用的方法<br><a id="more"></a></p>
<h2 id="u4F7F_u7528Python_u8FDB_u884C_u6587_u672C_u5206_u7C7B"><a href="#u4F7F_u7528Python_u8FDB_u884C_u6587_u672C_u5206_u7C7B" class="headerlink" title="使用Python进行文本分类"></a>使用Python进行文本分类</h2><h3 id="u51C6_u5907_u6570_u636E_3A__u4ECE_u6587_u672C_u4E2D_u6784_u5EFA_u8BCD_u5411_u91CF"><a href="#u51C6_u5907_u6570_u636E_3A__u4ECE_u6587_u672C_u4E2D_u6784_u5EFA_u8BCD_u5411_u91CF" class="headerlink" title="准备数据: 从文本中构建词向量"></a>准备数据: 从文本中构建词向量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loadDataSet</span><span class="params">()</span>:</span></span><br><span class="line">    postingList=[[<span class="string">'my'</span>, <span class="string">'dog'</span>, <span class="string">'has'</span>, <span class="string">'flea'</span>, <span class="string">'problems'</span>, <span class="string">'help'</span>, <span class="string">'please'</span>],</span><br><span class="line">                 [<span class="string">'maybe'</span>, <span class="string">'not'</span>, <span class="string">'take'</span>, <span class="string">'him'</span>, <span class="string">'to'</span>, <span class="string">'dog'</span>, <span class="string">'park'</span>, <span class="string">'stupid'</span>],</span><br><span class="line">                 [<span class="string">'my'</span>, <span class="string">'dalmation'</span>, <span class="string">'is'</span>, <span class="string">'so'</span>, <span class="string">'cute'</span>, <span class="string">'I'</span>, <span class="string">'love'</span>, <span class="string">'him'</span>],</span><br><span class="line">                 [<span class="string">'stop'</span>, <span class="string">'posting'</span>, <span class="string">'stupid'</span>, <span class="string">'worthless'</span>, <span class="string">'garbage'</span>],</span><br><span class="line">                 [<span class="string">'mr'</span>, <span class="string">'licks'</span>, <span class="string">'ate'</span>, <span class="string">'my'</span>, <span class="string">'steak'</span>, <span class="string">'how'</span>, <span class="string">'to'</span>, <span class="string">'stop'</span>, <span class="string">'him'</span>],</span><br><span class="line">                 [<span class="string">'quit'</span>, <span class="string">'buying'</span>, <span class="string">'worthless'</span>, <span class="string">'dog'</span>, <span class="string">'food'</span>, <span class="string">'stupid'</span>]]</span><br><span class="line">    classVec = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>]  <span class="comment">#1代表侮辱性文字,0代表正常言论</span></span><br><span class="line">    <span class="keyword">return</span> postingList, classVec</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createVocabList</span><span class="params">(dataSet)</span>:</span></span><br><span class="line">    vocabSet = set([])</span><br><span class="line">    <span class="keyword">for</span> document <span class="keyword">in</span> dataSet:</span><br><span class="line">        vocabSet = vocabSet | set(document)</span><br><span class="line">    <span class="keyword">return</span> list(vocabSet)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">setOfWords2Vec</span><span class="params">(vocabList, inputSet)</span>:</span></span><br><span class="line">    returnVec = [<span class="number">0</span>] * len(vocabList)</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> inputSet:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> vocabList:</span><br><span class="line">            returnVec[vocabList.index(word)] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>: <span class="keyword">print</span> <span class="string">"the word: %s is not in my Vocabulary!"</span> % word</span><br><span class="line">    <span class="keyword">return</span> returnVec</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">listPosts, listClasses = loadDataSet()</span><br><span class="line">myVocbList = createVocabList(listPosts)</span><br><span class="line">myVocbList</span><br></pre></td></tr></table></figure>
<pre><code>[&apos;cute&apos;,
 &apos;love&apos;,
 &apos;help&apos;,
 &apos;garbage&apos;,
 &apos;quit&apos;,
 &apos;I&apos;,
 &apos;problems&apos;,
 &apos;is&apos;,
 &apos;park&apos;,
 &apos;stop&apos;,
 &apos;flea&apos;,
 &apos;dalmation&apos;,
 &apos;licks&apos;,
 &apos;food&apos;,
 &apos;not&apos;,
 &apos;him&apos;,
 &apos;buying&apos;,
 &apos;posting&apos;,
 &apos;has&apos;,
 &apos;worthless&apos;,
 &apos;ate&apos;,
 &apos;to&apos;,
 &apos;maybe&apos;,
 &apos;please&apos;,
 &apos;dog&apos;,
 &apos;how&apos;,
 &apos;stupid&apos;,
 &apos;so&apos;,
 &apos;take&apos;,
 &apos;mr&apos;,
 &apos;steak&apos;,
 &apos;my&apos;]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setOfWords2Vec(myVocbList, listPosts[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>
<pre><code>[0,
 0,
 1,
 0,
 0,
 0,
 1,
 0,
 0,
 0,
 1,
 0,
 0,
 0,
 0,
 0,
 0,
 0,
 1,
 0,
 0,
 0,
 0,
 1,
 1,
 0,
 0,
 0,
 0,
 0,
 0,
 1]
</code></pre><h3 id="u8BAD_u7EC3_u7B97_u6CD5_3A__u4ECE_u8BCD_u5411_u91CF_u8BA1_u7B97_u6982_u7387"><a href="#u8BAD_u7EC3_u7B97_u6CD5_3A__u4ECE_u8BCD_u5411_u91CF_u8BA1_u7B97_u6982_u7387" class="headerlink" title="训练算法: 从词向量计算概率"></a>训练算法: 从词向量计算概率</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trainNB0</span><span class="params">(trainMatrix, trainCategory)</span>:</span></span><br><span class="line">    numTrainDocs = len(trainMatrix)</span><br><span class="line">    numwords = len(trainMatrix[<span class="number">0</span>])</span><br><span class="line">    pAbusive = sum(trainCategory) / float(numTrainDocs)</span><br><span class="line">    p0Num = np.zeros(numwords)</span><br><span class="line">    p1Num = np.zeros(numwords)</span><br><span class="line">    p0Denom = <span class="number">0.0</span></span><br><span class="line">    p1Denom = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(numTrainDocs):</span><br><span class="line">        <span class="keyword">if</span> trainCategory[i] == <span class="number">1</span>:</span><br><span class="line">            p1Num += trainMatrix[i]</span><br><span class="line">            p1Denom += sum(trainMatrix[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            p0Num += trainMatrix[i]</span><br><span class="line">            p0Denom += sum(trainMatrix[i])</span><br><span class="line">    p1Vect = p1Num/p1Denom</span><br><span class="line">    p0Vect = p0Num/p0Denom</span><br><span class="line">    <span class="keyword">return</span> p0Vect, p1Vect, pAbusive</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listPosts, listClasses = loadDataSet()</span><br><span class="line">myVocbList = createVocabList(listPosts)</span><br><span class="line">trainMat = []</span><br><span class="line"><span class="keyword">for</span> postinDoc <span class="keyword">in</span> listPosts:</span><br><span class="line">    trainMat.append(setOfWords2Vec(myVocbList, postinDoc))</span><br><span class="line">p0V, p1V, pAb = trainNB0(trainMat, listClasses)</span><br><span class="line">pAb</span><br></pre></td></tr></table></figure>
<pre><code>0.5
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p0V</span><br></pre></td></tr></table></figure>
<pre><code>array([ 0.04166667,  0.04166667,  0.04166667,  0.        ,  0.        ,
        0.04166667,  0.04166667,  0.04166667,  0.        ,  0.04166667,
        0.04166667,  0.04166667,  0.04166667,  0.        ,  0.        ,
        0.08333333,  0.        ,  0.        ,  0.04166667,  0.        ,
        0.04166667,  0.04166667,  0.        ,  0.04166667,  0.04166667,
        0.04166667,  0.        ,  0.04166667,  0.        ,  0.04166667,
        0.04166667,  0.125     ])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p1V</span><br></pre></td></tr></table></figure>
<pre><code>array([ 0.        ,  0.        ,  0.        ,  0.05263158,  0.05263158,
        0.        ,  0.        ,  0.        ,  0.05263158,  0.05263158,
        0.        ,  0.        ,  0.        ,  0.05263158,  0.05263158,
        0.05263158,  0.05263158,  0.05263158,  0.        ,  0.10526316,
        0.        ,  0.05263158,  0.05263158,  0.        ,  0.10526316,
        0.        ,  0.15789474,  0.        ,  0.05263158,  0.        ,
        0.        ,  0.        ])
</code></pre><h3 id="u6D4B_u8BD5_u7B97_u6CD5_3A__u6839_u636E_u73B0_u5B9E_u60C5_u51B5_u4FEE_u6539_u5206_u7C7B_u5668"><a href="#u6D4B_u8BD5_u7B97_u6CD5_3A__u6839_u636E_u73B0_u5B9E_u60C5_u51B5_u4FEE_u6539_u5206_u7C7B_u5668" class="headerlink" title="测试算法: 根据现实情况修改分类器"></a>测试算法: 根据现实情况修改分类器</h3><h4 id="u62C9_u666E_u62C9_u65AF_u5E73_u6ED1_28Laplace_smoothing_29"><a href="#u62C9_u666E_u62C9_u65AF_u5E73_u6ED1_28Laplace_smoothing_29" class="headerlink" title="拉普拉斯平滑(Laplace smoothing)"></a>拉普拉斯平滑(Laplace smoothing)</h4><p>若用Laplace smoothing,然后取自然对数,参考统计学习方法,代码如下:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trainNB02</span><span class="params">(trainMatrix, trainCategory)</span>:</span></span><br><span class="line">    numTrainDocs = len(trainMatrix)</span><br><span class="line">    numwords = len(trainMatrix[<span class="number">0</span>])</span><br><span class="line">    pAbusive = (sum(trainCategory) + <span class="number">1</span>) / float(numTrainDocs+<span class="number">2</span>) <span class="comment">#书中没写,结果一样,但应该加上</span></span><br><span class="line">    p0Num = np.ones(numwords)</span><br><span class="line">    p1Num = np.ones(numwords)</span><br><span class="line">    p0Denom = <span class="number">2.0</span></span><br><span class="line">    p1Denom = <span class="number">2.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(numTrainDocs):</span><br><span class="line">        <span class="keyword">if</span> trainCategory[i] == <span class="number">1</span>:</span><br><span class="line">            p1Num += trainMatrix[i]</span><br><span class="line">            p1Denom += sum(trainMatrix[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            p0Num += trainMatrix[i]</span><br><span class="line">            p0Denom += sum(trainMatrix[i])</span><br><span class="line">    p1Vect = np.log(p1Num/p1Denom)</span><br><span class="line">    p0Vect = np.log(p0Num/p0Denom)</span><br><span class="line">    <span class="keyword">return</span> p0Vect, p1Vect, pAbusive</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listPosts, listClasses = loadDataSet()</span><br><span class="line">myVocbList = createVocabList(listPosts)</span><br><span class="line">trainMat = []</span><br><span class="line"><span class="keyword">for</span> postinDoc <span class="keyword">in</span> listPosts:</span><br><span class="line">    trainMat.append(setOfWords2Vec(myVocbList, postinDoc))</span><br><span class="line">p0V, p1V, pAb = trainNB02(trainMat, listClasses)</span><br><span class="line">pAb</span><br></pre></td></tr></table></figure>
<pre><code>0.5
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p0V</span><br></pre></td></tr></table></figure>
<pre><code>array([-2.56494936, -2.56494936, -2.56494936, -3.25809654, -3.25809654,
       -2.56494936, -2.56494936, -2.56494936, -3.25809654, -2.56494936,
       -2.56494936, -2.56494936, -2.56494936, -3.25809654, -3.25809654,
       -2.15948425, -3.25809654, -3.25809654, -2.56494936, -3.25809654,
       -2.56494936, -2.56494936, -3.25809654, -2.56494936, -2.56494936,
       -2.56494936, -3.25809654, -2.56494936, -3.25809654, -2.56494936,
       -2.56494936, -1.87180218])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p1V</span><br></pre></td></tr></table></figure>
<pre><code>array([-3.04452244, -3.04452244, -3.04452244, -2.35137526, -2.35137526,
       -3.04452244, -3.04452244, -3.04452244, -2.35137526, -2.35137526,
       -3.04452244, -3.04452244, -3.04452244, -2.35137526, -2.35137526,
       -2.35137526, -2.35137526, -2.35137526, -3.04452244, -1.94591015,
       -3.04452244, -2.35137526, -2.35137526, -3.04452244, -1.94591015,
       -3.04452244, -1.65822808, -3.04452244, -2.35137526, -3.04452244,
       -3.04452244, -3.04452244])
</code></pre><h4 id="u6734_u7D20_u8D1D_u53F6_u65AF_u5206_u7C7B_u51FD_u6570"><a href="#u6734_u7D20_u8D1D_u53F6_u65AF_u5206_u7C7B_u51FD_u6570" class="headerlink" title="朴素贝叶斯分类函数"></a>朴素贝叶斯分类函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classifyNB</span><span class="params">(vec2Classify, p0Vec, p1Vec, pClass1)</span>:</span></span><br><span class="line">    p1 = sum(vec2Classify * p1Vec) + np.log(pClass1)</span><br><span class="line">    p0 = sum(vec2Classify * p0Vec) + np.log(<span class="number">1</span> - pClass1)</span><br><span class="line">    <span class="keyword">if</span> p1 &gt; p0:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">testingNB</span><span class="params">()</span>:</span></span><br><span class="line">    listPosts, listClasses = loadDataSet()</span><br><span class="line">    myVocabList = createVocabList(listPosts)</span><br><span class="line">    trainMat = []</span><br><span class="line">    <span class="keyword">for</span> post <span class="keyword">in</span> listPosts:</span><br><span class="line">        trainMat.append(setOfWords2Vec(myVocabList, post))</span><br><span class="line">    p0V, p1V, pAb = trainNB02(trainMat, listClasses)</span><br><span class="line">    testEntry = [<span class="string">'love'</span>, <span class="string">'my'</span>, <span class="string">'dalmation'</span>]</span><br><span class="line">    thisDoc = np.array(setOfWords2Vec(myVocabList, testEntry))</span><br><span class="line">    <span class="keyword">print</span> testEntry,<span class="string">'classified as:'</span>, classifyNB(thisDoc, p0V, p1V, pAb)</span><br><span class="line">    testEntry = [<span class="string">'stupid'</span>, <span class="string">'garbage'</span>]</span><br><span class="line">    thisDoc = np.array(setOfWords2Vec(myVocabList, testEntry))</span><br><span class="line">    <span class="keyword">print</span> testEntry,<span class="string">'classified as:'</span>, classifyNB(thisDoc, p0V, p1V, pAb)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">testingNB()</span><br></pre></td></tr></table></figure>
<pre><code>[&apos;love&apos;, &apos;my&apos;, &apos;dalmation&apos;] classified as: 0
[&apos;stupid&apos;, &apos;garbage&apos;] classified as: 1
</code></pre><h3 id="u51C6_u5907_u6570_u636E_3A__u6587_u6863_u8BCD_u888B_u6A21_u578B"><a href="#u51C6_u5907_u6570_u636E_3A__u6587_u6863_u8BCD_u888B_u6A21_u578B" class="headerlink" title="准备数据: 文档词袋模型"></a>准备数据: 文档词袋模型</h3><p>上面的模型仅统计单词是否出现,这里统计单词出现的总次数</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bagOfWord2VecMN</span><span class="params">(vocabList, inputSet)</span>:</span></span><br><span class="line">    returnVec = [<span class="number">0</span>] * len(vocabList)</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> inputSet:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> vocabList:</span><br><span class="line">            returnVec[vocabList.index(word)] += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> returnVec</span><br></pre></td></tr></table></figure>
<h2 id="u793A_u4F8B_3A__u4F7F_u7528_u6734_u7D20_u8D1D_u53F6_u65AF_u8FC7_u6EE4_u5783_u573E_u90AE_u4EF6"><a href="#u793A_u4F8B_3A__u4F7F_u7528_u6734_u7D20_u8D1D_u53F6_u65AF_u8FC7_u6EE4_u5783_u573E_u90AE_u4EF6" class="headerlink" title="示例: 使用朴素贝叶斯过滤垃圾邮件"></a>示例: 使用朴素贝叶斯过滤垃圾邮件</h2><h3 id="u51C6_u5907_u6570_u636E_3A__u5207_u5206_u6587_u672C"><a href="#u51C6_u5907_u6570_u636E_3A__u5207_u5206_u6587_u672C" class="headerlink" title="准备数据: 切分文本"></a>准备数据: 切分文本</h3><p>[s.lower() for s in re.split(r’\W*’, str) if len(s) &gt; 2] </p>
<h3 id="u6D4B_u8BD5_u7B97_u6CD5_3A__u4F7F_u7528_u6734_u7D20_u8D1D_u53F6_u65AF_u8FDB_u884C_u4EA4_u53C9_u9A8C_u8BC1"><a href="#u6D4B_u8BD5_u7B97_u6CD5_3A__u4F7F_u7528_u6734_u7D20_u8D1D_u53F6_u65AF_u8FDB_u884C_u4EA4_u53C9_u9A8C_u8BC1" class="headerlink" title="测试算法: 使用朴素贝叶斯进行交叉验证"></a>测试算法: 使用朴素贝叶斯进行交叉验证</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">textParse</span><span class="params">(bigString)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> [s.lower() <span class="keyword">for</span> s <span class="keyword">in</span> re.split(<span class="string">r'\W*'</span>, bigString) <span class="keyword">if</span> len(s) &gt; <span class="number">2</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">spamTest</span><span class="params">()</span>:</span></span><br><span class="line">    docList = []</span><br><span class="line">    classList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">1</span>, <span class="number">26</span>):</span><br><span class="line">        wordList = textParse(open(<span class="string">'email/spam/%d.txt'</span> % i).read())</span><br><span class="line"><span class="comment">#         print wordList</span></span><br><span class="line">        docList.append(wordList)</span><br><span class="line">        classList.append(<span class="number">1</span>)</span><br><span class="line">        wordList = textParse(open(<span class="string">'email/ham/%d.txt'</span> % i).read())</span><br><span class="line">        docList.append(wordList)</span><br><span class="line">        classList.append(<span class="number">0</span>)</span><br><span class="line">    vocabList = createVocabList(docList)</span><br><span class="line">    trainingSet = range(<span class="number">50</span>)</span><br><span class="line">    testSet = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">10</span>):</span><br><span class="line">        randIndex = int(random.uniform(<span class="number">0</span>, len(trainingSet)))</span><br><span class="line">        testSet.append(trainingSet[randIndex])</span><br><span class="line">        <span class="keyword">del</span> trainingSet[randIndex]</span><br><span class="line">    trainMat = []</span><br><span class="line">    trainClasses = []</span><br><span class="line">    <span class="keyword">for</span> docIndex <span class="keyword">in</span> trainingSet:</span><br><span class="line">        trainMat.append(setOfWords2Vec(vocabList, docList[docIndex]))</span><br><span class="line">        trainClasses.append(classList[docIndex])</span><br><span class="line">    p0V, p1V, pSpam = trainNB02(trainMat, trainClasses)</span><br><span class="line">    errorCount = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> docIndex <span class="keyword">in</span> testSet:</span><br><span class="line">        wordVector = setOfWords2Vec(vocabList, docList[docIndex])</span><br><span class="line">        <span class="keyword">if</span> classifyNB(wordVector, p0V, p1V, pSpam) != classList[docIndex]:</span><br><span class="line">            errorCount += <span class="number">1</span></span><br><span class="line">            <span class="keyword">print</span> <span class="string">'the error rate is: '</span>, float(errorCount)/len(testSet)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spamTest()</span><br></pre></td></tr></table></figure>
<h2 id="u793A_u4F8B_3A__u4F7F_u7528_u6734_u7D20_u8D1D_u53F6_u65AF_u5206_u7C7B_u5668_u4ECE_u4E2A_u4EBA_u5E7F_u544A_u4E2D_u56DE_u53BB_u533A_u57DF_u503E_u5411"><a href="#u793A_u4F8B_3A__u4F7F_u7528_u6734_u7D20_u8D1D_u53F6_u65AF_u5206_u7C7B_u5668_u4ECE_u4E2A_u4EBA_u5E7F_u544A_u4E2D_u56DE_u53BB_u533A_u57DF_u503E_u5411" class="headerlink" title="示例: 使用朴素贝叶斯分类器从个人广告中回去区域倾向"></a>示例: 使用朴素贝叶斯分类器从个人广告中回去区域倾向</h2><h3 id="u6536_u96C6_u6570_u636E_3A__u5BFC_u5165RSS_u6E90"><a href="#u6536_u96C6_u6570_u636E_3A__u5BFC_u5165RSS_u6E90" class="headerlink" title="收集数据: 导入RSS源"></a>收集数据: 导入RSS源</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> feedparser</span><br><span class="line">ny = feedparser.parse(<span class="string">'http://newyork.craigslist.org/stp/index.rss'</span>)</span><br><span class="line">sy = feedparser.parse(<span class="string">'http://sfbay.craigslist.org/stp/index.rss'</span>)</span><br><span class="line">len(sy[<span class="string">'entries'</span>])</span><br></pre></td></tr></table></figure>
<pre><code>25
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calcMostFreq</span><span class="params">(vocabList, fullText)</span>:</span></span><br><span class="line">    freqDict = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> token <span class="keyword">in</span> vocabList:</span><br><span class="line">        freqDict[token] = fullText.count(token)</span><br><span class="line">    sortedFreq = sorted(freqDict, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">return</span> sortedFreq[:<span class="number">30</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">localWords</span><span class="params">(feed1, feed0)</span>:</span></span><br><span class="line">    docList = []</span><br><span class="line">    classList = []</span><br><span class="line">    fullText = []</span><br><span class="line"><span class="comment">#     print len(feed1['entries']), len(feed0['entries'])</span></span><br><span class="line">    minLen = min(len(feed1[<span class="string">'entries'</span>]), len(feed0[<span class="string">'entries'</span>]))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(minLen):</span><br><span class="line">        wordList = textParse(feed1[<span class="string">'entries'</span>][i][<span class="string">'summary'</span>])</span><br><span class="line">        docList.append(wordList)</span><br><span class="line">        fullText.extend(wordList)</span><br><span class="line">        classList.append(<span class="number">1</span>)</span><br><span class="line">        wordList = textParse(feed0[<span class="string">'entries'</span>][i][<span class="string">'summary'</span>])</span><br><span class="line">        docList.append(wordList)</span><br><span class="line">        fullText.extend(wordList)</span><br><span class="line">        classList.append(<span class="number">0</span>)</span><br><span class="line">    vocabList = createVocabList(docList)</span><br><span class="line"><span class="comment">#     print len(vocabList), len(fullText)</span></span><br><span class="line">    top30Words = calcMostFreq(vocabList, fullText)</span><br><span class="line"><span class="comment">#     print top30Words</span></span><br><span class="line">    <span class="keyword">for</span> pairW <span class="keyword">in</span> top30Words:</span><br><span class="line">        vocabList.remove(pairW)</span><br><span class="line">    trainingSet = range(<span class="number">2</span> * minLen)</span><br><span class="line">    testSet = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">20</span>):</span><br><span class="line">        randIndex = int(random.uniform(<span class="number">0</span>, len(trainingSet)))</span><br><span class="line">        testSet.append(trainingSet[randIndex])</span><br><span class="line">        <span class="keyword">del</span> trainingSet[randIndex]</span><br><span class="line">    trainMat = []</span><br><span class="line">    trainClass = []</span><br><span class="line">    <span class="keyword">for</span> docIndex <span class="keyword">in</span> trainingSet:</span><br><span class="line">        trainMat.append(bagOfWord2VecMN(vocabList, docList[docIndex]))</span><br><span class="line">        trainClass.append(classList[docIndex])</span><br><span class="line">    p0V, p1V, pSpam = trainNB02(trainMat, trainClass)</span><br><span class="line">    errorCount = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> docIndex <span class="keyword">in</span> testSet:</span><br><span class="line">        wordVector = bagOfWord2VecMN(vocabList, docList[docIndex])</span><br><span class="line">        <span class="keyword">if</span> classifyNB(wordVector, p0V, p1V, pSpam) != classList[docIndex]:</span><br><span class="line">            errorCount += <span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"the error rate is: "</span>, float(errorCount)/len(testSet)</span><br><span class="line">    <span class="keyword">return</span> vocabList, p0V, p1V</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a, b, c = localWords(ny, sy)</span><br></pre></td></tr></table></figure>
<pre><code>the error rate is:  0.25
</code></pre><h3 id="u5206_u6790_u6570_u636E_3A__u663E_u793A_u5730_u57DF_u76F8_u5173_u7684_u7528_u8BCD"><a href="#u5206_u6790_u6570_u636E_3A__u663E_u793A_u5730_u57DF_u76F8_u5173_u7684_u7528_u8BCD" class="headerlink" title="分析数据: 显示地域相关的用词"></a>分析数据: 显示地域相关的用词</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTopWords</span><span class="params">(ny, sf)</span>:</span></span><br><span class="line">    vocabList, p0V, p1V = localWords(ny, sy)</span><br><span class="line">    topNY = []</span><br><span class="line">    topSF = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(p0V)):</span><br><span class="line">        topNY.append((vocabList[i], p1V[i]))</span><br><span class="line">        topSF.append((vocabList[i], p0V[i]))</span><br><span class="line">    sortedNY = sorted(topNY, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">    sortedSF = sorted(topSF, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"NY------------"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">8</span>):</span><br><span class="line">        <span class="keyword">print</span> sortedNY[i][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"SF------------"</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">8</span>):</span><br><span class="line">        <span class="keyword">print</span> sortedSF[i][<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getTopWords(ny, sy)</span><br></pre></td></tr></table></figure>
<pre><code>the error rate is:  0.15
NY------------
enjoyable
asian
hanging
shot
95748
technique
ucsc
languages
SF------------
all
focus
month
enjoyable
doujins
hanging
shot
certainly
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u57FA_u4E8E_u6982_u7387_u8BBA_u7684_u5206_u7C7B_u65B9_u6CD5_3A__u6734_u7D20_u8D1D_u53F6_u65AF"><a href="#u57FA_u4E8E_u6982_u7387_u8BBA_u7684_u5206_u7C7B_u65B9_u6CD5_3A__u6734_u7D20_u8D1D_u53F6_u65AF" class="headerlink" title="基于概率论的分类方法: 朴素贝叶斯"></a>基于概率论的分类方法: 朴素贝叶斯</h1><p>naive bayes是基于贝叶斯定理与特征条件独立假设的分类方法.对于给定的训练数据集,首先基于特征条件假设学习输入/输出的联合概率分布:然后基于此模型,对给定的输入x,利用贝叶斯定理求出后验概率最大的输出y.naive bayes法实现简单,学习与预测的效率都很高,是一种常用的方法<br>]]>
    
    </summary>
    
      <category term="Data mining" scheme="http://pzengseu.github.io/tags/Data-mining/"/>
    
      <category term="Machine learning" scheme="http://pzengseu.github.io/tags/Machine-learning/"/>
    
      <category term="naive bayes" scheme="http://pzengseu.github.io/tags/naive-bayes/"/>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Maching learning in action，决策树(decision tree)ID3算法笔记]]></title>
    <link href="http://pzengseu.github.io/2016/03/01/data_mining/decisionTree/"/>
    <id>http://pzengseu.github.io/2016/03/01/data_mining/decisionTree/</id>
    <published>2016-03-01T01:01:45.000Z</published>
    <updated>2016-03-01T10:35:35.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u51B3_u7B56_u6811_28decision_tree_29"><a href="#u51B3_u7B56_u6811_28decision_tree_29" class="headerlink" title="决策树(decision tree)"></a>决策树(decision tree)</h1><p>决策树模型呈树形结构,在分类问题中,表示基于特征对实例进行分类的过程,它可以认为是if-then规则的集合,也可以认为是定义在特征空间与类空间上的条件概率分布.<br><a id="more"></a></p>
<h2 id="u51B3_u7B56_u6811_u7684_u6784_u9020"><a href="#u51B3_u7B56_u6811_u7684_u6784_u9020" class="headerlink" title="决策树的构造"></a>决策树的构造</h2><p>常用的算法是ID3, C4.5和CART算法.这里使用ID3算法</p>
<h3 id="u4FE1_u606F_u589E_u76CA"><a href="#u4FE1_u606F_u589E_u76CA" class="headerlink" title="信息增益"></a>信息增益</h3><p>在划分数据集之前之后信息发生的变化称为信息增益.信息增益最高的特征为最好的选择.ID3算法使用信息增益信息构造决策树,C4.5使用信息增益比.</p>
<h4 id="u8BA1_u7B97_u9999_u519C_u71B5_28_u7B80_u79F0_u71B5_29"><a href="#u8BA1_u7B97_u9999_u519C_u71B5_28_u7B80_u79F0_u71B5_29" class="headerlink" title="计算香农熵(简称熵)"></a>计算香农熵(简称熵)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> log</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">calShannonEnt</span><span class="params">(dataSet)</span>:</span></span><br><span class="line">    numEntries = len(dataSet)</span><br><span class="line">    labelCounts = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> featVec <span class="keyword">in</span> dataSet:</span><br><span class="line">        currentLabel = featVec[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">if</span> currentLabel <span class="keyword">not</span> <span class="keyword">in</span> labelCounts:</span><br><span class="line">            labelCounts[currentLabel] = <span class="number">0</span></span><br><span class="line">        labelCounts[currentLabel] += <span class="number">1</span></span><br><span class="line">    shannonEnt = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> labelCounts:</span><br><span class="line">        prob = float(labelCounts[key])/numEntries</span><br><span class="line">        shannonEnt -= prob * log(prob, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">return</span> shannonEnt</span><br></pre></td></tr></table></figure>
<h4 id="u6570_u636E_u96C6"><a href="#u6570_u636E_u96C6" class="headerlink" title="数据集"></a>数据集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createDataSet</span><span class="params">()</span>:</span></span><br><span class="line">    dataSet = [[<span class="number">1</span>, <span class="number">1</span>, <span class="string">'yes'</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">1</span>, <span class="string">'yes'</span>],</span><br><span class="line">              [<span class="number">1</span>, <span class="number">0</span>, <span class="string">'no'</span>],</span><br><span class="line">              [<span class="number">0</span>, <span class="number">1</span>, <span class="string">'no'</span>],</span><br><span class="line">              [<span class="number">0</span>, <span class="number">1</span>, <span class="string">'no'</span>]]</span><br><span class="line">    labels = [<span class="string">'no surfacing'</span>, <span class="string">'flippers'</span>]</span><br><span class="line">    <span class="keyword">return</span> dataSet, labels</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">myDat, labels = createDataSet()</span><br><span class="line">myDat</span><br></pre></td></tr></table></figure>
<pre><code>[[1, 1, &apos;yes&apos;], [1, 1, &apos;yes&apos;], [1, 0, &apos;no&apos;], [0, 1, &apos;no&apos;], [0, 1, &apos;no&apos;]]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calShannonEnt(myDat)</span><br></pre></td></tr></table></figure>
<pre><code>0.9709505944546686
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">myDat[<span class="number">0</span>][-<span class="number">1</span>] = <span class="string">'maybe'</span></span><br><span class="line">myDat</span><br></pre></td></tr></table></figure>
<pre><code>[[1, 1, &apos;maybe&apos;], [1, 1, &apos;yes&apos;], [1, 0, &apos;no&apos;], [0, 1, &apos;no&apos;], [0, 1, &apos;no&apos;]]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calShannonEnt(myDat)</span><br></pre></td></tr></table></figure>
<pre><code>1.3709505944546687
</code></pre><h3 id="u5212_u5206_u6570_u636E_u96C6"><a href="#u5212_u5206_u6570_u636E_u96C6" class="headerlink" title="划分数据集"></a>划分数据集</h3><h4 id="u6309_u7167_u7ED9_u5B9A_u7279_u5F81_u5212_u5206_u6570_u636E_u96C6"><a href="#u6309_u7167_u7ED9_u5B9A_u7279_u5F81_u5212_u5206_u6570_u636E_u96C6" class="headerlink" title="按照给定特征划分数据集"></a>按照给定特征划分数据集</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">splitDataSet</span><span class="params">(dataSet, axis, value)</span>:</span></span><br><span class="line">    retDataSet = []</span><br><span class="line">    <span class="keyword">for</span> featVec <span class="keyword">in</span> dataSet:</span><br><span class="line">        <span class="keyword">if</span> featVec[axis] == value:</span><br><span class="line">            retDataSet.append(featVec[:axis]+featVec[axis+<span class="number">1</span>:])</span><br><span class="line"><span class="comment">#     print retDataSet</span></span><br><span class="line">    <span class="keyword">return</span> retDataSet</span><br></pre></td></tr></table></figure>
<p>这里使用的是retDataSet.append(featVec[:]),简化了书中的代码.</p>
<p><strong> Python语言不考虑内存分配的问题,Python语言在函数中传递的是列表的引用,在函数内部修改对列表的引用,将会影响该列表对象的整个生存周期,例子如下: </strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    c=[]</span><br><span class="line">    d=[]</span><br><span class="line">    c.append(a[:])</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">1</span>] = <span class="string">'test'</span></span><br><span class="line">    d.append(b)</span><br><span class="line">    d[<span class="number">0</span>][<span class="number">1</span>] = <span class="string">'test'</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">b=[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">test(a, b)</span><br><span class="line"><span class="keyword">print</span> a</span><br><span class="line"><span class="keyword">print</span> b</span><br></pre></td></tr></table></figure>
<pre><code>[1, 2, 3]
[4, &apos;test&apos;, 6]
</code></pre><p>可见a变了,而b没变</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">myDat, labels = createDataSet()</span><br><span class="line">myDat</span><br></pre></td></tr></table></figure>
<pre><code>[[1, 1, &apos;yes&apos;], [1, 1, &apos;yes&apos;], [1, 0, &apos;no&apos;], [0, 1, &apos;no&apos;], [0, 1, &apos;no&apos;]]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">splitDataSet(myDat,<span class="number">0</span>, <span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<pre><code>[[1, &apos;yes&apos;], [1, &apos;yes&apos;], [0, &apos;no&apos;]]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">splitDataSet(myDat,<span class="number">0</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<pre><code>[[1, &apos;no&apos;], [1, &apos;no&apos;]]
</code></pre><h4 id="u9009_u62E9_u6700_u597D_u7684_u6570_u636E_u5212_u5206_u65B9_u5F0F"><a href="#u9009_u62E9_u6700_u597D_u7684_u6570_u636E_u5212_u5206_u65B9_u5F0F" class="headerlink" title="选择最好的数据划分方式"></a>选择最好的数据划分方式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">chooseBestFeatureToSplit</span><span class="params">(dataSet)</span>:</span></span><br><span class="line">    numFeatures = len(dataSet[<span class="number">0</span>]) - <span class="number">1</span></span><br><span class="line">    baseEntropy = calShannonEnt(dataSet)</span><br><span class="line">    bestInfoGain = <span class="number">0.0</span></span><br><span class="line">    bestFeature = -<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(numFeatures):</span><br><span class="line">        featList = [example[i] <span class="keyword">for</span> example <span class="keyword">in</span> dataSet]</span><br><span class="line">        uniqueVals = set(featList)</span><br><span class="line">        newEntropy = <span class="number">0.0</span></span><br><span class="line">        <span class="keyword">for</span> value <span class="keyword">in</span> uniqueVals:</span><br><span class="line">            subDataSet = splitDataSet(dataSet, i, value)</span><br><span class="line">            prob = len(subDataSet) / float(len(dataSet))</span><br><span class="line">            newEntropy += prob * calShannonEnt(subDataSet)</span><br><span class="line">        infoGain = baseEntropy - newEntropy</span><br><span class="line">        <span class="keyword">if</span> infoGain &gt; bestInfoGain:</span><br><span class="line">            bestInfoGain = infoGain</span><br><span class="line">            bestFeature = i</span><br><span class="line">    <span class="keyword">return</span> bestFeature</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chooseBestFeatureToSplit(myDat)</span><br></pre></td></tr></table></figure>
<pre><code>0
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myDat</span><br></pre></td></tr></table></figure>
<pre><code>[[1, 1, &apos;yes&apos;], [1, 1, &apos;yes&apos;], [1, 0, &apos;no&apos;], [0, 1, &apos;no&apos;], [0, 1, &apos;no&apos;]]
</code></pre><h3 id="u9012_u5F52_u6784_u5EFA_u51B3_u7B56_u6811"><a href="#u9012_u5F52_u6784_u5EFA_u51B3_u7B56_u6811" class="headerlink" title="递归构建决策树"></a>递归构建决策树</h3><h4 id="u591A_u6570_u8868_u51B3"><a href="#u591A_u6570_u8868_u51B3" class="headerlink" title="多数表决"></a>多数表决</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">majorityCnt</span><span class="params">(classList)</span>:</span></span><br><span class="line">    classCount = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> vote <span class="keyword">in</span> classList:</span><br><span class="line">        <span class="keyword">if</span> vote <span class="keyword">not</span> <span class="keyword">in</span> classCount.keys:</span><br><span class="line">            classCount[vote] = <span class="number">0</span></span><br><span class="line">        classCount[vote] += <span class="number">1</span></span><br><span class="line">    sortedClassCount = sortd(classCount, key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reversed=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">return</span> sortedClassCount[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<h4 id="u521B_u5EFA_u6811"><a href="#u521B_u5EFA_u6811" class="headerlink" title="创建树"></a>创建树</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createTree</span><span class="params">(dataSet, labels)</span>:</span></span><br><span class="line">    classList = [example[-<span class="number">1</span>] <span class="keyword">for</span> example <span class="keyword">in</span> dataSet]</span><br><span class="line">    <span class="keyword">if</span> classList.count(classList[<span class="number">0</span>]) == len(classList):</span><br><span class="line">        <span class="keyword">return</span> classList[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> len(dataSet[<span class="number">0</span>]) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> majorityCnt(classList)</span><br><span class="line">    bestFeat = chooseBestFeatureToSplit(dataSet)</span><br><span class="line"><span class="comment">#     print bestFeat, dataSet</span></span><br><span class="line">    bestFeatLabel = labels[bestFeat]</span><br><span class="line">    myTree = &#123;bestFeatLabel:&#123;&#125;&#125;</span><br><span class="line">    <span class="keyword">del</span> labels[bestFeat]</span><br><span class="line">    featValues = [example[bestFeat] <span class="keyword">for</span> example <span class="keyword">in</span> dataSet]</span><br><span class="line">    uniqueVals = set(featValues)</span><br><span class="line">    <span class="keyword">for</span> value <span class="keyword">in</span> uniqueVals:</span><br><span class="line">        subLabels = labels[:]</span><br><span class="line">        myTree[bestFeatLabel][value] = createTree(splitDataSet(dataSet, bestFeat, value), subLabels)</span><br><span class="line">    <span class="keyword">return</span> myTree</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">myDat, labels = createDataSet()</span><br><span class="line">myTree = createTree(myDat, labels)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myTree</span><br></pre></td></tr></table></figure>
<pre><code>{&apos;no surfacing&apos;: {0: &apos;no&apos;, 1: {&apos;flippers&apos;: {0: &apos;no&apos;, 1: &apos;yes&apos;}}}}
</code></pre><h2 id="u5728Python_u4E2D_u4F7F_u7528Matplotlib_u7ED8_u5236_u6811_u5F62_u56FE"><a href="#u5728Python_u4E2D_u4F7F_u7528Matplotlib_u7ED8_u5236_u6811_u5F62_u56FE" class="headerlink" title="在Python中使用Matplotlib绘制树形图"></a>在Python中使用Matplotlib绘制树形图</h2><h3 id="Matplotlib_u6CE8_u89E3"><a href="#Matplotlib_u6CE8_u89E3" class="headerlink" title="Matplotlib注解"></a>Matplotlib注解</h3><p>使用文本注解绘制树节点</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">decisionNode = dict(boxstyle=<span class="string">"sawtooth"</span>, fc=<span class="string">"0.8"</span>)</span><br><span class="line">leafNode = dict(boxstyle=<span class="string">"round4"</span>, fc=<span class="string">"0.8"</span>)</span><br><span class="line">arrow_args = dict(arrowstyle=<span class="string">"&lt;-"</span>)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotNode</span><span class="params">(nodeTxt, centerPt, parentPt, nodeType)</span>:</span></span><br><span class="line">    createPlot.ax1.annotate(nodeTxt, xy=parentPt, xycoords=<span class="string">'axes fraction'</span>, xytext=centerPt, </span><br><span class="line">                            textcoords=<span class="string">'axes fraction'</span>, va=<span class="string">'center'</span>, ha=<span class="string">'center'</span>, bbox=nodeType,</span><br><span class="line">                           arrowprops=arrow_args)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createPlot</span><span class="params">()</span>:</span></span><br><span class="line">    fig = plt.figure(<span class="number">1</span>, facecolor=<span class="string">'white'</span>)</span><br><span class="line">    fig.clf()</span><br><span class="line">    createPlot.ax1 = plt.subplot(<span class="number">111</span>, frameon=<span class="keyword">False</span>)</span><br><span class="line">    plotNode(<span class="string">u'decision node'</span>, (<span class="number">0.5</span>, <span class="number">0.1</span>), (<span class="number">0.1</span>, <span class="number">0.5</span>), decisionNode)</span><br><span class="line">    plotNode(<span class="string">u'leafnode'</span>, (<span class="number">0.8</span>, <span class="number">0.1</span>), (<span class="number">0.3</span>, <span class="number">0.8</span>), leafNode)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createPlot()</span><br></pre></td></tr></table></figure>
<p><img src="/images/MLIA/3_6.png" alt=""></p>
<h3 id="u6784_u9020_u6CE8_u91CA_u89E3"><a href="#u6784_u9020_u6CE8_u91CA_u89E3" class="headerlink" title="构造注释解"></a>构造注释解</h3><h4 id="u83B7_u53D6_u53F6_u8282_u70B9_u7684_u6570_u76EE_u548C_u6811_u7684_u5C42_u6570"><a href="#u83B7_u53D6_u53F6_u8282_u70B9_u7684_u6570_u76EE_u548C_u6811_u7684_u5C42_u6570" class="headerlink" title="获取叶节点的数目和树的层数"></a>获取叶节点的数目和树的层数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getNumLeafs</span><span class="params">(myTree)</span>:</span></span><br><span class="line">    numLeafs = <span class="number">0</span></span><br><span class="line">    firstStr = myTree.keys()[<span class="number">0</span>]</span><br><span class="line">    secondDict = myTree[firstStr]</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> secondDict.keys():</span><br><span class="line">        <span class="keyword">if</span> type(secondDict[key]).__name__ == <span class="string">'dict'</span>:</span><br><span class="line">            numLeafs += getNumLeafs(secondDict[key])</span><br><span class="line"><span class="comment">#             print numLeafs</span></span><br><span class="line">        <span class="keyword">else</span>: numLeafs += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> numLeafs        </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getTreeDepth</span><span class="params">(myTree)</span>:</span></span><br><span class="line">    maxDepth = <span class="number">0</span></span><br><span class="line">    firstStr = myTree.keys()[<span class="number">0</span>]</span><br><span class="line">    secondDict = myTree[firstStr]</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> secondDict.keys():</span><br><span class="line">        <span class="keyword">if</span> type(secondDict[key]).__name__ == <span class="string">'dict'</span>:</span><br><span class="line">            thisDepth = <span class="number">1</span> + getTreeDepth(secondDict[key])</span><br><span class="line">        <span class="keyword">else</span> : thisDepth = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> thisDepth &gt; maxDepth: maxDepth = thisDepth</span><br><span class="line">    <span class="keyword">return</span> maxDepth</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">retrieveTree</span><span class="params">(i)</span>:</span></span><br><span class="line">    listOfTrees = [&#123;<span class="string">'no surfacing'</span>: &#123;<span class="number">0</span>: <span class="string">'no'</span>, <span class="number">1</span>: &#123;<span class="string">'flippers'</span>:&#123;<span class="number">0</span>: <span class="string">'no'</span>, <span class="number">1</span>: <span class="string">'yes'</span>&#125;&#125;&#125;&#125;,</span><br><span class="line">                   &#123;<span class="string">'no surfacing'</span>: &#123;<span class="number">0</span>: <span class="string">'no'</span>, <span class="number">1</span>: &#123;<span class="string">'flippers'</span>:&#123;<span class="number">0</span>: &#123;<span class="string">'head'</span>:&#123;<span class="number">0</span>: <span class="string">'no'</span>, <span class="number">1</span>: <span class="string">'yes'</span>&#125;&#125;, <span class="number">1</span>: <span class="string">'no'</span>&#125;&#125;&#125;&#125;]</span><br><span class="line">    <span class="keyword">return</span> listOfTrees[i]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getNumLeafs(retrieveTree(<span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<pre><code>3
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getNumLeafs(retrieveTree(<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<pre><code>4
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getTreeDepth(retrieveTree(<span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<pre><code>2
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getTreeDepth(retrieveTree(<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<pre><code>3
</code></pre><h4 id="u7ED8_u5236_u6811"><a href="#u7ED8_u5236_u6811" class="headerlink" title="绘制树"></a>绘制树</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在父子节点间填充文本消息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotMidText</span><span class="params">(cntrPt, parentPt, txtString)</span>:</span></span><br><span class="line">    xMid = (parentPt[<span class="number">0</span>] - cntrPt[<span class="number">0</span>])/<span class="number">2.0</span> + cntrPt[<span class="number">0</span>]</span><br><span class="line">    yMid = (parentPt[<span class="number">1</span>] - cntrPt[<span class="number">1</span>])/<span class="number">2.0</span> + cntrPt[<span class="number">1</span>]</span><br><span class="line">    createPlot.ax1.text(xMid, yMid, txtString)</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plotTree</span><span class="params">(myTree, parentPt, nodeTxt)</span>:</span></span><br><span class="line">    numLeafs = getNumLeafs(myTree)</span><br><span class="line">    depth = getTreeDepth(myTree)</span><br><span class="line">    firstStr = myTree.keys()[<span class="number">0</span>]</span><br><span class="line">    cntrPt = (plotTree.xOff + (<span class="number">1.0</span> + float(numLeafs))/<span class="number">2.0</span>/plotTree.totalW, plotTree.yOff)</span><br><span class="line">    plotMidText(cntrPt, parentPt, nodeTxt)</span><br><span class="line">    plotNode(firstStr, cntrPt, parentPt, decisionNode)</span><br><span class="line">    secondDict = myTree[firstStr]</span><br><span class="line">    plotTree.yOff -= <span class="number">1.0</span>/plotTree.totalD</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> secondDict.keys():</span><br><span class="line">        <span class="keyword">if</span> type(secondDict[key]).__name__ == <span class="string">'dict'</span>:</span><br><span class="line">            plotTree(secondDict[key], cntrPt, str(key))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            plotTree.xOff += <span class="number">1.0</span>/plotTree.totalW</span><br><span class="line">            plotNode(secondDict[key], (plotTree.xOff, plotTree.yOff), cntrPt, leafNode)</span><br><span class="line">            plotMidText((plotTree.xOff, plotTree.yOff), cntrPt, str(key))</span><br><span class="line">    plotTree.yOff += <span class="number">1.0</span>/plotTree.totalD</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createPlot</span><span class="params">(inTree)</span>:</span></span><br><span class="line">    fig = plt.figure(<span class="number">1</span>, facecolor=<span class="string">'white'</span>)</span><br><span class="line">    fig.clf()</span><br><span class="line">    axprops = dict(xticks=[], yticks=[])</span><br><span class="line">    createPlot.ax1 = plt.subplot(<span class="number">111</span>, frameon=<span class="keyword">False</span>, **axprops)</span><br><span class="line">    plotTree.totalW = float(getNumLeafs(inTree))</span><br><span class="line">    plotTree.totalD = float(getTreeDepth(inTree))</span><br><span class="line">    plotTree.xOff = -<span class="number">0.5</span>/plotTree.totalW</span><br><span class="line">    plotTree.yOff = <span class="number">1.0</span></span><br><span class="line">    plotTree(inTree, (<span class="number">0.5</span>, <span class="number">1.0</span>), <span class="string">''</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createPlot(retrieveTree(<span class="number">0</span>))</span><br></pre></td></tr></table></figure>
<p><img src="/images/MLIA/3_7.png" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createPlot(retrieveTree(<span class="number">1</span>))</span><br></pre></td></tr></table></figure>
<p><img src="/images/MLIA/3_7_2.png" alt=""></p>
<h2 id="u6D4B_u8BD5_u548C_u5B58_u50A8_u5206_u7C7B_u5668"><a href="#u6D4B_u8BD5_u548C_u5B58_u50A8_u5206_u7C7B_u5668" class="headerlink" title="测试和存储分类器"></a>测试和存储分类器</h2><h3 id="u6D4B_u8BD5_u7B97_u6CD5__3A__u4F7F_u7528_u51B3_u7B56_u6811_u6267_u884C_u5206_u7C7B"><a href="#u6D4B_u8BD5_u7B97_u6CD5__3A__u4F7F_u7528_u51B3_u7B56_u6811_u6267_u884C_u5206_u7C7B" class="headerlink" title="测试算法 : 使用决策树执行分类"></a>测试算法 : 使用决策树执行分类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify</span><span class="params">(inputTree, featLabels, testVec)</span>:</span></span><br><span class="line">    firstStr = inputTree.keys()[<span class="number">0</span>]</span><br><span class="line">    secondStr = inputTree[firstStr]</span><br><span class="line">    featIndex = featLabels.index(firstStr)</span><br><span class="line">    <span class="keyword">for</span> key <span class="keyword">in</span> secondStr.keys():</span><br><span class="line">        <span class="keyword">if</span> testVec[featIndex] == key:</span><br><span class="line">            <span class="keyword">if</span> type(secondStr[key]).__name__ == <span class="string">'dict'</span>:</span><br><span class="line">                classLabel = classify(secondStr[key], featLabels, testVec)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                classLabel = secondStr[key]</span><br><span class="line">    <span class="keyword">return</span> classLabel</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myDat, labels = createDataSet()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myTree = retrieveTree(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classify(myTree, labels, [<span class="number">1</span>,<span class="number">1</span>])</span><br></pre></td></tr></table></figure>
<pre><code>&apos;yes&apos;
</code></pre><h3 id="u4F7F_u7528_u7B97_u6CD5_3A__u51B3_u7B56_u6811_u7684_u5B58_u50A8"><a href="#u4F7F_u7528_u7B97_u6CD5_3A__u51B3_u7B56_u6811_u7684_u5B58_u50A8" class="headerlink" title="使用算法: 决策树的存储"></a>使用算法: 决策树的存储</h3><p><strong> 使用pickle模块存储决策树 </strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">storeTree</span><span class="params">(inputTree, filename)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> pickle</span><br><span class="line">    fw = open(filename, <span class="string">'w'</span>)</span><br><span class="line">    pickle.dump(inputTree, fw)</span><br><span class="line">    fw.close</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grabTree</span><span class="params">(filename)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> pickle</span><br><span class="line">    fr = open(filename)</span><br><span class="line">    <span class="keyword">return</span> pickle.load(fr)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">storeTree(myTree, <span class="string">'test.txt'</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grabTree(<span class="string">'test.txt'</span>)</span><br></pre></td></tr></table></figure>
<pre><code>{&apos;no surfacing&apos;: {0: &apos;no&apos;, 1: {&apos;flippers&apos;: {0: &apos;no&apos;, 1: &apos;yes&apos;}}}}
</code></pre><h2 id="u4F7F_u7528_u51B3_u7B56_u6811_u9884_u6D4B_u9690_u5F62_u773C_u775B_u7C7B_u578B"><a href="#u4F7F_u7528_u51B3_u7B56_u6811_u9884_u6D4B_u9690_u5F62_u773C_u775B_u7C7B_u578B" class="headerlink" title="使用决策树预测隐形眼睛类型"></a>使用决策树预测隐形眼睛类型</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fr = open(<span class="string">'lenses.txt'</span>)</span><br><span class="line">lenses = [inst.strip().split(<span class="string">'\t'</span>) <span class="keyword">for</span> inst <span class="keyword">in</span> fr.readlines()]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lensesLabels = [<span class="string">'age'</span>, <span class="string">'prescript'</span>, <span class="string">'astigmatic'</span>, <span class="string">'tearRate'</span>]</span><br><span class="line">lensesTree = createTree(lenses, lensesLabels)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lensesTree</span><br></pre></td></tr></table></figure>
<pre><code>{&apos;tearRate&apos;: {&apos;normal&apos;: {&apos;astigmatic&apos;: {&apos;no&apos;: {&apos;age&apos;: {&apos;pre&apos;: &apos;soft&apos;,
      &apos;presbyopic&apos;: {&apos;prescript&apos;: {&apos;hyper&apos;: &apos;soft&apos;, &apos;myope&apos;: &apos;no lenses&apos;}},
      &apos;young&apos;: &apos;soft&apos;}},
    &apos;yes&apos;: {&apos;prescript&apos;: {&apos;hyper&apos;: {&apos;age&apos;: {&apos;pre&apos;: &apos;no lenses&apos;,
        &apos;presbyopic&apos;: &apos;no lenses&apos;,
        &apos;young&apos;: &apos;hard&apos;}},
      &apos;myope&apos;: &apos;hard&apos;}}}},
  &apos;reduced&apos;: &apos;no lenses&apos;}}
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">createPlot(lensesTree)</span><br></pre></td></tr></table></figure>
<p><img src="/images/MLIA/3_8.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u51B3_u7B56_u6811_28decision_tree_29"><a href="#u51B3_u7B56_u6811_28decision_tree_29" class="headerlink" title="决策树(decision tree)"></a>决策树(decision tree)</h1><p>决策树模型呈树形结构,在分类问题中,表示基于特征对实例进行分类的过程,它可以认为是if-then规则的集合,也可以认为是定义在特征空间与类空间上的条件概率分布.<br>]]>
    
    </summary>
    
      <category term="Data mining" scheme="http://pzengseu.github.io/tags/Data-mining/"/>
    
      <category term="ID3" scheme="http://pzengseu.github.io/tags/ID3/"/>
    
      <category term="Machine learning" scheme="http://pzengseu.github.io/tags/Machine-learning/"/>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Maching learning in action，KNN(k-nearest neighbor)算法笔记]]></title>
    <link href="http://pzengseu.github.io/2016/02/25/data_mining/KNN/"/>
    <id>http://pzengseu.github.io/2016/02/25/data_mining/KNN/</id>
    <published>2016-02-25T11:41:45.000Z</published>
    <updated>2016-03-01T10:32:25.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Maching_learning_in_action_uFF0CKNN_28k-nearest_neighbor_29_u7B97_u6CD5_u7B14_u8BB0"><a href="#Maching_learning_in_action_uFF0CKNN_28k-nearest_neighbor_29_u7B97_u6CD5_u7B14_u8BB0" class="headerlink" title="Maching learning in action，KNN(k-nearest neighbor)算法笔记"></a>Maching learning in action，KNN(k-nearest neighbor)算法笔记</h2><h3 id="KNN_u7B97_u6CD5_u6982_u8FF0"><a href="#KNN_u7B97_u6CD5_u6982_u8FF0" class="headerlink" title="KNN算法概述"></a>KNN算法概述</h3><p>存在一个样本数据集合，也称作训练样本集，并且样本集中每个数据都存在标签，即我们知道样本集中每一数据与所属分类的对应关系．输入没有标签的数据后，将新数据的每个特征值与样本集中数据对应的特征进行比较，然后算法提取样本集中特征最相似的数据，这就是KNN算法Ｋ的出处．<br><a id="more"></a></p>
<h4 id="KNN_u7B97_u6CD5_u4E00_u822C_u6D41_u7A0B"><a href="#KNN_u7B97_u6CD5_u4E00_u822C_u6D41_u7A0B" class="headerlink" title="KNN算法一般流程"></a>KNN算法一般流程</h4><ul>
<li>收集数据: 可以使用任何方法</li>
<li>准备数据: 距离计算所需要的数值，　最好是结构化的数据格式．</li>
<li>分析数据: 可以使用任何方法</li>
<li>训练算法: 此步骤不适合用于KNN算法</li>
<li>测试数据: 计算错误率</li>
<li>使用算法: 首先需要输入样本数据和结构化的输出结果，然后运行KNN算法判定输入数据分别属于哪个分类，最后应用对计算出的分类执行后续的处理</li>
</ul>
<h4 id="u4F7F_u7528python_u5BFC_u5165_u6570_u636E"><a href="#u4F7F_u7528python_u5BFC_u5165_u6570_u636E" class="headerlink" title="使用python导入数据"></a>使用python导入数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createDataSet</span><span class="params">()</span>:</span></span><br><span class="line">    group = np.array([[<span class="number">1.0</span>, <span class="number">1.1</span>], [<span class="number">1.0</span>, <span class="number">1.0</span>], [<span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0.1</span>]])</span><br><span class="line">    labels = [<span class="string">'A'</span>, <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'B'</span>]</span><br><span class="line">    <span class="keyword">return</span> group, labels</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">group, labels = createDataSet()</span><br><span class="line">group, labels</span><br></pre></td></tr></table></figure>
<pre><code>(array([[ 1. ,  1.1],
        [ 1. ,  1. ],
        [ 0. ,  0. ],
        [ 0. ,  0.1]]), [&apos;A&apos;, &apos;A&apos;, &apos;B&apos;, &apos;B&apos;])
</code></pre><h4 id="u5B9E_u65BDKNN_u7B97_u6CD5"><a href="#u5B9E_u65BDKNN_u7B97_u6CD5" class="headerlink" title="实施KNN算法"></a>实施KNN算法</h4><p>对未知类别属性的数据集中的每个点依次执行一下操作：</p>
<ul>
<li>计算已知类别数据集中的点与当前点之间的距离</li>
<li>排序</li>
<li>选取距离最小的k个点</li>
<li>确定前k个点所在类别的出现频率</li>
<li>返回前k个点出现频率最高的类别作为当前点的预测分类</li>
</ul>
<p><strong>这样找出k个点，如果数据量特别大．显然是不可取的，这里可以改进成kd树的数据结构</strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classify0</span><span class="params">(inX, dataSet, labels, k)</span>:</span></span><br><span class="line">    dataSetSize = dataSet.shape[<span class="number">0</span>]</span><br><span class="line">    diffMat = np.tile(inX, (dataSetSize, <span class="number">1</span>)) - dataSet</span><br><span class="line">    sqDiffMat = diffMat**<span class="number">2</span></span><br><span class="line">    sqDistances = sqDiffMat.sum(axis=<span class="number">1</span>)</span><br><span class="line">    distances = sqDistances ** <span class="number">0.5</span></span><br><span class="line">    sortedDistIndices = distances.argsort()</span><br><span class="line">    classCount=&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(k):</span><br><span class="line">        voteLables = labels[sortedDistIndices[i]]</span><br><span class="line">        classCount[voteLables] = classCount.get(voteLables, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">        </span><br><span class="line">    sortedClassCount = sorted(classCount.iteritems(), key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="keyword">True</span>)</span><br><span class="line"><span class="comment">#     print classCount</span></span><br><span class="line">    <span class="keyword">return</span> sortedClassCount[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<p><strong> 这里的sorted函数书中写的是operator.itemgetter(1),这里使用lambda更好 </strong></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classify0([<span class="number">0</span>, <span class="number">0</span>], group, labels, <span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<pre><code>{&apos;A&apos;: 1, &apos;B&apos;: 2}





&apos;B&apos;
</code></pre><h3 id="u4F7F_u7528KNN_u7B97_u6CD5_u6539_u8FDB_u7EA6_u4F1A_u7F51_u7AD9_u7684_u914D_u5BF9_u6548_u679C"><a href="#u4F7F_u7528KNN_u7B97_u6CD5_u6539_u8FDB_u7EA6_u4F1A_u7F51_u7AD9_u7684_u914D_u5BF9_u6548_u679C" class="headerlink" title="使用KNN算法改进约会网站的配对效果"></a>使用KNN算法改进约会网站的配对效果</h3><h4 id="u51C6_u5907_u6570_u636E_uFF1A_u4ECE_u6587_u672C_u6587_u4EF6_u4E2D_u89E3_u6790_u6570_u636E"><a href="#u51C6_u5907_u6570_u636E_uFF1A_u4ECE_u6587_u672C_u6587_u4EF6_u4E2D_u89E3_u6790_u6570_u636E" class="headerlink" title="准备数据：从文本文件中解析数据"></a>准备数据：从文本文件中解析数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file2matrix</span><span class="params">(filename)</span>:</span></span><br><span class="line">    fr = open(filename)</span><br><span class="line">    arrayOLines  = fr.readlines()</span><br><span class="line">    numberOfLines = len(arrayOLines)</span><br><span class="line">    returnMat = np.zeros((numberOfLines, <span class="number">3</span>))</span><br><span class="line">    classLabelVector = []</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> arrayOLines:</span><br><span class="line">        line = line.strip()</span><br><span class="line">        listFromLine = line.split(<span class="string">'\t'</span>)</span><br><span class="line">        returnMat[index, :] = listFromLine[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">        classLabelVector.append(int(listFromLine[-<span class="number">1</span>]))</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> returnMat, classLabelVector</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datingDataMat, datingLabels = file2matrix(<span class="string">'datingTestSet2.txt'</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datingDataMat[:<span class="number">10</span>]</span><br></pre></td></tr></table></figure>
<pre><code>array([[  4.09200000e+04,   8.32697600e+00,   9.53952000e-01],
       [  1.44880000e+04,   7.15346900e+00,   1.67390400e+00],
       [  2.60520000e+04,   1.44187100e+00,   8.05124000e-01],
       [  7.51360000e+04,   1.31473940e+01,   4.28964000e-01],
       [  3.83440000e+04,   1.66978800e+00,   1.34296000e-01],
       [  7.29930000e+04,   1.01417400e+01,   1.03295500e+00],
       [  3.59480000e+04,   6.83079200e+00,   1.21319200e+00],
       [  4.26660000e+04,   1.32763690e+01,   5.43880000e-01],
       [  6.74970000e+04,   8.63157700e+00,   7.49278000e-01],
       [  3.54830000e+04,   1.22731690e+01,   1.50805300e+00]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datingLabels[:<span class="number">10</span>]</span><br></pre></td></tr></table></figure>
<pre><code>[3, 2, 1, 1, 1, 1, 3, 3, 1, 3]
</code></pre><h4 id="u5206_u6790_u6570_u636E_3A__u4F7F_u7528Matplotlib_u521B_u5EFA_u6563_u70B9_u56FE"><a href="#u5206_u6790_u6570_u636E_3A__u4F7F_u7528Matplotlib_u521B_u5EFA_u6563_u70B9_u56FE" class="headerlink" title="分析数据: 使用Matplotlib创建散点图"></a>分析数据: 使用Matplotlib创建散点图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">ax.scatter(datingDataMat[:, <span class="number">1</span>], datingDataMat[:, <span class="number">2</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="/images/MLIA/2_4.png" alt=""></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fig = plt.figure()</span><br><span class="line">ax = fig.add_subplot(<span class="number">111</span>)</span><br><span class="line">ax.scatter(datingDataMat[:, <span class="number">0</span>], datingDataMat[:, <span class="number">1</span>],</span><br><span class="line">          <span class="number">15</span>*np.array(datingLabels), <span class="number">15</span>*np.array(datingLabels))</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p><img src="/images/MLIA/2_5.png" alt=""></p>
<h4 id="u51C6_u5907_u6570_u636E_3A__u5F52_u4E00_u5316_u6570_u503C"><a href="#u51C6_u5907_u6570_u636E_3A__u5F52_u4E00_u5316_u6570_u503C" class="headerlink" title="准备数据: 归一化数值"></a>准备数据: 归一化数值</h4><p>newValue = (oldValue-min)/(max-min)</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">autoNorm</span><span class="params">(dataSet)</span>:</span></span><br><span class="line">    minVals = dataSet.min(<span class="number">0</span>)</span><br><span class="line">    maxVals = dataSet.max(<span class="number">0</span>)</span><br><span class="line">    ranges = maxVals - minVals</span><br><span class="line">    normDataSet = np.zeros(np.shape(dataSet))</span><br><span class="line">    m = dataSet.shape[<span class="number">0</span>]</span><br><span class="line">    normDataSet = dataSet - np.tile(minVals, (m, <span class="number">1</span>))</span><br><span class="line">    normDataSet = normDataSet/np.tile(ranges, (m, <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> normDataSet, ranges, minVals</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">normMat, ranges, minVals = autoNorm(datingDataMat)</span><br><span class="line">normMat</span><br></pre></td></tr></table></figure>
<pre><code>array([[ 0.44832535,  0.39805139,  0.56233353],
       [ 0.15873259,  0.34195467,  0.98724416],
       [ 0.28542943,  0.06892523,  0.47449629],
       ..., 
       [ 0.29115949,  0.50910294,  0.51079493],
       [ 0.52711097,  0.43665451,  0.4290048 ],
       [ 0.47940793,  0.3768091 ,  0.78571804]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ranges</span><br></pre></td></tr></table></figure>
<pre><code>array([  9.12730000e+04,   2.09193490e+01,   1.69436100e+00])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">minVals</span><br></pre></td></tr></table></figure>
<pre><code>array([ 0.      ,  0.      ,  0.001156])
</code></pre><h4 id="u6D4B_u8BD5_u7B97_u6CD5_3A__u4F5C_u4E3A_u5B8C_u6574_u7A0B_u5E8F_u9A8C_u8BC1_u5206_u7C7B_u5668"><a href="#u6D4B_u8BD5_u7B97_u6CD5_3A__u4F5C_u4E3A_u5B8C_u6574_u7A0B_u5E8F_u9A8C_u8BC1_u5206_u7C7B_u5668" class="headerlink" title="测试算法: 作为完整程序验证分类器"></a>测试算法: 作为完整程序验证分类器</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">datingClassTest</span><span class="params">()</span>:</span></span><br><span class="line">    hoRatio = <span class="number">0.10</span></span><br><span class="line">    datingDataMat, datingLabels = file2matrix(<span class="string">'datingTestSet2.txt'</span>)</span><br><span class="line">    normMat, ranges, minVals = autoNorm(datingDataMat)</span><br><span class="line">    m = normMat.shape[<span class="number">0</span>]</span><br><span class="line">    numTestVecs = int(m*hoRatio)</span><br><span class="line">    errorCount = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(numTestVecs):</span><br><span class="line">        classifierResult = classify0(normMat[i, :], normMat[numTestVecs:m, :], datingLabels[numTestVecs:m], <span class="number">3</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"the classifier came back with %d, the real answer is: %d"</span> % (classifierResult, datingLabels[i])</span><br><span class="line">        <span class="keyword">if</span> classifierResult!=datingLabels[i]: errorCount += <span class="number">1</span></span><br><span class="line">            </span><br><span class="line">    <span class="keyword">print</span> <span class="string">"the total error rate is: %f"</span> % (errorCount/float(numTestVecs))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">datingClassTest()</span><br></pre></td></tr></table></figure>
<pre><code>the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 1
the total error rate is: 0.050000
</code></pre><h4 id="u4F7F_u7528_u7B97_u6CD5_3A__u6784_u5EFA_u5B8C_u6574_u53EF_u7528_u7CFB_u7EDF"><a href="#u4F7F_u7528_u7B97_u6CD5_3A__u6784_u5EFA_u5B8C_u6574_u53EF_u7528_u7CFB_u7EDF" class="headerlink" title="使用算法: 构建完整可用系统"></a>使用算法: 构建完整可用系统</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">classifyPerson</span><span class="params">()</span>:</span></span><br><span class="line">    resultList = [<span class="string">'not at all'</span>, <span class="string">'in small doses'</span>, <span class="string">'in large doses'</span>]</span><br><span class="line">    percentTats = float(raw_input(<span class="string">"percentage of time spent playing video games?"</span>))</span><br><span class="line">    ffMiles = float(raw_input(<span class="string">"frequent flier miles earned per year?"</span>))</span><br><span class="line">    iceCream = float(raw_input(<span class="string">"liters of ice cream consumed per year?"</span>))</span><br><span class="line">    datingDataMat, datingLabels = file2matrix(<span class="string">'datingTestSet2.txt'</span>)</span><br><span class="line">    normMat, ranges, minVals = autoNorm(datingDataMat)</span><br><span class="line">    inArr = np.array([ffMiles, percentTats, iceCream])</span><br><span class="line">    classifierResult = classify0((inArr - minVals)/ranges, normMat, datingLabels, <span class="number">3</span>)</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"You will probably like this person: "</span>, resultList[classifierResult-<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classifyPerson()</span><br></pre></td></tr></table></figure>
<pre><code>percentage of time spent playing video games?10
frequent flier miles earned per year?10000
liters of ice cream consumed per year?0.5
You will probably like this person:  in small doses
</code></pre><h3 id="u624B_u5199_u8BC6_u522B_u7CFB_u7EDF"><a href="#u624B_u5199_u8BC6_u522B_u7CFB_u7EDF" class="headerlink" title="手写识别系统"></a>手写识别系统</h3><h4 id="u51C6_u5907_u6570_u636E"><a href="#u51C6_u5907_u6570_u636E" class="headerlink" title="准备数据"></a>准备数据</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img2vector</span><span class="params">(filename)</span>:</span></span><br><span class="line">    returnVect = np.zeros((<span class="number">1</span>, <span class="number">1024</span>))</span><br><span class="line">    fr = open(filename)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">        lineStr = fr.readline()</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>):</span><br><span class="line">            returnVect[<span class="number">0</span>, <span class="number">32</span>*i+j] = int(lineStr[j])</span><br><span class="line">    <span class="keyword">return</span> returnVect</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">testVector = img2vector(<span class="string">'testDigits/0_13.txt'</span>)</span><br><span class="line">testVector[<span class="number">0</span>, <span class="number">0</span>:<span class="number">31</span>]</span><br></pre></td></tr></table></figure>
<pre><code>array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  1.,  1.,  1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,
        0.,  0.,  0.,  0.,  0.])
</code></pre><h4 id="u6D4B_u8BD5_u7B97_u6CD5_3A__u4F7F_u7528KNN_u7B97_u6CD5_u8BC6_u522B_u624B_u5199_u6570_u5B57"><a href="#u6D4B_u8BD5_u7B97_u6CD5_3A__u4F7F_u7528KNN_u7B97_u6CD5_u8BC6_u522B_u624B_u5199_u6570_u5B57" class="headerlink" title="测试算法: 使用KNN算法识别手写数字"></a>测试算法: 使用KNN算法识别手写数字</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> listdir</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handWritingClassTest</span><span class="params">()</span>:</span></span><br><span class="line">    hwLabels = []</span><br><span class="line">    trainingFileList = listdir(<span class="string">'trainingDigits'</span>)</span><br><span class="line">    m = len(trainingFileList)</span><br><span class="line">    trainingMat = np.zeros((m, <span class="number">1024</span>))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(m):</span><br><span class="line">        fileNameStr = trainingFileList[i]</span><br><span class="line">        fileStr = fileNameStr.split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">        classNumber = int(fileStr.split(<span class="string">'_'</span>)[<span class="number">0</span>])</span><br><span class="line">        hwLabels.append(classNumber)</span><br><span class="line">        trainingMat[i, :] = img2vector(<span class="string">'trainingDigits/%s'</span> % fileNameStr)</span><br><span class="line">    testFileList = listdir(<span class="string">'testDigits'</span>)</span><br><span class="line">    errorCount = <span class="number">0.0</span></span><br><span class="line">    mTest = len(testFileList)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(mTest):</span><br><span class="line">        fileNameStr = testFileList[i]</span><br><span class="line">        fileStr = fileNameStr.split(<span class="string">'.'</span>)[<span class="number">0</span>]</span><br><span class="line">        classNumber = int(fileStr.split(<span class="string">'_'</span>)[<span class="number">0</span>])</span><br><span class="line">        vectorUnderTest = img2vector(<span class="string">'testDigits/%s'</span> % fileNameStr)</span><br><span class="line">        classifierResult = classify0(vectorUnderTest, trainingMat, hwLabels, <span class="number">10</span>)</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"the classifier came back with %d, the real answer is: %d"</span> % (classifierResult, classNumber)</span><br><span class="line">        <span class="keyword">if</span> classifierResult!=classNumber: errorCount += <span class="number">1</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"\nthe total number of errors is: %d"</span> % errorCount</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"\nthe total error rate is: %f"</span> % (errorCount/float(mTest))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">handWritingClassTest()</span><br></pre></td></tr></table></figure>
<pre><code>the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 8, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 8, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 8, the real answer is: 8
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 6, the real answer is: 6
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 0, the real answer is: 0
the classifier came back with 3, the real answer is: 3
the classifier came back with 0, the real answer is: 0
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 8, the real answer is: 8
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 1, the real answer is: 1
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 0, the real answer is: 0
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 3, the real answer is: 3
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 0, the real answer is: 0
the classifier came back with 9, the real answer is: 9
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 4
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 9
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 6, the real answer is: 6
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 2, the real answer is: 2
the classifier came back with 9, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 4, the real answer is: 4
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 9, the real answer is: 9
the classifier came back with 6, the real answer is: 6
the classifier came back with 6, the real answer is: 6
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 4
the classifier came back with 0, the real answer is: 0
the classifier came back with 0, the real answer is: 0
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 8, the real answer is: 8
the classifier came back with 5, the real answer is: 5
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 8, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 4, the real answer is: 4
the classifier came back with 9, the real answer is: 9
the classifier came back with 3, the real answer is: 3
the classifier came back with 9, the real answer is: 9
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 6, the real answer is: 6
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 0, the real answer is: 0
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 8, the real answer is: 8
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 0, the real answer is: 0
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 8, the real answer is: 8
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 7, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 0, the real answer is: 0
the classifier came back with 0, the real answer is: 0
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 9, the real answer is: 9
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 0, the real answer is: 0
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 9
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 4, the real answer is: 4
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 8, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 9, the real answer is: 9
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 8, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 9, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 7, the real answer is: 7
the classifier came back with 4, the real answer is: 4
the classifier came back with 6, the real answer is: 6
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 9
the classifier came back with 3, the real answer is: 3
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 8
the classifier came back with 2, the real answer is: 2
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 1, the real answer is: 1
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 8, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 6, the real answer is: 6
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 9, the real answer is: 9
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 6, the real answer is: 6
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 6, the real answer is: 6
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 0, the real answer is: 0
the classifier came back with 3, the real answer is: 3
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 9, the real answer is: 9
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 6, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 0, the real answer is: 0
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 4, the real answer is: 4
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 7, the real answer is: 7
the classifier came back with 3, the real answer is: 3
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 0, the real answer is: 0
the classifier came back with 7, the real answer is: 7
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 8, the real answer is: 8
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 9, the real answer is: 9
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 0, the real answer is: 0
the classifier came back with 5, the real answer is: 5
the classifier came back with 1, the real answer is: 1
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 3, the real answer is: 3
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 4, the real answer is: 4
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 9, the real answer is: 9
the classifier came back with 9, the real answer is: 9
the classifier came back with 5, the real answer is: 5
the classifier came back with 2, the real answer is: 2
the classifier came back with 8, the real answer is: 8
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 8, the real answer is: 8
the classifier came back with 3, the real answer is: 3
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 6, the real answer is: 6
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 3, the real answer is: 3
the classifier came back with 5, the real answer is: 5
the classifier came back with 3, the real answer is: 3
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 4, the real answer is: 4
the classifier came back with 1, the real answer is: 1
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 8, the real answer is: 8
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 5, the real answer is: 5
the classifier came back with 2, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 3, the real answer is: 3
the classifier came back with 7, the real answer is: 7
the classifier came back with 2, the real answer is: 2
the classifier came back with 5, the real answer is: 5
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 2, the real answer is: 2
the classifier came back with 4, the real answer is: 4
the classifier came back with 8, the real answer is: 8
the classifier came back with 6, the real answer is: 6
the classifier came back with 6, the real answer is: 6
the classifier came back with 6, the real answer is: 6
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 4, the real answer is: 4
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 2, the real answer is: 2
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 9, the real answer is: 9
the classifier came back with 3, the real answer is: 3
the classifier came back with 9, the real answer is: 9
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 1, the real answer is: 1
the classifier came back with 5, the real answer is: 5
the classifier came back with 2, the real answer is: 2
the classifier came back with 9, the real answer is: 9
the classifier came back with 8, the real answer is: 8
the classifier came back with 0, the real answer is: 0
the classifier came back with 2, the real answer is: 2
the classifier came back with 1, the real answer is: 1
the classifier came back with 0, the real answer is: 0
the classifier came back with 4, the real answer is: 4
the classifier came back with 6, the real answer is: 6
the classifier came back with 7, the real answer is: 7
the classifier came back with 0, the real answer is: 0
the classifier came back with 8, the real answer is: 8
the classifier came back with 8, the real answer is: 8
the classifier came back with 5, the real answer is: 5
the classifier came back with 5, the real answer is: 5
the classifier came back with 7, the real answer is: 7
the classifier came back with 6, the real answer is: 6
the classifier came back with 0, the real answer is: 0
the classifier came back with 6, the real answer is: 6

the total number of errors is: 20

the total error rate is: 0.021142
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Maching_learning_in_action_uFF0CKNN_28k-nearest_neighbor_29_u7B97_u6CD5_u7B14_u8BB0"><a href="#Maching_learning_in_action_uFF0CKNN_28k-nearest_neighbor_29_u7B97_u6CD5_u7B14_u8BB0" class="headerlink" title="Maching learning in action，KNN(k-nearest neighbor)算法笔记"></a>Maching learning in action，KNN(k-nearest neighbor)算法笔记</h2><h3 id="KNN_u7B97_u6CD5_u6982_u8FF0"><a href="#KNN_u7B97_u6CD5_u6982_u8FF0" class="headerlink" title="KNN算法概述"></a>KNN算法概述</h3><p>存在一个样本数据集合，也称作训练样本集，并且样本集中每个数据都存在标签，即我们知道样本集中每一数据与所属分类的对应关系．输入没有标签的数据后，将新数据的每个特征值与样本集中数据对应的特征进行比较，然后算法提取样本集中特征最相似的数据，这就是KNN算法Ｋ的出处．<br>]]>
    
    </summary>
    
      <category term="Data mining" scheme="http://pzengseu.github.io/tags/Data-mining/"/>
    
      <category term="KNN" scheme="http://pzengseu.github.io/tags/KNN/"/>
    
      <category term="Machine learning" scheme="http://pzengseu.github.io/tags/Machine-learning/"/>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[python数据分析与挖掘实战的一些bug]]></title>
    <link href="http://pzengseu.github.io/2016/02/19/data_mining/python-data-mining-error/"/>
    <id>http://pzengseu.github.io/2016/02/19/data_mining/python-data-mining-error/</id>
    <published>2016-02-19T07:01:05.000Z</published>
    <updated>2016-02-19T12:34:12.000Z</updated>
    <content type="html"><![CDATA[<p>总结学习＜python数据分析与挖掘实战＞碰到的一些问题，这些问题主要是书中的不足之处或程序的bug.<br><a id="more"></a></p>
<h3 id="pandas_u8BFB_u53D6excel_u6587_u4EF6"><a href="#pandas_u8BFB_u53D6excel_u6587_u4EF6" class="headerlink" title="pandas读取excel文件"></a>pandas读取excel文件</h3><p>书上P36页读取EXCEL文件是这样的(第一次出现在P27)</p>
<p><code>data = pd.read_excel(catering_sale, index_col = u&#39;日期&#39;)</code><br>这会报错：<br><code>TypeError: read_excel() takes exactly 2 arguments (1 given)</code><br>于是查看read_excel函数的定义：<br><code>def read_excel(io, sheetname, **kwds):</code><br>需要两个参数，而io, sheetname是这样定义的<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">io : <span class="keyword">string</span>, <span class="keyword">file</span>-like <span class="keyword">object</span> <span class="keyword">or</span> xlrd workbook</span><br><span class="line">    <span class="keyword">If</span> a <span class="keyword">string</span>, expected <span class="keyword">to</span> be a path <span class="keyword">to</span> xls <span class="keyword">or</span> xlsx <span class="keyword">file</span></span><br><span class="line">sheetname : <span class="keyword">string</span></span><br><span class="line">     Name <span class="keyword">of</span> Excel sheet</span><br></pre></td></tr></table></figure></p>
<p>于是，我这样写：<br><code>data = pd.read_excel(catering_sale, sheetname=&#39;catering_sale&#39;, index_col = u&#39;日期&#39;)</code><br>报错找不到表名,后来在stack overflow上才知道这是pandas　api变动，要令sheetname=0,于是改成这样：<br><code>data = pd.read_excel(catering_sale, sheetname=0, index_col = u&#39;日期&#39;)</code><br>通过，书中的这个bug,浪费了我好多时间．</p>
<h3 id="matplotlib_u753B_u56FE_u4E2D_u6587_u5B57_u4F53"><a href="#matplotlib_u753B_u56FE_u4E2D_u6587_u5B57_u4F53" class="headerlink" title="matplotlib画图中文字体"></a>matplotlib画图中文字体</h3><p>书中中文字体是这样说的P26<br><code>plt.rcParams[&#39;font.sans-serif&#39;] = [&#39;SimHei&#39;]</code><br>这个在Windows上有没有用不知道，但在本人的ubuntu上，是没有效果的,还报错找不到sans-serif字体．对于这个问题，找遍goole终于成功解决．参考文章<a href="http://www.cnblogs.com/skabyy/p/3461229.html" target="_blank" rel="external">Ubuntu下matplotlib的中文显示</a></p>
<h4 id="u4FEE_u6539/etc/matplotlib"><a href="#u4FEE_u6539/etc/matplotlib" class="headerlink" title="修改/etc/matplotlib"></a>修改/etc/matplotlib</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">font</span><span class="class">.family</span>: sans-serif</span><br><span class="line"><span class="attribute">font</span><span class="class">.sans-serif</span>: WenQuanYi Micro Hei, Bitstream Vera Sans, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif</span><br></pre></td></tr></table></figure>
<p>添加wqy字体，前提是先安装wqy字体．</p>
<h4 id="u6E05_u7A7A_u5B57_u4F53_u7F13_u5B58"><a href="#u6E05_u7A7A_u5B57_u4F53_u7F13_u5B58" class="headerlink" title="清空字体缓存"></a>清空字体缓存</h4><p>若不清空，不会有效果．<br><code>rm ~/.cache/matplotlib/</code></p>
<h4 id="u5B57_u4F53_u6587_u4EF6_u540E_u7F00"><a href="#u5B57_u4F53_u6587_u4EF6_u540E_u7F00" class="headerlink" title="字体文件后缀"></a>字体文件后缀</h4><p>由于matplotlib查找系统字体的时候不匹配ttc字体文件，所以：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>share<span class="regexp">/fonts/</span>truetype/wqy</span><br><span class="line">cp wqymicrohei.ttc wqymicrohei.ttf</span><br></pre></td></tr></table></figure></p>
<p>重新运行程序，中文字体显示成功.</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=3&id=15947072&auto=1&height=66"></iframe>

<h3 id="pandas_plot_u51FD_u6570kind_u53C2_u6570"><a href="#pandas_plot_u51FD_u6570kind_u53C2_u6570" class="headerlink" title="pandas plot函数kind参数"></a>pandas plot函数kind参数</h3><p>P55　D.plot(kind=’box’)错误，kind参数不能指定为box函数，应换为boxplot()函数．<br>查看帮助文档可以指定的参数：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">kind :</span> &#123;<span class="string">'line'</span>, <span class="string">'bar'</span>, <span class="string">'barh'</span>, <span class="string">'kde'</span>, <span class="string">'density'</span>, <span class="string">'scatter'</span>&#125;</span><br><span class="line">    <span class="string">bar :</span> vertical bar plot</span><br><span class="line">    <span class="string">barh :</span> horizontal bar plot</span><br><span class="line">    kde/<span class="string">density :</span> Kernel Density Estimation plot</span><br><span class="line"><span class="label">    scatter:</span> scatter plot</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>总结学习＜python数据分析与挖掘实战＞碰到的一些问题，这些问题主要是书中的不足之处或程序的bug.<br>]]>
    
    </summary>
    
      <category term="data-mining" scheme="http://pzengseu.github.io/tags/data-mining/"/>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[雪景雪人]]></title>
    <link href="http://pzengseu.github.io/2016/01/26/seu-snow/"/>
    <id>http://pzengseu.github.io/2016/01/26/seu-snow/</id>
    <published>2016-01-26T02:05:25.000Z</published>
    <updated>2016-02-19T07:06:24.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/images/2016_SEU_SNOW/seu1.jpg" alt=""><br><a id="more"></a><br><img src="/images/2016_SEU_SNOW/seu2.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow1.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow2.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow3.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow4.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow5.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow6.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow7.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow8.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow9.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow10.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow11.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow12.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow13.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow14.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow15.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow16.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow17.jpg" alt=""><br><img src="/images/2016_SEU_SNOW/snow18.jpg" alt=""></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=3&id=15947072&auto=1&height=66"></iframe>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="/images/2016_SEU_SNOW/seu1.jpg" alt=""><br>]]>
    
    </summary>
    
      <category term="seu" scheme="http://pzengseu.github.io/tags/seu/"/>
    
      <category term="snow" scheme="http://pzengseu.github.io/tags/snow/"/>
    
      <category term="相册" scheme="http://pzengseu.github.io/tags/%E7%9B%B8%E5%86%8C/"/>
    
      <category term="生活" scheme="http://pzengseu.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[格式化输出json格式]]></title>
    <link href="http://pzengseu.github.io/2016/01/25/python/rest-to-json/"/>
    <id>http://pzengseu.github.io/2016/01/25/python/rest-to-json/</id>
    <published>2016-01-25T06:12:32.000Z</published>
    <updated>2016-01-26T02:15:24.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>在使用RYU控制器的Rest api时,在命令行中输入curl xxxxxxx将返回一行json数据,这样的数据可读性很差.于是,出现了chrome, firefox的rest api插件,但这需要打开浏览器,对于我这样”All in terminal” 的猿类,简直是种折磨,于是写了个python脚本,将curl获取的数据通过管道导向python脚本,进而格式化输出.</p>
<h2 id="u5B9E_u73B0"><a href="#u5B9E_u73B0" class="headerlink" title="实现"></a>实现</h2><h3 id="fileinput_u6A21_u5757"><a href="#fileinput_u6A21_u5757" class="headerlink" title="fileinput模块"></a>fileinput模块</h3><p>调用fileinput模块,使用管道将数据导向python脚本:</p>
<blockquote>
<p>import fileinput<br>rest = fileinput.input().readline()</p>
</blockquote>
<p>fileinput模块的详细实例见我的上一篇博文<a href="/2016/01/25/python/script-input-python/">通过重定向,管道来作为python脚本的输入</a></p>
<h3 id="json"><a href="#json" class="headerlink" title="json"></a>json</h3><p>通过调用json模块,可将json数据格式化输出,方便阅读.</p>
<blockquote>
<p>rest = json.loads(rest)<br>print json.dumps(rest, indent=2)</p>
</blockquote>
<p><em>indent</em>表示格式化输出的缩进空格.</p>
<h3 id="u6D4B_u8BD5"><a href="#u6D4B_u8BD5" class="headerlink" title="测试"></a>测试</h3><p>实现代码如下:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">import fileinput</span><br><span class="line">import json</span><br><span class="line"></span><br><span class="line">f_input=fileinput.<span class="function"><span class="title">input</span><span class="params">()</span></span></span><br><span class="line">rest = f_input.<span class="function"><span class="title">readline</span><span class="params">()</span></span></span><br><span class="line">rest=json.<span class="function"><span class="title">loads</span><span class="params">(rest)</span></span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(json.dumps(rest, sort_keys=True, indent=<span class="number">4</span>)</span></span>)</span><br></pre></td></tr></table></figure></p>
<p>具体使用:<br>没用使用脚本的输出:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zp<span class="variable">@zpeng</span><span class="symbol">:~</span><span class="variable">$ </span>curl <span class="symbol">http:</span>/<span class="regexp">/sdn:8080/firewall</span><span class="regexp">/module/status</span></span><br><span class="line">[&#123;<span class="string">"status"</span><span class="symbol">:</span> <span class="string">"enable"</span>, <span class="string">"switch_id"</span><span class="symbol">:</span> <span class="string">"0000000000000001"</span>&#125;]</span><br></pre></td></tr></table></figure></p>
<p>使用脚本后的输出:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">zp<span class="variable">@zpeng</span><span class="symbol">:~</span><span class="variable">$ </span>curl <span class="symbol">http:</span>/<span class="regexp">/sdn:8080/firewall</span><span class="regexp">/module/status</span> | python filein.py </span><br><span class="line">  % <span class="constant">Total </span>   % <span class="constant">Received </span>% <span class="constant">Xferd </span> <span class="constant">Average Speed </span>  <span class="constant">Time </span>   <span class="constant">Time </span>    <span class="constant">Time </span> <span class="constant">Current</span></span><br><span class="line">                                 <span class="constant">Dload </span> <span class="constant">Upload </span>  <span class="constant">Total </span>  <span class="constant">Spent </span>   <span class="constant">Left </span> <span class="constant">Speed</span></span><br><span class="line"><span class="number">100</span>    <span class="number">55</span>  <span class="number">100</span>    <span class="number">55</span>    <span class="number">0</span>     <span class="number">0</span>  <span class="number">13664</span>      <span class="number">0</span> --<span class="symbol">:--</span><span class="symbol">:--</span> --<span class="symbol">:--</span><span class="symbol">:--</span> --<span class="symbol">:--</span><span class="symbol">:--</span> <span class="number">18333</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"status"</span><span class="symbol">:</span> <span class="string">"enable"</span>, </span><br><span class="line">    <span class="string">"switch_id"</span><span class="symbol">:</span> <span class="string">"0000000000000001"</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">zp<span class="variable">@zpeng</span><span class="symbol">:~</span><span class="variable">$ </span></span><br><span class="line"></span><br><span class="line">zp<span class="variable">@zpeng</span><span class="symbol">:~</span><span class="variable">$ </span>curl <span class="symbol">http:</span>/<span class="regexp">/sdn:8080/firewall</span><span class="regexp">/rules/</span><span class="number">0000000000000001</span>/all | python filein.py </span><br><span class="line">  % <span class="constant">Total </span>   % <span class="constant">Received </span>% <span class="constant">Xferd </span> <span class="constant">Average Speed </span>  <span class="constant">Time </span>   <span class="constant">Time </span>    <span class="constant">Time </span> <span class="constant">Current</span></span><br><span class="line">                                 <span class="constant">Dload </span> <span class="constant">Upload </span>  <span class="constant">Total </span>  <span class="constant">Spent </span>   <span class="constant">Left </span> <span class="constant">Speed</span></span><br><span class="line"><span class="number">100</span>   <span class="number">365</span>  <span class="number">100</span>   <span class="number">365</span>    <span class="number">0</span>     <span class="number">0</span>  <span class="number">59552</span>      <span class="number">0</span> --<span class="symbol">:--</span><span class="symbol">:--</span> --<span class="symbol">:--</span><span class="symbol">:--</span> --<span class="symbol">:--</span><span class="symbol">:--</span> <span class="number">60833</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"access_control_list"</span><span class="symbol">:</span> [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"rules"</span><span class="symbol">:</span> [</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"actions"</span><span class="symbol">:</span> <span class="string">"ALLOW"</span>, </span><br><span class="line">            <span class="string">"dl_type"</span><span class="symbol">:</span> <span class="string">"IPv4"</span>, </span><br><span class="line">            <span class="string">"dl_vlan"</span><span class="symbol">:</span> <span class="string">"2"</span>, </span><br><span class="line">            <span class="string">"nw_proto"</span><span class="symbol">:</span> <span class="string">"ICMP"</span>, </span><br><span class="line">            <span class="string">"nw_src"</span><span class="symbol">:</span> <span class="string">"10.0.0.0/255.0.0.0"</span>, </span><br><span class="line">            <span class="string">"priority"</span><span class="symbol">:</span> <span class="number">1</span>, </span><br><span class="line">            <span class="string">"rule_id"</span><span class="symbol">:</span> <span class="number">2</span></span><br><span class="line">          &#125;, </span><br><span class="line">          &#123;</span><br><span class="line">            <span class="string">"actions"</span><span class="symbol">:</span> <span class="string">"ALLOW"</span>, </span><br><span class="line">            <span class="string">"dl_type"</span><span class="symbol">:</span> <span class="string">"IPv4"</span>, </span><br><span class="line">            <span class="string">"dl_vlan"</span><span class="symbol">:</span> <span class="string">"2"</span>, </span><br><span class="line">            <span class="string">"nw_dst"</span><span class="symbol">:</span> <span class="string">"10.0.0.0/255.0.0.0"</span>, </span><br><span class="line">            <span class="string">"nw_proto"</span><span class="symbol">:</span> <span class="string">"ICMP"</span>, </span><br><span class="line">            <span class="string">"priority"</span><span class="symbol">:</span> <span class="number">1</span>, </span><br><span class="line">            <span class="string">"rule_id"</span><span class="symbol">:</span> <span class="number">1</span></span><br><span class="line">          &#125;</span><br><span class="line">        ], </span><br><span class="line">        <span class="string">"vlan_id"</span><span class="symbol">:</span> <span class="string">"2"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ], </span><br><span class="line">    <span class="string">"switch_id"</span><span class="symbol">:</span> <span class="string">"0000000000000001"</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line">zp<span class="variable">@zpeng</span><span class="symbol">:~</span>$</span><br></pre></td></tr></table></figure></p>
<p>可见使用脚本后,美化输出的目的达到了.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>在使用RYU控制器的Rest api时,在命令行中输入curl xxxxxxx将返回一行json数据,这]]>
    </summary>
    
      <category term="fileinput" scheme="http://pzengseu.github.io/tags/fileinput/"/>
    
      <category term="json" scheme="http://pzengseu.github.io/tags/json/"/>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="rest" scheme="http://pzengseu.github.io/tags/rest/"/>
    
      <category term="ryu" scheme="http://pzengseu.github.io/tags/ryu/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[通过重定向,管道来作为python脚本的输入]]></title>
    <link href="http://pzengseu.github.io/2016/01/25/python/script-input-python/"/>
    <id>http://pzengseu.github.io/2016/01/25/python/script-input-python/</id>
    <published>2016-01-25T03:09:03.000Z</published>
    <updated>2016-01-26T02:15:47.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>想把python替代shell脚本,避免不了的问题是,在命令行中结合python脚本使用重定向,管道作为输入.</p>
<h2 id="u65B9_u6848"><a href="#u65B9_u6848" class="headerlink" title="方案"></a>方案</h2><p>python内置fileinput模块可以解决这个问题,如下脚本:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env <span class="keyword">python3</span></span><br><span class="line">import fileinput</span><br><span class="line"></span><br><span class="line">with fileinput.<span class="built_in">input</span>() <span class="keyword">as</span> f_inpu<span class="variable">t:</span></span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">line</span> in f_inpu<span class="variable">t:</span></span><br><span class="line">        <span class="keyword">print</span>(<span class="built_in">line</span>, end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure></p>
<p>运行结果如下:<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zp@zpen<span class="variable">g:</span>~/PycharmProjects/script$ <span class="keyword">ls</span> ~ | <span class="keyword">python3</span> filein.<span class="keyword">py</span> </span><br><span class="line">app Desktop Documents Downloads hexo_zp_next mnt Music node_modules npm-<span class="keyword">debug</span>.<span class="built_in">log</span> Pictures Public PycharmProjects software Templates tmp Videos vmware 流量牵引.docx </span><br><span class="line">zp@zpen<span class="variable">g:</span>~/PycharmProjects/script$ <span class="keyword">python3</span> filein.<span class="keyword">py</span> &lt; filein.<span class="keyword">py</span> </span><br><span class="line">#!/usr/bin/env <span class="keyword">python3</span> import fileinput  with fileinput.<span class="built_in">input</span>() <span class="keyword">as</span> f_inpu<span class="variable">t:</span> <span class="keyword">for</span> <span class="built_in">line</span> in f_inpu<span class="variable">t:</span> <span class="keyword">print</span>(<span class="built_in">line</span>.strip(), end=<span class="string">' '</span>) <span class="keyword">print</span>() </span><br><span class="line">zp@zpen<span class="variable">g:</span>~/PycharmProjects/script$</span><br></pre></td></tr></table></figure></p>
<p>可见这样可以将python脚本当做shell脚本来用.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>想把python替代shell脚本,避免不了的问题是,在命令行中结合python脚本使用重定向,管道作为]]>
    </summary>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="shell" scheme="http://pzengseu.github.io/tags/shell/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RYU控制器的firewall功能]]></title>
    <link href="http://pzengseu.github.io/2016/01/24/SDN/ryu-firewall/"/>
    <id>http://pzengseu.github.io/2016/01/24/SDN/ryu-firewall/</id>
    <published>2016-01-24T07:33:57.000Z</published>
    <updated>2016-01-26T02:16:25.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u6982_u8981"><a href="#u6982_u8981" class="headerlink" title="概要"></a>概要</h2><p>本篇博文根据RYU控制的官方文档<em>RYU book</em>第九章<em>FIREWALL</em>,第一部分<em>Example of operation of a single tenant(IPv4)</em>形成,其余三部分大同小异.按照文档上的内容进行实践,并说明了实践过程中存在的问题,指出了文档中不合理的地方.以下所有的rest api的调用都是在firefox上利用restclient插件进行,这样比直接调用curl命令更加直观.</p>
<h2 id="A_single_tenant_28iPv4_29"><a href="#A_single_tenant_28iPv4_29" class="headerlink" title="A single tenant(iPv4)"></a>A single tenant(iPv4)</h2><h3 id="u5B9E_u9A8C_u62D3_u6251"><a href="#u5B9E_u9A8C_u62D3_u6251" class="headerlink" title="实验拓扑"></a>实验拓扑</h3><p><img src="/images/SDN/firewall1.png" alt="art"></p>
<h3 id="u521B_u5EFA_u5B9E_u9A8C_u73AF_u5883"><a href="#u521B_u5EFA_u5B9E_u9A8C_u73AF_u5883" class="headerlink" title="创建实验环境"></a>创建实验环境</h3><h4 id="mininet_u521B_u5EFA_u62D3_u6251"><a href="#mininet_u521B_u5EFA_u62D3_u6251" class="headerlink" title="mininet创建拓扑"></a>mininet创建拓扑</h4><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mininet<span class="comment">@mininet-vm:~$ sudo mn --topo single,3 --mac --controller=remote</span></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Creating network</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Adding controller</span><br><span class="line">Unable to contact the remote controller at 127.0.0.1:6633</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Adding hosts:</span><br><span class="line">h1 h2 h3 </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Adding switches:</span><br><span class="line">s1 </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Adding links:</span><br><span class="line">(h1, s1) (h2, s1) (h3, s1) </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Configuring hosts</span><br><span class="line">h1 h2 h3 </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Starting controller</span><br><span class="line">c0 </span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Starting 1 switches</span><br><span class="line">s1 ...</span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> Starting CLI:</span><br><span class="line">mininet&gt;</span><br></pre></td></tr></table></figure>
<h4 id="u8BBE_u7F6Eopenflow1-3"><a href="#u8BBE_u7F6Eopenflow1-3" class="headerlink" title="设置openflow1.3"></a>设置openflow1.3</h4><p>在ovs交换机s1上设置使用openflow1.3<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mininet@mininet-vm:~$ ovs-vsctl <span class="keyword">set</span> Bridge s1 protocols-OpenFlow13</span><br><span class="line">ovs-vsctl: Bridge <span class="keyword">does not contain</span> a column <span class="keyword">whose</span> <span class="property">name</span> matches <span class="string">"protocols-OpenFlow13"</span></span><br></pre></td></tr></table></figure></p>
<p>上面是按照文档上的命名,但这样做会报错,查看该命令的帮助文档,即</p>
<blockquote>
<p>man ovs-vsctl</p>
</blockquote>
<p>发现一下信息:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">OpenFlow</span> Version</span><br><span class="line">   Configure  <span class="keyword">bridge </span> <span class="keyword">br0 </span> to support OpenFlow versions <span class="number">1</span>.<span class="number">0</span>, <span class="number">1</span>.<span class="number">2</span>, <span class="keyword">and</span><br><span class="line"></span>   <span class="number">1</span>.<span class="number">3</span>:</span><br><span class="line"></span><br><span class="line">          ovs-vsctl   set   <span class="keyword">bridge </span>  <span class="keyword">br0 </span>  protocols<span class="label">=openflow10</span>,open‐</span><br><span class="line">          flow12,openflow13</span><br></pre></td></tr></table></figure></p>
<p>于是将该命令改为:<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mininet<span class="annotation">@mininet</span>-<span class="string">vm:</span>~$ sudo ovs-vsctl set Bridge s1 protocols=OpenFlow13</span><br><span class="line">mininet<span class="annotation">@mininet</span>-<span class="string">vm:</span>~$</span><br></pre></td></tr></table></figure></p>
<h4 id="u542F_u52A8_u63A7_u5236_u5668"><a href="#u542F_u52A8_u63A7_u5236_u5668" class="headerlink" title="启动控制器"></a>启动控制器</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mininet@mininet-vm:~/ryu/ryu/app$ sudo ryu-manager rest_firewall<span class="class">.py</span> </span><br><span class="line">loading app rest_firewall<span class="class">.py</span></span><br><span class="line">loading app ryu<span class="class">.controller</span><span class="class">.ofp_handler</span></span><br><span class="line">instantiating app None of DPSet</span><br><span class="line">creating context dpset</span><br><span class="line">creating context wsgi</span><br><span class="line">instantiating app rest_firewall<span class="class">.py</span> of RestFirewallAPI</span><br><span class="line">instantiating app ryu<span class="class">.controller</span><span class="class">.ofp_handler</span> of OFPHandler</span><br><span class="line">(<span class="number">2413</span>) wsgi starting up on http:<span class="comment">//0.0.0.0:8080/</span></span><br><span class="line">[FW][INFO] dpid=<span class="number">0000000000000001</span>: Join as firewall.</span><br></pre></td></tr></table></figure>
<h3 id="u8BBE_u7F6E_u521D_u59CB_u72B6_u6001"><a href="#u8BBE_u7F6E_u521D_u59CB_u72B6_u6001" class="headerlink" title="设置初始状态"></a>设置初始状态</h3><p>默认情况下,所有的通信都是禁止的,查看交换机的状态</p>
<blockquote>
<p><a href="http://localhost:8080/firewall/module/status" target="_blank" rel="external">http://localhost:8080/firewall/module/status</a></p>
</blockquote>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    "<span class="attribute">status</span>": <span class="value"><span class="string">"disable"</span></span>,</span><br><span class="line">    "<span class="attribute">switch_id</span>": <span class="value"><span class="string">"0000000000000001"</span></span><br><span class="line">  </span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>这是因为有一个最高优先级的流表，丢弃所以数据包：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mininet<span class="annotation">@mininet</span>-<span class="string">vm:</span>~$ sudo ovs-ofctl -O openflow13 dump-flows s1</span><br><span class="line">OFPST_FLOW reply (OF1<span class="number">.3</span>) (xid=<span class="number">0x2</span>):</span><br><span class="line"> cookie=<span class="number">0x0</span>, duration=<span class="number">2.571</span>s, table=<span class="number">0</span>, n_packets=<span class="number">0</span>, n_bytes=<span class="number">0</span>, priority=<span class="number">65534</span>,arp actions=NORMAL</span><br><span class="line"> cookie=<span class="number">0x0</span>, duration=<span class="number">2.571</span>s, table=<span class="number">0</span>, n_packets=<span class="number">0</span>, n_bytes=<span class="number">0</span>, priority=<span class="number">65535</span> actions=drop</span><br><span class="line"> cookie=<span class="number">0x0</span>, duration=<span class="number">2.571</span>s, table=<span class="number">0</span>, n_packets=<span class="number">0</span>, n_bytes=<span class="number">0</span>, priority=<span class="number">0</span> actions=<span class="string">CONTROLLER:</span><span class="number">128</span></span><br><span class="line">mininet<span class="annotation">@mininet</span>-<span class="string">vm:</span>~$</span><br></pre></td></tr></table></figure></p>
<p>所以必须先enable交换机:</p>
<blockquote>
<p><a href="http://localhost:8080/firewall/module/enable/0000000000000001" target="_blank" rel="external">http://localhost:8080/firewall/module/enable/0000000000000001</a></p>
</blockquote>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    "<span class="attribute">switch_id</span>": <span class="value"><span class="string">"0000000000000001"</span></span>,</span><br><span class="line">    "<span class="attribute">command_result</span>": <span class="value">&#123;</span><br><span class="line">      "<span class="attribute">result</span>": <span class="value"><span class="string">"success"</span></span>,</span><br><span class="line">      "<span class="attribute">details</span>": <span class="value"><span class="string">"firewall running."</span></span><br><span class="line">    </span>&#125;</span><br><span class="line">  </span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>再次查看交换机状态:</p>
<blockquote>
<p><a href="http://localhost:8080/firewall/module/status" target="_blank" rel="external">http://localhost:8080/firewall/module/status</a></p>
</blockquote>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    "<span class="attribute">status</span>": <span class="value"><span class="string">"enable"</span></span>,</span><br><span class="line">    "<span class="attribute">switch_id</span>": <span class="value"><span class="string">"0000000000000001"</span></span><br><span class="line">  </span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<p>接着试试h1 ping h2,因为访问规则没有设置,所以这个时候,数据包会被阻塞.</p>
<figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="special">[</span>FW<span class="special">]</span><span class="special">[</span>INFO<span class="special">]</span> dpid=0000000000000001: Blocked packet = ethernet(dst='00:00:00:00:00:02',ethertype=2048,src='00:00:00:00:00:01'), ipv4(csum=56630,dst='10.0.0.2',flags=2,header_length=5,identification=18800,offset=0,option=None,proto=1,src='10.0.0.1',tos=0,total_length=84,ttl=64,version=4), icmp(code=0,csum=53393,data=echo(data='<span class="command">\xfa</span><span class="command">\x</span>85<span class="command">\xa</span>4V<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\xb</span>6G<span class="command">\x</span>08<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>10<span class="command">\x</span>11<span class="command">\x</span>12<span class="command">\x</span>13<span class="command">\x</span>14<span class="command">\x</span>15<span class="command">\x</span>16<span class="command">\x</span>17<span class="command">\x</span>18<span class="command">\x</span>19<span class="command">\x</span>1a<span class="command">\x</span>1b<span class="command">\x</span>1c<span class="command">\x</span>1d<span class="command">\x</span>1e<span class="command">\x</span>1f !"<span class="special">#</span><span class="formula">$%<span class="special">&amp;</span><span class="command">\'</span>()*+,-./01234567',id=2934,seq=1),type=8)</span><br><span class="line">...</span></span><br></pre></td></tr></table></figure>
<h3 id="u589E_u52A0_u89C4_u5219"><a href="#u589E_u52A0_u89C4_u5219" class="headerlink" title="增加规则"></a>增加规则</h3><h4 id="u5141_u8BB8h1_2C_h2_u4E92ping"><a href="#u5141_u8BB8h1_2C_h2_u4E92ping" class="headerlink" title="允许h1, h2互ping"></a>允许h1, h2互ping</h4><p>为了让h1和h2之间能互相ping通,需要设置两条规则,如图:<br><img src="/images/SDN/firewall2.png" alt="rule"><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">curl -X <span class="keyword">POST</span> -<span class="keyword">d</span> ’&#123;<span class="string">"nw_src"</span>: <span class="string">"10.0.0.1/32"</span>, <span class="string">"nw_dst"</span>: <span class="string">"10.0.0.2/32"</span>, <span class="string">"nw_proto"</span>:</span><br><span class="line"><span class="string">"ICMP"</span>&#125;’ http:<span class="comment">//localhost:8080/firewall/rules/0000000000000001</span></span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"switch_id"</span>: <span class="string">"0000000000000001"</span>,</span><br><span class="line">    <span class="string">"command_result"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"result"</span>: <span class="string">"success"</span>,</span><br><span class="line">        <span class="string">"details"</span>: <span class="string">"Rule added. : rule_id=1"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">curl -X <span class="keyword">POST</span> -<span class="keyword">d</span> ’&#123;<span class="string">"nw_src"</span>: <span class="string">"10.0.0.2/32"</span>, <span class="string">"nw_dst"</span>: <span class="string">"10.0.0.1/32"</span>, <span class="string">"nw_proto"</span>:</span><br><span class="line"><span class="string">"ICMP"</span>&#125;’ http:<span class="comment">//localhost:8080/firewall/rules/0000000000000001</span></span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"switch_id"</span>: <span class="string">"0000000000000001"</span>,</span><br><span class="line">    <span class="string">"command_result"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"result"</span>: <span class="string">"success"</span>,</span><br><span class="line">        <span class="string">"details"</span>: <span class="string">"Rule added. : rule_id=2"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>在交换机s1上查看流表信息：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mininet@mininet-vm:~$ sudo ovs-ofctl -O openflow13 dump-flows s1</span><br><span class="line">OFPST_FLOW reply (OF1.3) (xid=0x2):</span><br><span class="line"> cookie=0x1, duration=14.573s, <span class="keyword">table</span>=0, n_packets=0, n_bytes=0, priority=1,icmp,nw_src=10.0.0.1,nw_dst=10.0.0.2 actions=<span class="literal">NORMAL</span></span><br><span class="line"> cookie=0x2, duration=6.237s, <span class="keyword">table</span>=0, n_packets=0, n_bytes=0, priority=1,icmp,nw_src=10.0.0.2,nw_dst=10.0.0.1 actions=<span class="literal">NORMAL</span></span><br><span class="line"> cookie=0x0, duration=151.7s, <span class="keyword">table</span>=0, n_packets=0, n_bytes=0, priority=65534,arp actions=<span class="literal">NORMAL</span></span><br><span class="line"> cookie=0x0, duration=151.7s, <span class="keyword">table</span>=0, n_packets=0, n_bytes=0, priority=0 actions=CONTROLLER:128</span><br><span class="line">mininet@mininet-vm:~$</span><br></pre></td></tr></table></figure></p>
<p>可见这个时候除了h1, h2之间的ping包外，其它数据包都将转向控制器.</p>
<h4 id="u5141_u8BB8h2_2C_h3_u4E4B_u95F4_u6240_u4EE5_u7684IP_u6570_u636E_u5305_u901A_u4FE1"><a href="#u5141_u8BB8h2_2C_h3_u4E4B_u95F4_u6240_u4EE5_u7684IP_u6570_u636E_u5305_u901A_u4FE1" class="headerlink" title="允许h2, h3之间所以的IP数据包通信"></a>允许h2, h3之间所以的IP数据包通信</h4><p>允许h2, h3之间所有的IP数据包进行通信，需要增加两条规则，如下图：<br><img src="/images/SDN/firewall3.png" alt="h2,h3,ip"><br>具体如下：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -d ’&#123;<span class="string">"nw_src"</span>: <span class="string">"10.0.0.2/32"</span>, <span class="string">"nw_dst"</span>: <span class="string">"10.0.0.3/32"</span>&#125;’ <span class="string">http:</span><span class="comment">//</span></span><br><span class="line"><span class="string">localhost:</span><span class="number">8080</span><span class="regexp">/firewall/</span>rules/<span class="number">0000000000000001</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"switch_id"</span>: <span class="string">"0000000000000001"</span>,</span><br><span class="line">    <span class="string">"command_result"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"result"</span>: <span class="string">"success"</span>,</span><br><span class="line">        <span class="string">"details"</span>: <span class="string">"Rule added. : rule_id=3"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">curl -X POST -d ’&#123;<span class="string">"nw_src"</span>: <span class="string">"10.0.0.3/32"</span>, <span class="string">"nw_dst"</span>: <span class="string">"10.0.0.2/32"</span>&#125;’ <span class="string">http:</span><span class="comment">//</span></span><br><span class="line"><span class="string">localhost:</span><span class="number">8080</span><span class="regexp">/firewall/</span>rules/<span class="number">0000000000000001</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"switch_id"</span>: <span class="string">"0000000000000001"</span>,</span><br><span class="line">    <span class="string">"command_result"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"result"</span>: <span class="string">"success"</span>,</span><br><span class="line">        <span class="string">"details"</span>: <span class="string">"Rule added. : rule_id=4"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>查看此时交换机s1的流表规则：<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mininet@mininet-vm:~$ sudo ovs-ofctl -O openflow13 dump-flows s1</span><br><span class="line">OFPST_FLOW reply (OF1.3) (xid=0x2):</span><br><span class="line"> cookie=0x3, duration=<span class="number">116.689</span>s, table=0, n_packets=0, n_bytes=0, priority=1,ip,nw_src=<span class="number">10.0.0.2</span>,nw_dst=<span class="number">10.0.0.3</span> actions=NORMAL</span><br><span class="line"> cookie=0x4, duration=<span class="number">108.073</span>s, table=0, n_packets=0, n_bytes=0, priority=1,ip,nw_src=<span class="number">10.0.0.3</span>,nw_dst=<span class="number">10.0.0.2</span> actions=NORMAL</span><br><span class="line"> cookie=0x1, duration=<span class="number">645.369</span>s, table=0, n_packets=0, n_bytes=0, priority=1,icmp,nw_src=<span class="number">10.0.0.1</span>,nw_dst=<span class="number">10.0.0.2</span> actions=NORMAL</span><br><span class="line"> cookie=0x2, duration=<span class="number">637.033</span>s, table=0, n_packets=0, n_bytes=0, priority=1,icmp,nw_src=<span class="number">10.0.0.2</span>,nw_dst=<span class="number">10.0.0.1</span> actions=NORMAL</span><br><span class="line"> cookie=0x0, duration=<span class="number">782.496</span>s, table=0, n_packets=0, n_bytes=0, priority=65534,arp actions=NORMAL</span><br><span class="line"> cookie=0x0, duration=<span class="number">782.496</span>s, table=0, n_packets=0, n_bytes=0, priority=0 actions=CONTROLLER:128</span><br><span class="line">mininet@mininet-vm:~$</span><br></pre></td></tr></table></figure></p>
<h4 id="u963B_u585Eh2_2Ch3_u4E4B_u95F4icmp_u6570_u636E_u5305"><a href="#u963B_u585Eh2_2Ch3_u4E4B_u95F4icmp_u6570_u636E_u5305" class="headerlink" title="阻塞h2,h3之间icmp数据包"></a>阻塞h2,h3之间icmp数据包</h4><p>上面步骤允许h2,h3之间所以IP数据包通信，且优先级为1,这里要阻塞h2,h3之间的icmp数据包，可下发两条规则，且设为更高的优先级．如下：<br><img src="/images/SDN/firewall4.png" alt="block icmp h2 h3"><br>具体操作如下：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -d ’&#123;<span class="string">"nw_src"</span>: <span class="string">"10.0.0.2/32"</span>, <span class="string">"nw_dst"</span>: <span class="string">"10.0.0.3/32"</span>, <span class="string">"nw_proto</span><br><span class="line">"</span>: <span class="string">"ICMP"</span>, <span class="string">"actions"</span>: <span class="string">"DENY"</span>, <span class="string">"priority"</span>: <span class="string">"10"</span>&#125;’ http://localhost:<span class="number">8080</span>/firewall/rules</span><br><span class="line">/<span class="number">0000000000000001</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"switch_id"</span>: <span class="string">"0000000000000001"</span>,</span><br><span class="line">    <span class="string">"command_result"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"result"</span>: <span class="string">"success"</span>,</span><br><span class="line">        <span class="string">"details"</span>: <span class="string">"Rule added. : rule_id=5"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">curl -X POST -d ’&#123;<span class="string">"nw_src"</span>: <span class="string">"10.0.0.3/32"</span>, <span class="string">"nw_dst"</span>: <span class="string">"10.0.0.2/32"</span>, <span class="string">"nw_proto</span><br><span class="line">"</span>: <span class="string">"ICMP"</span>, <span class="string">"actions"</span>: <span class="string">"DENY"</span>, <span class="string">"priority"</span>: <span class="string">"10"</span>&#125;’ http://localhost:<span class="number">8080</span>/firewall/rules</span><br><span class="line">/<span class="number">0000000000000001</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"switch_id"</span>: <span class="string">"0000000000000001"</span>,</span><br><span class="line">    <span class="string">"command_result"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"result"</span>: <span class="string">"success"</span>,</span><br><span class="line">        <span class="string">"details"</span>: <span class="string">"Rule added. : rule_id=6"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>查看流表规则：<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mininet@mininet-vm:~$ sudo ovs-ofctl -O openflow13 dump-flows s1</span><br><span class="line">OFPST_FLOW reply (OF1.3) (xid=0x2):</span><br><span class="line"> cookie=0x3, duration=<span class="number">2528.497</span>s, table=0, n_packets=0, n_bytes=0, priority=1,ip,nw_src=<span class="number">10.0.0.2</span>,nw_dst=<span class="number">10.0.0.3</span> actions=NORMAL</span><br><span class="line"> cookie=0x4, duration=<span class="number">2519.881</span>s, table=0, n_packets=0, n_bytes=0, priority=1,ip,nw_src=<span class="number">10.0.0.3</span>,nw_dst=<span class="number">10.0.0.2</span> actions=NORMAL</span><br><span class="line"> cookie=0x5, duration=73.716s, table=0, n_packets=0, n_bytes=0, priority=10,icmp,nw_src=<span class="number">10.0.0.2</span>,nw_dst=<span class="number">10.0.0.3</span> actions=CONTROLLER:128</span><br><span class="line"> cookie=0x1, duration=<span class="number">3057.177</span>s, table=0, n_packets=0, n_bytes=0, priority=1,icmp,nw_src=<span class="number">10.0.0.1</span>,nw_dst=<span class="number">10.0.0.2</span> actions=NORMAL</span><br><span class="line"> cookie=0x6, duration=33.389s, table=0, n_packets=0, n_bytes=0, priority=10,icmp,nw_src=<span class="number">10.0.0.3</span>,nw_dst=<span class="number">10.0.0.2</span> actions=CONTROLLER:128</span><br><span class="line"> cookie=0x2, duration=<span class="number">3048.841</span>s, table=0, n_packets=0, n_bytes=0, priority=1,icmp,nw_src=<span class="number">10.0.0.2</span>,nw_dst=<span class="number">10.0.0.1</span> actions=NORMAL</span><br><span class="line"> cookie=0x0, duration=<span class="number">3194.304</span>s, table=0, n_packets=0, n_bytes=0, priority=65534,arp actions=NORMAL</span><br><span class="line"> cookie=0x0, duration=<span class="number">3194.304</span>s, table=0, n_packets=0, n_bytes=0, priority=0 actions=CONTROLLER:128</span><br><span class="line">mininet@mininet-vm:~$</span><br></pre></td></tr></table></figure></p>
<h3 id="u786E_u8BA4_u89C4_u5219"><a href="#u786E_u8BA4_u89C4_u5219" class="headerlink" title="确认规则"></a>确认规则</h3><h4 id="u67E5_u770B_u5DF2_u7ECF_u4E0B_u53D1_u89C4_u5219"><a href="#u67E5_u770B_u5DF2_u7ECF_u4E0B_u53D1_u89C4_u5219" class="headerlink" title="查看已经下发规则"></a>查看已经下发规则</h4><p>＞　curl <a href="http://localhost:8080/firewall/rules/0000000000000001" target="_blank" rel="external">http://localhost:8080/firewall/rules/0000000000000001</a></p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    "<span class="attribute">access_control_list</span>": <span class="value">[</span><br><span class="line">      &#123;</span><br><span class="line">        "<span class="attribute">rules</span>": <span class="value">[</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">priority</span>": <span class="value"><span class="number">1</span></span>,</span><br><span class="line">            "<span class="attribute">dl_type</span>": <span class="value"><span class="string">"IPv4"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_dst</span>": <span class="value"><span class="string">"10.0.0.3"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_src</span>": <span class="value"><span class="string">"10.0.0.2"</span></span>,</span><br><span class="line">            "<span class="attribute">rule_id</span>": <span class="value"><span class="number">3</span></span>,</span><br><span class="line">            "<span class="attribute">actions</span>": <span class="value"><span class="string">"ALLOW"</span></span><br><span class="line">          </span>&#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">priority</span>": <span class="value"><span class="number">1</span></span>,</span><br><span class="line">            "<span class="attribute">dl_type</span>": <span class="value"><span class="string">"IPv4"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_dst</span>": <span class="value"><span class="string">"10.0.0.2"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_src</span>": <span class="value"><span class="string">"10.0.0.3"</span></span>,</span><br><span class="line">            "<span class="attribute">rule_id</span>": <span class="value"><span class="number">4</span></span>,</span><br><span class="line">            "<span class="attribute">actions</span>": <span class="value"><span class="string">"ALLOW"</span></span><br><span class="line">          </span>&#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">priority</span>": <span class="value"><span class="number">10</span></span>,</span><br><span class="line">            "<span class="attribute">dl_type</span>": <span class="value"><span class="string">"IPv4"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_proto</span>": <span class="value"><span class="string">"ICMP"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_dst</span>": <span class="value"><span class="string">"10.0.0.3"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_src</span>": <span class="value"><span class="string">"10.0.0.2"</span></span>,</span><br><span class="line">            "<span class="attribute">rule_id</span>": <span class="value"><span class="number">5</span></span>,</span><br><span class="line">            "<span class="attribute">actions</span>": <span class="value"><span class="string">"DENY"</span></span><br><span class="line">          </span>&#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">priority</span>": <span class="value"><span class="number">1</span></span>,</span><br><span class="line">            "<span class="attribute">dl_type</span>": <span class="value"><span class="string">"IPv4"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_proto</span>": <span class="value"><span class="string">"ICMP"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_dst</span>": <span class="value"><span class="string">"10.0.0.2"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_src</span>": <span class="value"><span class="string">"10.0.0.1"</span></span>,</span><br><span class="line">            "<span class="attribute">rule_id</span>": <span class="value"><span class="number">1</span></span>,</span><br><span class="line">            "<span class="attribute">actions</span>": <span class="value"><span class="string">"ALLOW"</span></span><br><span class="line">          </span>&#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">priority</span>": <span class="value"><span class="number">10</span></span>,</span><br><span class="line">            "<span class="attribute">dl_type</span>": <span class="value"><span class="string">"IPv4"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_proto</span>": <span class="value"><span class="string">"ICMP"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_dst</span>": <span class="value"><span class="string">"10.0.0.2"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_src</span>": <span class="value"><span class="string">"10.0.0.3"</span></span>,</span><br><span class="line">            "<span class="attribute">rule_id</span>": <span class="value"><span class="number">6</span></span>,</span><br><span class="line">            "<span class="attribute">actions</span>": <span class="value"><span class="string">"DENY"</span></span><br><span class="line">          </span>&#125;,</span><br><span class="line">          &#123;</span><br><span class="line">            "<span class="attribute">priority</span>": <span class="value"><span class="number">1</span></span>,</span><br><span class="line">            "<span class="attribute">dl_type</span>": <span class="value"><span class="string">"IPv4"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_proto</span>": <span class="value"><span class="string">"ICMP"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_dst</span>": <span class="value"><span class="string">"10.0.0.1"</span></span>,</span><br><span class="line">            "<span class="attribute">nw_src</span>": <span class="value"><span class="string">"10.0.0.2"</span></span>,</span><br><span class="line">            "<span class="attribute">rule_id</span>": <span class="value"><span class="number">2</span></span>,</span><br><span class="line">            "<span class="attribute">actions</span>": <span class="value"><span class="string">"ALLOW"</span></span><br><span class="line">          </span>&#125;</span><br><span class="line">        ]</span><br><span class="line">      </span>&#125;</span><br><span class="line">    ]</span>,</span><br><span class="line">    "<span class="attribute">switch_id</span>": <span class="value"><span class="string">"0000000000000001"</span></span><br><span class="line">  </span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h4 id="u89C4_u5219_u56FE"><a href="#u89C4_u5219_u56FE" class="headerlink" title="规则图"></a>规则图</h4><p>根据下发的规则，有如下示意图：<br><img src="/images/SDN/firewall5.png" alt="confirm"></p>
<h4 id="u6D4B_u8BD5_u89C4_u5219"><a href="#u6D4B_u8BD5_u89C4_u5219" class="headerlink" title="测试规则"></a>测试规则</h4><h5 id="h1_ping_h2"><a href="#h1_ping_h2" class="headerlink" title="h1 ping h2"></a>h1 ping h2</h5><p>规则设置允许h2，h3之间的icmp数据包，所以通信正常:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mininet&gt; h1 ping h2 -c <span class="number">3</span></span><br><span class="line">PING <span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span> (<span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span>) <span class="number">56</span>(<span class="number">84</span>) bytes of data.</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span>: icmp_seq=<span class="number">1</span> ttl=<span class="number">64</span> time=<span class="number">1.03</span> ms</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span>: icmp_seq=<span class="number">2</span> ttl=<span class="number">64</span> time=<span class="number">0.349</span> ms</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span>: icmp_seq=<span class="number">3</span> ttl=<span class="number">64</span> time=<span class="number">0.054</span> ms</span><br><span class="line"></span><br><span class="line">--- <span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span> ping statistics ---</span><br><span class="line"><span class="number">3</span> packets transmitted, <span class="number">3</span> received, <span class="number">0</span>% packet loss, time <span class="number">2000</span>ms</span><br><span class="line">rtt min/avg/max/mdev = <span class="number">0.054</span>/<span class="number">0.479</span>/<span class="number">1.034</span>/<span class="number">0.410</span> ms</span><br><span class="line">mininet&gt;</span><br></pre></td></tr></table></figure></p>
<h5 id="h1_2Ch2_u5176_u5B83_u6570_u636E_u901A_u4FE1"><a href="#h1_2Ch2_u5176_u5B83_u6570_u636E_u901A_u4FE1" class="headerlink" title="h1,h2其它数据通信"></a>h1,h2其它数据通信</h5><p>h1,h2只能进行icmp相关的通信，比如进行http通信，将被阻塞：<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mininet&gt; h1 wget http://10.0.0.2</span><br><span class="line">--2016-01-24 06:16:11--  http://10.0.0.2/</span><br><span class="line">Connecting to 10.0.0.2:80... ^C</span><br><span class="line">mininet&gt; </span><br><span class="line"></span><br><span class="line"><span class="special">[</span>FW<span class="special">]</span><span class="special">[</span>INFO<span class="special">]</span> dpid=0000000000000001: Blocked packet = ethernet(dst='00:00:00:00:00:02',ethertype=2048,src='00:00:00:00:00:01'), ipv4(csum=2706,dst='10.0.0.2',flags=2,header_length=5,identification=7208,offset=0,option=None,proto=6,src='10.0.0.1',tos=0,total_length=60,ttl=64,version=4), tcp(ack=0,bits=2,csum=11391,dst_port=80,offset=10,option='<span class="command">\x</span>02<span class="command">\x</span>04<span class="command">\x</span>05<span class="command">\xb</span>4<span class="command">\x</span>04<span class="command">\x</span>02<span class="command">\x</span>08<span class="command">\n</span><span class="command">\x</span>00`<span class="command">\x</span>91<span class="command">\x</span>94<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>01<span class="command">\x</span>03<span class="command">\x</span>03<span class="command">\t</span>',seq=3941373599,src_port=33179,urgent=0,window_size=29200)</span><br></pre></td></tr></table></figure></p>
<h5 id="h2_ping_h3"><a href="#h2_ping_h3" class="headerlink" title="h2 ping h3"></a>h2 ping h3</h5><p>h2,h3之间icmp数据是阻塞的，无法通信：<br><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mininet&gt; h2 ping h3</span><br><span class="line">PING 10.0.0.3 (10.0.0.3) 56(84) bytes of data.</span><br><span class="line">^C</span><br><span class="line">--- 10.0.0.3 ping statistics ---</span><br><span class="line">3 packets transmitted, 0 received, 100<span class="comment">% packet loss, time 2014ms</span></span><br><span class="line"></span><br><span class="line">mininet&gt; </span><br><span class="line"></span><br><span class="line"><span class="special">[</span>FW<span class="special">]</span><span class="special">[</span>INFO<span class="special">]</span> dpid=0000000000000001: Blocked packet = ethernet(dst='00:00:00:00:00:03',ethertype=2048,src='00:00:00:00:00:02'), ipv4(csum=51515,dst='10.0.0.3',flags=2,header_length=5,identification=23913,offset=0,option=None,proto=1,src='10.0.0.2',tos=0,total_length=84,ttl=64,version=4), icmp(code=0,csum=10841,data=echo(data='<span class="command">\x</span>1e<span class="command">\xde</span><span class="command">\xa</span>4V<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>1f<span class="command">\x</span>85<span class="command">\t</span><span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>00<span class="command">\x</span>10<span class="command">\x</span>11<span class="command">\x</span>12<span class="command">\x</span>13<span class="command">\x</span>14<span class="command">\x</span>15<span class="command">\x</span>16<span class="command">\x</span>17<span class="command">\x</span>18<span class="command">\x</span>19<span class="command">\x</span>1a<span class="command">\x</span>1b<span class="command">\x</span>1c<span class="command">\x</span>1d<span class="command">\x</span>1e<span class="command">\x</span>1f !"<span class="special">#</span><span class="formula">$%<span class="special">&amp;</span><span class="command">\'</span>()*+,-./01234567',id=8983,seq=3),type=8)</span></span><br></pre></td></tr></table></figure></p>
<h5 id="h3_wget_http_3A//10-0-0-2_3A8080"><a href="#h3_wget_http_3A//10-0-0-2_3A8080" class="headerlink" title="h3 wget http://10.0.0.2:8080"></a>h3 wget <a href="http://10.0.0.2:8080" target="_blank" rel="external">http://10.0.0.2:8080</a></h5><p>h2,h3之间除了icmp外，其它ipv4数据包通信正常．<br>这里可以python自带的包建立简单的web服务器，用来测试是否能正常通信<br>＞　h2 python -m SimpleHTTPServer 8080</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mininet&gt; h2 python -m SimpleHTTPServer <span class="number">8080</span> &amp;</span><br><span class="line">mininet&gt; h3 wget <span class="string">http:</span><span class="comment">//10.0.0.2:8080</span></span><br><span class="line">--<span class="number">2016</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">06</span>:<span class="number">27</span>:<span class="number">12</span>--  <span class="string">http:</span><span class="comment">//10.0.0.2:8080/</span></span><br><span class="line">Connecting to <span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span>:<span class="number">8080.</span>.. connected.</span><br><span class="line">HTTP request sent, awaiting response... <span class="number">200</span> OK</span><br><span class="line"><span class="string">Length:</span> <span class="number">1600</span> (<span class="number">1.6</span>K) [text/html]</span><br><span class="line">Saving <span class="string">to:</span> <span class="string">'index.html'</span></span><br><span class="line"></span><br><span class="line"> <span class="number">0</span>% [                                       ] <span class="number">0</span>           --.-K<span class="regexp">/s          100%[======================================&gt;] 1,600       --.-K/</span>s   <span class="keyword">in</span> <span class="number">0</span>s      </span><br><span class="line"></span><br><span class="line"><span class="number">2016</span>-<span class="number">01</span>-<span class="number">24</span> <span class="number">06</span>:<span class="number">27</span>:<span class="number">12</span> (<span class="number">305</span> MB<span class="regexp">/s) - 'index.html' saved [1600/</span><span class="number">1600</span>]</span><br><span class="line"></span><br><span class="line">mininet&gt;</span><br></pre></td></tr></table></figure>
<p>可见通信正常．</p>
<h3 id="u5220_u9664_u89C4_u5219"><a href="#u5220_u9664_u89C4_u5219" class="headerlink" title="删除规则"></a>删除规则</h3><p>####　删除rule5和rule5<br>即取消对h2,h3的icmp数据包的限制：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">curl -X <span class="operator"><span class="keyword">DELETE</span> -<span class="keyword">d</span> ’&#123;<span class="string">"rule_id"</span>: <span class="string">"5"</span>&#125;’ <span class="keyword">http</span>://localhost:<span class="number">8080</span>/firewall/<span class="keyword">rules</span></span><br><span class="line">/<span class="number">0000000000000001</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"switch_id"</span>: <span class="string">"0000000000000001"</span>,</span><br><span class="line">    <span class="string">"command_result"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"result"</span>: <span class="string">"success"</span>,</span><br><span class="line">        <span class="string">"details"</span>: <span class="string">"Rule deleted. : ruleID=5"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">curl -X <span class="keyword">DELETE</span> -<span class="keyword">d</span> ’&#123;<span class="string">"rule_id"</span>: <span class="string">"6"</span>&#125;’ <span class="keyword">http</span>://localhost:<span class="number">8080</span>/firewall/<span class="keyword">rules</span></span><br><span class="line">/<span class="number">0000000000000001</span></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">"switch_id"</span>: <span class="string">"0000000000000001"</span>,</span><br><span class="line">    <span class="string">"command_result"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="string">"result"</span>: <span class="string">"success"</span>,</span><br><span class="line">        <span class="string">"details"</span>: <span class="string">"Rule deleted. : ruleID=6"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span></span><br></pre></td></tr></table></figure></p>
<h4 id="u5220_u9664_u540E_u7684_u793A_u610F_u56FE"><a href="#u5220_u9664_u540E_u7684_u793A_u610F_u56FE" class="headerlink" title="删除后的示意图"></a>删除后的示意图</h4><p><img src="/images/SDN/firewall6.png" alt="delete confirm"></p>
<h4 id="h2_ping_h3-1"><a href="#h2_ping_h3-1" class="headerlink" title="h2 ping h3"></a>h2 ping h3</h4><p>删除后，h2，h3之间icmp数据包通信成功:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mininet&gt; h2 ping h3</span><br><span class="line">PING <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span> (<span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>) <span class="number">56</span>(<span class="number">84</span>) bytes of data.</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>: icmp_seq=<span class="number">19</span> ttl=<span class="number">64</span> time=<span class="number">0.375</span> ms</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>: icmp_seq=<span class="number">20</span> ttl=<span class="number">64</span> time=<span class="number">0.066</span> ms</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>: icmp_seq=<span class="number">21</span> ttl=<span class="number">64</span> time=<span class="number">0.067</span> ms</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>: icmp_seq=<span class="number">22</span> ttl=<span class="number">64</span> time=<span class="number">0.066</span> ms</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>: icmp_seq=<span class="number">23</span> ttl=<span class="number">64</span> time=<span class="number">0.064</span> ms</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>: icmp_seq=<span class="number">24</span> ttl=<span class="number">64</span> time=<span class="number">0.065</span> ms</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>: icmp_seq=<span class="number">25</span> ttl=<span class="number">64</span> time=<span class="number">0.062</span> ms</span><br><span class="line">^C</span><br><span class="line">--- <span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span> ping statistics ---</span><br><span class="line"><span class="number">25</span> packets transmitted, <span class="number">7</span> received, <span class="number">72</span>% packet loss, time <span class="number">23999</span>ms</span><br><span class="line">rtt min/avg/max/mdev = <span class="number">0.062</span>/<span class="number">0.109</span>/<span class="number">0.375</span>/<span class="number">0.108</span> ms</span><br><span class="line">mininet&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h2><p>通过这章内容的时间,大概了解了RYU控制器firewall即防火墙的使用方法.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u6982_u8981"><a href="#u6982_u8981" class="headerlink" title="概要"></a>概要</h2><p>本篇博文根据RYU控制的官方文档<em>RYU book</em>第九章<em>FIREWALL</em]]>
    </summary>
    
      <category term="ryu" scheme="http://pzengseu.github.io/tags/ryu/"/>
    
      <category term="sdn" scheme="http://pzengseu.github.io/tags/sdn/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅析python正则表达式二:用好问号]]></title>
    <link href="http://pzengseu.github.io/2016/01/19/python/re-interrogation/"/>
    <id>http://pzengseu.github.io/2016/01/19/python/re-interrogation/</id>
    <published>2016-01-19T13:47:33.000Z</published>
    <updated>2016-01-26T02:15:34.000Z</updated>
    <content type="html"><![CDATA[<h3 id="u6700_u539F_u59CB_u7528_u6CD5"><a href="#u6700_u539F_u59CB_u7528_u6CD5" class="headerlink" title="最原始用法"></a>最原始用法</h3><p>“?”最原始的用法是匹配或不匹配前面的模式，这个不必多说。</p>
<h3 id="u95EE_u53F7_u8F6C_u4E49"><a href="#u95EE_u53F7_u8F6C_u4E49" class="headerlink" title="问号转义"></a>问号转义</h3><p>由于问号的特殊含义，若要在字符串中匹配字符’?’,要加上转义符，即’\?’</p>
<h3 id="u8D2A_u5A6A_u6A21_u5F0F"><a href="#u8D2A_u5A6A_u6A21_u5F0F" class="headerlink" title="贪婪模式"></a>贪婪模式</h3><p>在查看re的帮助文档时，能看到：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"*"</span>      Matches <span class="number">0</span> <span class="operator">or</span> more (greedy) repetitions <span class="operator">of</span> <span class="operator">the</span> preceding RE.</span><br><span class="line">     	 Greedy means that <span class="keyword">it</span> will match <span class="keyword">as</span> many repetitions <span class="keyword">as</span> possible.</span><br><span class="line"><span class="string">"+"</span>      Matches <span class="number">1</span> <span class="operator">or</span> more (greedy) repetitions <span class="operator">of</span> <span class="operator">the</span> preceding RE.</span><br><span class="line"><span class="string">"?"</span>      Matches <span class="number">0</span> <span class="operator">or</span> <span class="number">1</span> (greedy) <span class="operator">of</span> <span class="operator">the</span> preceding RE.</span><br><span class="line">*?,+?,?? Non-greedy versions <span class="operator">of</span> <span class="operator">the</span> previous <span class="constant">three</span> special <span class="keyword">characters</span>.</span><br><span class="line">&#123;m,n&#125;?   Non-greedy <span class="built_in">version</span> <span class="operator">of</span> <span class="operator">the</span> above.</span><br></pre></td></tr></table></figure></p>
<p>可见*,+,?,{m,n}默认都是贪婪模式，即匹配尽量多的数据，但这在一些情况下会出现问题，导致意想不到的结果发生，如：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">11</span>]: re.sub(<span class="string">r'a(.+)u'</span>,<span class="string">'love'</span>,<span class="string">'I abu you!'</span>)</span><br><span class="line">Out[<span class="number">11</span>]: <span class="string">'I love!'</span></span><br></pre></td></tr></table></figure></p>
<p>这明显不科学啊！</p>
<p>那么问题来了，如何使用非贪婪模式，可在*,+,?,{m,n}后加上问号:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">12</span>]: re.sub(<span class="string">r'a(.+?)u'</span>,<span class="string">'love'</span>,<span class="string">'I abu you!'</span>)</span><br><span class="line">Out[<span class="number">12</span>]: <span class="string">'I love you!'</span></span><br></pre></td></tr></table></figure></p>
<p>好了，不用再爱感叹号了。</p>
<h3 id="u5B50_u6A21_u5F0F_u53D6_u6D88_u7EC4_u53F7"><a href="#u5B50_u6A21_u5F0F_u53D6_u6D88_u7EC4_u53F7" class="headerlink" title="子模式取消组号"></a>子模式取消组号</h3><p>这种用法，想不到取个什么名字好，在帮助文档中是这样描述的：</p>
<blockquote>
<p>(?:…)  Non-grouping version of regular parentheses.</p>
</blockquote>
<p>在<a href="https://www.hackerrank.com/challenges/hex-color-code" target="_blank" rel="external">harkerranker上一道题</a>用到了这个用法，但我把这个用法去掉，还是可以通过的，所以对这个用法感到特别迷惑，在stack oveflow上找到了比较好的解释。</p>
<blockquote>
<p><a href="http://stackoverflow.com/questions/3512471/what-is-a-non-capturing-group" target="_blank" rel="external">http://stackoverflow.com/questions/3512471/what-is-a-non-capturing-group</a></p>
</blockquote>
<p>如果有两个网站链接：</p>
<blockquote>
<p><a href="http://stackoverflow.com/" target="_blank" rel="external">http://stackoverflow.com/</a><br><a href="http://stackoverflow.com/questions/tagged/regex" target="_blank" rel="external">http://stackoverflow.com/questions/tagged/regex</a></p>
</blockquote>
<p>匹配模式为：</p>
<blockquote>
<p>(http|ftp)://([^/\r\n]+)(/[^\r\n]*)?</p>
</blockquote>
<p>结果如下：</p>
<blockquote>
<p>group() “<a href="http://stackoverflow.com/" target="_blank" rel="external">http://stackoverflow.com/</a>“<br>group(1) http<br>group(2) stackoverflow.com<br>group(3) /</p>
<p>group() <a href="http://stackoverflow.com/questions/tagged/regex" target="_blank" rel="external">http://stackoverflow.com/questions/tagged/regex</a><br>group(1) http<br>group(2) stackoverflow.com<br>group(3) /questions/tagged/regex</p>
</blockquote>
<p>但是如果我们不关心用到的协议，怎么办？这个时候就到这种用法发挥的时候了，将匹配模式改为：</p>
<blockquote>
<p>(?:http|ftp)://([^/\r\n]+)(/[^\r\n]*)?</p>
</blockquote>
<p>则结果变为：</p>
<blockquote>
<p>group() “<a href="http://stackoverflow.com/" target="_blank" rel="external">http://stackoverflow.com/</a>“<br>group(1) stackoverflow.com<br>group(2) /</p>
<p>group() <a href="http://stackoverflow.com/questions/tagged/regex" target="_blank" rel="external">http://stackoverflow.com/questions/tagged/regex</a><br>group(1) stackoverflow.com<br>group(2) /questions/tagged/regex</p>
</blockquote>
<h3 id="u53EF_u9884_u89C1_u6A21_u5F0F"><a href="#u53EF_u9884_u89C1_u6A21_u5F0F" class="headerlink" title="可预见模式"></a>可预见模式</h3><p>这种用法就太有用处了，它可以确定模式的前面或后面一定会出现某些子模式，而且这些子模式是没有组号的。在帮助文档中描述如下：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(?=<span class="attribute">...</span>)  Matches <span class="keyword">if</span> <span class="attribute">...</span> matches next, but doesn<span class="string">'t consume the string.</span><br><span class="line">(?!...)  Matches if ... doesn'</span>t <span class="keyword">match</span> next<span class="built_in">.</span><br><span class="line"></span>(?&lt;=<span class="attribute">...</span>) Matches <span class="keyword">if</span> preceded <span class="keyword">by</span> <span class="attribute">...</span> (must be fixed length)<span class="built_in">.</span><br><span class="line"></span>(?&lt;<span class="subst">!</span><span class="attribute">...</span>) Matches <span class="keyword">if</span> <span class="subst">not</span> preceded <span class="keyword">by</span> <span class="attribute">...</span> (must be fixed length)<span class="built_in">.</span></span><br></pre></td></tr></table></figure></p>
<h4 id="u4F8B1_uFF1A"><a href="#u4F8B1_uFF1A" class="headerlink" title="例1："></a>例1：</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">24</span>]: <span class="keyword">print</span> re.search(<span class="string">r'(?&lt;!^)#[abc]&#123;2,&#125;(?=z)'</span>,<span class="string">'#abcz'</span>)</span><br><span class="line"><span class="keyword">None</span></span><br><span class="line"></span><br><span class="line">In [<span class="number">27</span>]: <span class="keyword">print</span> re.search(<span class="string">r'(?&lt;!^)#[abc]&#123;2,&#125;(?=z)'</span>,<span class="string">'a#ababcz'</span>).group()</span><br><span class="line"><span class="comment">#ababc</span></span><br></pre></td></tr></table></figure>
<p>其中(?&lt;!^)表示模式不能出现在开头。</p>
<h4 id="u4F8B2_3A"><a href="#u4F8B2_3A" class="headerlink" title="例2:"></a>例2:</h4><p>给定一个字符串和子字符串，找出子字符串在字符串中出现的序号对。该例子可见<a href="https://www.hackerrank.com/challenges/re-start-re-end" target="_blank" rel="external">Hackerrank</a><br>如输入字符串和字符串：</p>
<blockquote>
<p>aaadaa<br>aa</p>
</blockquote>
<p>输出结果为，子字符串在字符串中出现的起始序号：</p>
<blockquote>
<p>(0, 1)<br>(1, 2)<br>(4, 5)</p>
</blockquote>
<h5 id="u65B9_u6CD5_u4E00_uFF1A_u904D_u5386"><a href="#u65B9_u6CD5_u4E00_uFF1A_u904D_u5386" class="headerlink" title="方法一：遍历"></a>方法一：遍历</h5><p>这种方法虽然很好理解，但代码冗余，没有体现出python代码的优美。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">s = raw_input().strip()</span><br><span class="line">k = raw_input().strip()</span><br><span class="line"><span class="literal">result</span> = []</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt;= len(s) -len(k):</span><br><span class="line">    m = re.search(k, s[i:])</span><br><span class="line">    <span class="keyword">if</span> m: <span class="literal">result</span>.append((m.start()+i, m.<span class="keyword">end</span>()+i-<span class="number">1</span>))</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> <span class="literal">result</span>: print (-<span class="number">1</span>, -<span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> sorted(<span class="type">set</span>(<span class="literal">result</span>), key = lambda x: x[<span class="number">0</span>]):</span><br><span class="line">        print x</span><br></pre></td></tr></table></figure></p>
<h5 id="u65B9_u6CD5_u4E8C_uFF1A_u6B63_u5219_u8868_u8FBE_u5F0F_u9884_u89C1_u6A21_u5F0F"><a href="#u65B9_u6CD5_u4E8C_uFF1A_u6B63_u5219_u8868_u8FBE_u5F0F_u9884_u89C1_u6A21_u5F0F" class="headerlink" title="方法二：正则表达式预见模式"></a>方法二：正则表达式预见模式</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">S = <span class="function"><span class="title">raw_input</span><span class="params">()</span></span></span><br><span class="line">k = <span class="function"><span class="title">raw_input</span><span class="params">()</span></span></span><br><span class="line">anymatch = <span class="string">'No'</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> re.<span class="function"><span class="title">finditer</span><span class="params">(r<span class="string">'(?=('</span>+k+<span class="string">'))'</span>,S)</span></span>:</span><br><span class="line">    anymatch = <span class="string">'Yes'</span></span><br><span class="line">    print (m.<span class="function"><span class="title">start</span><span class="params">(<span class="number">1</span>)</span></span>,m.<span class="function"><span class="title">end</span><span class="params">(<span class="number">1</span>)</span></span>-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> anymatch == <span class="string">'No'</span>:</span><br><span class="line">    print (-<span class="number">1</span>, -<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p>运行情况：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">aaadaa</span><br><span class="line"><span class="title">aa</span></span><br><span class="line"><span class="params">(<span class="number">0</span>, <span class="number">1</span>)</span></span><br><span class="line"><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span></span><br><span class="line"><span class="params">(<span class="number">4</span>, <span class="number">5</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<h4 id="u4F8B3_3A__u627E_u51FA_u4EA4_u66FF_u91CD_u590D_u51FA_u73B0_u7684_u5B57_u7B26"><a href="#u4F8B3_3A__u627E_u51FA_u4EA4_u66FF_u91CD_u590D_u51FA_u73B0_u7684_u5B57_u7B26" class="headerlink" title="例3: 找出交替重复出现的字符"></a>例3: 找出交替重复出现的字符</h4><p>可用到例二的方法二,搜索预见模式(?=(\w)\w\1)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">29</span>]: re.findall(<span class="string">r'(?=(\w)\w\1)'</span>, <span class="string">'aaaabbbb'</span>)</span><br><span class="line">Out[<span class="number">29</span>]: [<span class="string">'a'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'b'</span>]</span><br></pre></td></tr></table></figure></p>
<h4 id="u4F8B4_3A__u53EF_u9884_u89C1_u6A21_u5F0F_u4E2D_u51FA_u73B0_u7684_u5B57_u7B26_u6570_u5FC5_u987B_u786E_u5B9A"><a href="#u4F8B4_3A__u53EF_u9884_u89C1_u6A21_u5F0F_u4E2D_u51FA_u73B0_u7684_u5B57_u7B26_u6570_u5FC5_u987B_u786E_u5B9A" class="headerlink" title="例4: 可预见模式中出现的字符数必须确定"></a>例4: 可预见模式中出现的字符数必须确定</h4><p>即可预见模式中不能使用*,+,{m,}等不确定模式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">46</span>]: re.search(<span class="string">r'(?&lt;=a.+)jj'</span>,<span class="string">'asdjj'</span>)</span><br><span class="line">error: look-behind requires fixed-width pattern</span><br><span class="line">In [<span class="number">47</span>]: re.search(<span class="string">r'(?&lt;=a.*)jj'</span>,<span class="string">'asdjj'</span>)</span><br><span class="line">error: look-behind requires fixed-width pattern</span><br><span class="line">In [<span class="number">48</span>]: re.search(<span class="string">r'(?&lt;=a[a-z]&#123;1,&#125;)jj'</span>,<span class="string">'asdjj'</span>)</span><br><span class="line">error: look-behind requires fixed-width pattern</span><br></pre></td></tr></table></figure></p>
<h3 id="u95EE_u53F7_u5728_u5339_u914D_u7EC4_u5B57_u5178_u4E2D_u7684_u7528_u5904"><a href="#u95EE_u53F7_u5728_u5339_u914D_u7EC4_u5B57_u5178_u4E2D_u7684_u7528_u5904" class="headerlink" title="问号在匹配组字典中的用处"></a>问号在匹配组字典中的用处</h3><p>先看帮助文档的描述：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(?P&lt;<span class="property">name</span>&gt;...) The substring matched <span class="keyword">by</span> <span class="keyword">the</span> group <span class="keyword">is</span> accessible <span class="keyword">by</span> <span class="property">name</span>.</span><br></pre></td></tr></table></figure></p>
<p>直接看个例子：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">31</span>]:  m = re.match(<span class="string">r'(?P&lt;user&gt;\w+)@(?P&lt;website&gt;\w+)\.(?P&lt;extension&gt;\w+)'</span>,<span class="string">'myname@hackerrank.com'</span>)</span><br><span class="line"></span><br><span class="line">In [<span class="number">32</span>]:  m.groupdict()</span><br><span class="line">Out[<span class="number">32</span>]: &#123;<span class="string">'extension'</span>: <span class="string">'com'</span>, <span class="string">'user'</span>: <span class="string">'myname'</span>, <span class="string">'website'</span>: <span class="string">'hackerrank'</span>&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h3><p>python正则中常用方法大概就是这些了，还有些几个用法帮助文档中有提到：</p>
<blockquote>
<p>(?P=name)Matches the text matched earlier by the group named name.<br>(?iLmsux) Set the I, L, M, S, U, or X flag for the RE (see below).<br>(?(id/name)yes|no) Matches yes pattern if the group with id/name matched,<br>                           the (optional) no pattern otherwise.</p>
</blockquote>
<p>这些用法至今还没碰到过，以后有机会再来补充。</p>
]]></content>
    <summary type="html">
    <![CDATA[在刷hackerrank上正则表达式题时，发现问号的作用不仅仅只是匹配或不匹配前面的模式，问号在python正则中的用法可谓变化多端，本篇文章总结常用问号用法。正则表达式的水很深，关键是要多实践。]]>
    
    </summary>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="正则表达式" scheme="http://pzengseu.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅析python正则表达式一：基本概念]]></title>
    <link href="http://pzengseu.github.io/2016/01/19/python/re-python/"/>
    <id>http://pzengseu.github.io/2016/01/19/python/re-python/</id>
    <published>2016-01-19T11:04:24.000Z</published>
    <updated>2016-01-26T02:15:08.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>断断续续花了一个多月，把hackerrank上关于python正则部分的题刷完了，对python正则表达式的认识达到了新的高度。写下博文记录一些python正则的技能点。</p>
<h2 id="python_u6B63_u5219"><a href="#python_u6B63_u5219" class="headerlink" title="python正则"></a>python正则</h2><h4 id="u6982_u8FF0"><a href="#u6982_u8FF0" class="headerlink" title="概述"></a>概述</h4><p>在ipython中输入help(re)，查看正则模块re的帮组信息。</p>
<h4 id="u7279_u6B8A_u5B57_u7B26"><a href="#u7279_u6B8A_u5B57_u7B26" class="headerlink" title="特殊字符"></a>特殊字符</h4><p>python正则中的特殊字符如下：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">The special <span class="property">characters</span> are:</span><br><span class="line">    <span class="string">"."</span>      Matches any <span class="property">character</span> except a newline.</span><br><span class="line">    <span class="string">"^"</span>      Matches <span class="keyword">the</span> start <span class="keyword">of</span> <span class="keyword">the</span> <span class="type">string</span>.</span><br><span class="line">    <span class="string">"$"</span>      Matches <span class="keyword">the</span> <span class="keyword">end</span> <span class="keyword">of</span> <span class="keyword">the</span> <span class="type">string</span> <span class="keyword">or</span> just <span class="keyword">before</span> <span class="keyword">the</span> newline <span class="keyword">at</span></span><br><span class="line">             <span class="keyword">the</span> <span class="keyword">end</span> <span class="keyword">of</span> <span class="keyword">the</span> <span class="type">string</span>.</span><br><span class="line">    <span class="string">"*"</span>      Matches <span class="number">0</span> <span class="keyword">or</span> more (greedy) repetitions <span class="keyword">of</span> <span class="keyword">the</span> preceding RE.</span><br><span class="line">             Greedy means <span class="keyword">that</span> <span class="keyword">it</span> will match <span class="keyword">as</span> many repetitions <span class="keyword">as</span> possible.</span><br><span class="line">    <span class="string">"+"</span>      Matches <span class="number">1</span> <span class="keyword">or</span> more (greedy) repetitions <span class="keyword">of</span> <span class="keyword">the</span> preceding RE.</span><br><span class="line">    <span class="string">"?"</span>      Matches <span class="number">0</span> <span class="keyword">or</span> <span class="number">1</span> (greedy) <span class="keyword">of</span> <span class="keyword">the</span> preceding RE.</span><br><span class="line">    *?,+?,?? Non-greedy versions <span class="keyword">of</span> <span class="keyword">the</span> previous three special <span class="property">characters</span>.</span><br><span class="line">    &#123;m,n&#125;    Matches <span class="keyword">from</span> m <span class="keyword">to</span> n repetitions <span class="keyword">of</span> <span class="keyword">the</span> preceding RE.</span><br><span class="line">    &#123;m,n&#125;?   Non-greedy <span class="property">version</span> <span class="keyword">of</span> <span class="keyword">the</span> <span class="keyword">above</span>.</span><br><span class="line">    <span class="string">"\\"</span>     Either escapes special <span class="property">characters</span> <span class="keyword">or</span> signals a special sequence.</span><br><span class="line">    []       Indicates a <span class="keyword">set</span> <span class="keyword">of</span> <span class="property">characters</span>.</span><br><span class="line">             A <span class="string">"^"</span> <span class="keyword">as</span> <span class="keyword">the</span> <span class="keyword">first</span> <span class="property">character</span> indicates a complementing <span class="keyword">set</span>.</span><br><span class="line">    <span class="string">"|"</span>      A|B, creates an RE <span class="keyword">that</span> will match either A <span class="keyword">or</span> B.</span><br><span class="line">    (...)    Matches <span class="keyword">the</span> RE inside <span class="keyword">the</span> parentheses.</span><br><span class="line">             The <span class="property">contents</span> can be retrieved <span class="keyword">or</span> matched later <span class="keyword">in</span> <span class="keyword">the</span> <span class="type">string</span>.</span><br><span class="line">    (?iLmsux) Set <span class="keyword">the</span> I, L, M, S, U, <span class="keyword">or</span> X flag <span class="keyword">for</span> <span class="keyword">the</span> RE (see <span class="keyword">below</span>).</span><br><span class="line">    (?:...)  Non-grouping <span class="property">version</span> <span class="keyword">of</span> regular parentheses.</span><br><span class="line">    (?P&lt;<span class="property">name</span>&gt;...) The substring matched <span class="keyword">by</span> <span class="keyword">the</span> group <span class="keyword">is</span> accessible <span class="keyword">by</span> <span class="property">name</span>.</span><br><span class="line">    (?P=<span class="property">name</span>)     Matches <span class="keyword">the</span> <span class="type">text</span> matched earlier <span class="keyword">by</span> <span class="keyword">the</span> group named <span class="property">name</span>.</span><br><span class="line">    (?<span class="comment">#...)  A comment; ignored.</span></span><br><span class="line">    (?=...)  Matches <span class="keyword">if</span> ... matches next, <span class="keyword">but</span> doesn't consume <span class="keyword">the</span> <span class="type">string</span>.</span><br><span class="line">    (?!...)  Matches <span class="keyword">if</span> ... doesn't match next.</span><br><span class="line">    (?&lt;=...) Matches <span class="keyword">if</span> preceded <span class="keyword">by</span> ... (must be fixed <span class="property">length</span>).</span><br><span class="line">    (?&lt;!...) Matches <span class="keyword">if</span> <span class="keyword">not</span> preceded <span class="keyword">by</span> ... (must be fixed <span class="property">length</span>).</span><br><span class="line">    (?(<span class="property">id</span>/<span class="property">name</span>)yes|no) Matches yes pattern <span class="keyword">if</span> <span class="keyword">the</span> group <span class="keyword">with</span> <span class="property">id</span>/<span class="property">name</span> matched,</span><br><span class="line">                       <span class="keyword">the</span> (optional) no pattern otherwise.</span><br></pre></td></tr></table></figure></p>
<p>总结如下：</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>.</td>
<td>匹配除了换行符的任意字符</td>
</tr>
<tr>
<td>^</td>
<td>字符串开头或<strong> 用在[]中表示不匹配某些字符 </strong></td>
</tr>
<tr>
<td>$</td>
<td>匹配模式的末尾</td>
</tr>
<tr>
<td>*</td>
<td>匹配任意多的字符</td>
</tr>
<tr>
<td>+</td>
<td>至少匹配一个字符</td>
</tr>
<tr>
<td>?</td>
<td>匹配０或一个字符</td>
</tr>
<tr>
<td>{m,n}</td>
<td>表示重复前面模式ｍ到ｎ次，可表达为{m},{m,},{m,n}</td>
</tr>
<tr>
<td>[]</td>
<td>字符集合</td>
</tr>
<tr>
<td>()</td>
<td>子模式</td>
</tr>
<tr>
<td>｜</td>
<td>模式或</td>
</tr>
</tbody>
</table>
<p>？字符在正则表达式中功能特别丰富，看<a href="/2016/01/19/python/re-interrogation/">浅析python正则表达式二：用好问号</a>。</p>
<h4 id="u96C6_u5408_u7B80_u5199"><a href="#u96C6_u5408_u7B80_u5199" class="headerlink" title="集合简写"></a>集合简写</h4><p>查看re帮助文档，如下：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">\<span class="built_in">number</span>  Matches <span class="operator">the</span> contents <span class="operator">of</span> <span class="operator">the</span> group <span class="operator">of</span> <span class="operator">the</span> same <span class="built_in">number</span>.</span><br><span class="line">\A       Matches only <span class="keyword">at</span> <span class="operator">the</span> <span class="built_in">start</span> <span class="operator">of</span> <span class="operator">the</span> <span class="keyword">string</span>.</span><br><span class="line">\Z       Matches only <span class="keyword">at</span> <span class="operator">the</span> <span class="function"><span class="keyword">end</span> <span class="title">of</span> <span class="title">the</span> <span class="title">string</span>.</span></span><br><span class="line">\b       Matches <span class="operator">the</span> <span class="constant">empty</span> <span class="keyword">string</span>, but only <span class="keyword">at</span> <span class="operator">the</span> <span class="built_in">start</span> <span class="operator">or</span> <span class="function"><span class="keyword">end</span> <span class="title">of</span> <span class="title">a</span> <span class="title">word</span>.</span></span><br><span class="line">\B       Matches <span class="operator">the</span> <span class="constant">empty</span> <span class="keyword">string</span>, but <span class="operator">not</span> <span class="keyword">at</span> <span class="operator">the</span> <span class="built_in">start</span> <span class="operator">or</span> <span class="function"><span class="keyword">end</span> <span class="title">of</span> <span class="title">a</span> <span class="title">word</span>.</span></span><br><span class="line">\d       Matches <span class="keyword">any</span> decimal digit; equivalent <span class="built_in">to</span> <span class="operator">the</span> <span class="built_in">set</span> [<span class="number">0</span>-<span class="number">9</span>].</span><br><span class="line">\D       Matches <span class="keyword">any</span> non-digit <span class="keyword">character</span>; equivalent <span class="built_in">to</span> <span class="operator">the</span> <span class="built_in">set</span> [^<span class="number">0</span>-<span class="number">9</span>].</span><br><span class="line">\s       Matches <span class="keyword">any</span> whitespace <span class="keyword">character</span>; equivalent <span class="built_in">to</span> [ \t\n\r\f\v].</span><br><span class="line">\S       Matches <span class="keyword">any</span> non-whitespace <span class="keyword">character</span>; equiv. <span class="built_in">to</span> [^ \t\n\r\f\v].</span><br><span class="line">\w       Matches <span class="keyword">any</span> alphanumeric <span class="keyword">character</span>; equivalent <span class="built_in">to</span> [<span class="operator">a</span>-zA-Z0-<span class="number">9</span>_].</span><br><span class="line">         With LOCALE, <span class="keyword">it</span> will match <span class="operator">the</span> <span class="built_in">set</span> [<span class="number">0</span>-<span class="number">9</span>_] plus <span class="keyword">characters</span> defined</span><br><span class="line">         <span class="keyword">as</span> letters <span class="keyword">for</span> <span class="operator">the</span> current locale.</span><br><span class="line">\W       Matches <span class="operator">the</span> complement <span class="operator">of</span> \w.</span><br><span class="line">\\       Matches <span class="operator">a</span> literal <span class="constant">backslash</span>.</span><br></pre></td></tr></table></figure></p>
<p>总结如下：</p>
<table>
<thead>
<tr>
<th>简写</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>\number</td>
<td>匹配模式组number</td>
</tr>
<tr>
<td>\A</td>
<td>等价于^</td>
</tr>
<tr>
<td>\Z</td>
<td>等价于$</td>
</tr>
<tr>
<td>\b</td>
<td>匹配单词开头结尾的空字符串</td>
</tr>
<tr>
<td>\B</td>
<td>匹配不在单词开头结尾的空字符串</td>
</tr>
<tr>
<td>\d</td>
<td>等价于[0-9]</td>
</tr>
<tr>
<td>\D</td>
<td>等价于[^0-9]</td>
</tr>
<tr>
<td>\s</td>
<td>等价于[ \t\n\r\f\v]</td>
</tr>
<tr>
<td>\S</td>
<td>等价于[^ \t\n\r\f\v]</td>
</tr>
<tr>
<td>\w</td>
<td>等价于[a-zA-Z0-9_]</td>
</tr>
<tr>
<td>\W</td>
<td>等价于[^a-zA-Z0-9_]</td>
</tr>
<tr>
<td>\</td>
<td>转义匹配\</td>
</tr>
</tbody>
</table>
<h5 id="u6709_u5173_5Cnumber_u7684_u7528_u6CD5"><a href="#u6709_u5173_5Cnumber_u7684_u7528_u6CD5" class="headerlink" title="有关\number的用法"></a>有关\number的用法</h5><p>在集合简写这一块中，比较难的的是\number的正确使用</p>
<h5 id="u4F8B1_uFF1A_u67E5_u627E_u5B57_u7B26_u4E32_u4E2D_u662F_u5426_u6709_u5B57_u7B26_u91CD_u590D_u51FA_u73B0"><a href="#u4F8B1_uFF1A_u67E5_u627E_u5B57_u7B26_u4E32_u4E2D_u662F_u5426_u6709_u5B57_u7B26_u91CD_u590D_u51FA_u73B0" class="headerlink" title="例1：查找字符串中是否有字符重复出现"></a>例1：查找字符串中是否有字符重复出现</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">39</span>]: bool(re.search(<span class="string">r'(.).*\1'</span>,<span class="string">'asdfasjkdlk'</span>))</span><br><span class="line">Out[<span class="number">39</span>]: <span class="keyword">True</span></span><br></pre></td></tr></table></figure>
<h5 id="u4F8B2_3A__u67E5_u627E_u5B57_u7B26_u4E32_u4E2D_u662F_u5426_u6709_u5B57_u7B26_u8FDE_u7EED_u51FA_u73B0_u56DB_u6B21"><a href="#u4F8B2_3A__u67E5_u627E_u5B57_u7B26_u4E32_u4E2D_u662F_u5426_u6709_u5B57_u7B26_u8FDE_u7EED_u51FA_u73B0_u56DB_u6B21" class="headerlink" title="例2: 查找字符串中是否有字符连续出现四次"></a>例2: 查找字符串中是否有字符连续出现四次</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">40</span>]: bool(re.search(<span class="string">r'(.)\1&#123;3&#125;'</span>,<span class="string">'asdfaaaasjkdlk'</span>))</span><br><span class="line">Out[<span class="number">40</span>]: <span class="keyword">True</span></span><br></pre></td></tr></table></figure>
<p>上面两个例子中\1表示该处出现的字符或字符串与匹配组1的字符或字符串相同，这里是(.)</p>
<h4 id="u6B63_u5219_u8868_u8FBE_u5F0F_u51FD_u6570"><a href="#u6B63_u5219_u8868_u8FBE_u5F0F_u51FD_u6570" class="headerlink" title="正则表达式函数"></a>正则表达式函数</h4><p>帮助文档如下：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">match    Match <span class="operator">a</span> regular expression pattern <span class="built_in">to</span> <span class="operator">the</span> beginning <span class="operator">of</span> <span class="operator">a</span> <span class="keyword">string</span>.</span><br><span class="line">search   Search <span class="operator">a</span> <span class="keyword">string</span> <span class="keyword">for</span> <span class="operator">the</span> presence <span class="operator">of</span> <span class="operator">a</span> pattern.</span><br><span class="line">sub      Substitute occurrences <span class="operator">of</span> <span class="operator">a</span> pattern found <span class="operator">in</span> <span class="operator">a</span> <span class="keyword">string</span>.</span><br><span class="line">subn     Same <span class="keyword">as</span> sub, but also <span class="constant">return</span> <span class="operator">the</span> <span class="built_in">number</span> <span class="operator">of</span> substitutions made.</span><br><span class="line"><span class="built_in">split</span>    Split <span class="operator">a</span> <span class="keyword">string</span> <span class="keyword">by</span> <span class="operator">the</span> occurrences <span class="operator">of</span> <span class="operator">a</span> pattern.</span><br><span class="line">findall  Find all occurrences <span class="operator">of</span> <span class="operator">a</span> pattern <span class="operator">in</span> <span class="operator">a</span> <span class="keyword">string</span>.</span><br><span class="line">finditer Return <span class="operator">an</span> iterator yielding <span class="operator">a</span> match object <span class="keyword">for</span> <span class="keyword">each</span> match.</span><br><span class="line">compile  Compile <span class="operator">a</span> pattern <span class="keyword">into</span> <span class="operator">a</span> RegexObject.</span><br><span class="line">purge    Clear <span class="operator">the</span> regular expression cache.</span><br><span class="line">escape   Backslash all non-alphanumerics <span class="operator">in</span> <span class="operator">a</span> <span class="keyword">string</span>.</span><br></pre></td></tr></table></figure></p>
<p>总结常用函数如下：</p>
<table>
<thead>
<tr>
<th>函数名</th>
<th>用法</th>
</tr>
</thead>
<tbody>
<tr>
<td>match</td>
<td>从字符串开头开始匹配</td>
</tr>
<tr>
<td>search</td>
<td>搜索与模式匹配的字符串</td>
</tr>
<tr>
<td>sub</td>
<td>替代匹配的字符串</td>
</tr>
<tr>
<td>split</td>
<td>更具模式分割字符串</td>
</tr>
<tr>
<td>findall</td>
<td>返回所有的模式匹配字符串</td>
</tr>
<tr>
<td>finditer</td>
<td>迭代返回match对象</td>
</tr>
<tr>
<td>complie</td>
<td>编译模式</td>
</tr>
<tr>
<td>escape</td>
<td>转义字符串中所有特殊字符，这样不用在字符串中写入讨厌的\符号</td>
</tr>
</tbody>
</table>
<p>正则表达式函数都有个参数flag,其中令flage=re.I，表示对大小写不敏感。</p>
<h2 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h2><p>python正则表达式的基本概念也就这些，学习这些的最好资料是自带的帮助文档。</p>
]]></content>
    <summary type="html">
    <![CDATA[根据python的re模块的帮助文档，简要总结python正则中常用的特殊字符，集合简写和正则表达式函数，最好的学习资料就是python自带文档。正则表达式的水很深，关键是要多实践。]]>
    
    </summary>
    
      <category term="python" scheme="http://pzengseu.github.io/tags/python/"/>
    
      <category term="正则表达式" scheme="http://pzengseu.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[乔治·奥威尔的《动物农场》和《一九八四》]]></title>
    <link href="http://pzengseu.github.io/2016/01/18/read/1984/"/>
    <id>http://pzengseu.github.io/2016/01/18/read/1984/</id>
    <published>2016-01-18T13:24:13.000Z</published>
    <updated>2016-01-26T02:58:02.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>乔治·奥威尔是英国著名小说家，他的代表作《动物农场》和《一九八四》是反极权主义的经典。乔治·奥威尔毕生穷困潦倒，且英年早逝，他的这些作品，待他死后才得到大家的认可。初次写读书笔记，我自己都读不下了。<br><a id="more"></a></p>
<h2 id="u52A8_u7269_u519C_u573A"><a href="#u52A8_u7269_u519C_u573A" class="headerlink" title="动物农场"></a>动物农场</h2><p>这本书篇幅不长，讲述了农场动物在人类极权的压迫下，在猪们的领导下，发动革命，建立农场新秩序，并发展成另一个极权农场的故事。<br>一头”老猪“临死前，鼓吹动物们要追求自由平等，要起来反抗，于是在几头猪的带领下，趁主人喝醉酒，发起革命取得成功，建立了所谓的民主新农场，并规定了七条戒律：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 凡用两条腿行走的都是敌人。</span><br><span class="line"><span class="number">2.</span> 凡四条腿行走或长翅膀的，都是朋友。</span><br><span class="line"><span class="number">3.</span> 凡动物都不可穿衣服。</span><br><span class="line"><span class="number">4.</span> 凡动物都不可睡床铺。</span><br><span class="line"><span class="number">5.</span> 凡动物都不可饮酒。</span><br><span class="line"><span class="number">6.</span> 凡动物都不可杀任何别的动物。</span><br><span class="line"><span class="number">7.</span> 凡动物一律平等。</span><br></pre></td></tr></table></figure></p>
<p>这些最初的戒律确实体现了动物们建立的社会的民主性，但随着农场的发展，领导猪们开始不但以各种借口压迫其它动物干活，满足自己的私欲。猪们开始两天腿走路，开始穿衣服，开始睡床铺（没被单），开始饮酒，开始与人类进行贸易，甚至将忠于自己的动物卖给人类。就这样因为其它动物不识字，猪们不断破戒，并不断修改戒律，最后戒律该的面目全非，成了这个样子：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>+<span class="number">2.</span> 四条腿好，两条腿更好。</span><br><span class="line"><span class="number">3.</span> 猪也穿上了人类的衣服。</span><br><span class="line"><span class="number">4.</span> 凡动物都不可睡床铺被单。</span><br><span class="line"><span class="number">5.</span> 凡动物都不可饮酒过量。</span><br><span class="line"><span class="number">6.</span> 变成了残酷的同类的杀戮，甚至拳击手也没逃厄运。</span><br><span class="line"><span class="number">7.</span> 凡动物一律平等，但是有些动物比别的动物更加平等。</span><br></pre></td></tr></table></figure></p>
<p>这本书的充满了讽刺，讲述了一个“农场”由民主变成极权的全过程，受苦受难的终究是底层“动物”，而底层“动物”唯一的变化就是换了主子。</p>
<h2 id="u4E00_u4E5D_u516B_u56DB"><a href="#u4E00_u4E5D_u516B_u56DB" class="headerlink" title="一九八四"></a>一九八四</h2><h3 id="u778E_u626F_u4E00_u4F1A"><a href="#u778E_u626F_u4E00_u4F1A" class="headerlink" title="瞎扯一会"></a>瞎扯一会</h3><p>这本书相比动物农场更长，也能给人更深的震撼.小说介绍了一个令人恐惧的独裁社会，不一定真实存在的领导人“老大哥”指定了三条规则：</p>
<blockquote>
<p>战争即和平<br>自由即奴役<br>无知即力量</p>
</blockquote>
<p>自古以来社会都可分为：上等人、中等人和下等人。上等人的目标是保持他们的地位，中等人的目标是要与上等人交换地位。下等人在劳动之余无暇旁顾，唯一的目标可能是建立一个人人平等的社会。这样在历史上始终存在着一场一而再再而三发生的斗争，其大致轮廓相同。可概括为，上等人由于对自己丧失信心或是对自己的统治丧失信心，给了标榜为正义奋斗的中等人机会，中等人把下等人争取到自己一边，推翻上等人的统治。中等以一但达到目的，就把下等人重新推到奴役的位置，自己成了上等人。不久，其它两类人中有一等人成为中等人，或是两类人中都分裂一批人成为中等人，周而复始。三等人中只有下等人从来没是实现过自己的目标，唯一的变化是主子变了。<br>在书中这三类人是这样分的：</p>
<ul>
<li>上等人：　老大哥，核心党</li>
<li>中等人：　外围党</li>
<li>下等人：　无产者</li>
</ul>
<p>其中对中等人外围党管理的最严，哪怕在最无足轻重的问题上都不容有丝毫的不同意见。而无产者由于教育水平低下，因此他们近似没有智力，给予他们足够自由无足轻重。这样也反映了上述规律。</p>
<h3 id="u601D_u60F3_u63A7_u5236"><a href="#u601D_u60F3_u63A7_u5236" class="headerlink" title="思想控制"></a>思想控制</h3><p>书中描述了“老大哥”带领的党是如何控制人们的思想，包括篡改过去，双重思想和新话。</p>
<h4 id="u7BE1_u6539_u8FC7_u53BB"><a href="#u7BE1_u6539_u8FC7_u53BB" class="headerlink" title="篡改过去"></a>篡改过去</h4><ul>
<li>辅助性，预防性原因<br>使党员和无产者相信现在比过去好</li>
<li>保持党的一贯正确性<blockquote>
<p>为了让大家看到党的预言在任何情况下都是正确的，需要不断改变过去的讲话、统计、各种记录，使之符合目前情况，不能承认在理论上或政治友敌关系上发生过任何变化。<br>因为改变自己的思想，或者甚至改变自己的政策，无异承认自己的弱点。</p>
</blockquote>
</li>
<li>英社的中心原则<blockquote>
<p>过去并不客观存在，可更改，完全由党决定<br>绝不承认更改</p>
</blockquote>
</li>
<li>控制过去就是控制未来<br>控制过去就是控制未来,书中多次提到这句话，仔细想想还真有道理，历史上就多次发生这种事情，比如:秦始皇焚书坑儒,台湾修改历史教科书企图台独,日本修改历史教科书企图掩盖历史。</li>
</ul>
<h4 id="u53CC_u91CD_u601D_u60F3"><a href="#u53CC_u91CD_u601D_u60F3" class="headerlink" title="双重思想"></a>双重思想</h4><blockquote>
<p>在一个人的思想中同时保持并且接受两种相互矛盾的认识能力。<br>有意说谎，但又真的相信这种谎言<br>忘掉可以拆穿这种谎言的事实，然而在必要时却又要把事实来出来（可能是上一个谎言）<br>否认客观现实存在，但要把否认的现实估计在内</p>
</blockquote>
<h4 id="u65B0_u8BDD"><a href="#u65B0_u8BDD" class="headerlink" title="新话"></a>新话</h4><ul>
<li>取缔异端的词，比如free只能表示‘无’的意思，而不能表达为‘自由’，不能用在politically free（政治自由）或intellectually free（学术自由）原来的意义上。</li>
<li>减少词汇数量，缩小思想的范围。</li>
</ul>
<h2 id="u603B_u7ED3"><a href="#u603B_u7ED3" class="headerlink" title="总结"></a>总结</h2><p>这两本书读起来太让人压抑了，希望我们的社会越来越民主.</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u524D_u8A00"><a href="#u524D_u8A00" class="headerlink" title="前言"></a>前言</h2><p>乔治·奥威尔是英国著名小说家，他的代表作《动物农场》和《一九八四》是反极权主义的经典。乔治·奥威尔毕生穷困潦倒，且英年早逝，他的这些作品，待他死后才得到大家的认可。初次写读书笔记，我自己都读不下了。<br>]]>
    
    </summary>
    
      <category term="阅读" scheme="http://pzengseu.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="阅读" scheme="http://pzengseu.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[个人博客]]></title>
    <link href="http://pzengseu.github.io/2016/01/17/personal_blog/"/>
    <id>http://pzengseu.github.io/2016/01/17/personal_blog/</id>
    <published>2016-01-17T12:48:35.000Z</published>
    <updated>2016-01-26T02:14:28.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u6211_u7684_u535A_u5BA2"><a href="#u6211_u7684_u535A_u5BA2" class="headerlink" title="我的博客"></a>我的博客</h1><h2 id="u4E3A_u4F55_u5199"><a href="#u4E3A_u4F55_u5199" class="headerlink" title="为何写"></a>为何写</h2><p>现在互联网上有各种博客，比如开源中国、CSDN、博客园等猿类聚集地，还有新浪博客这种大众博客。我用过新浪博客和开源中国的博客，但都不能让我满意，首先不喜欢它们的排版，其次猿类也该有自己的私人空间，一个可以自己管理内容的空间，而且我看大牛们都有自己的博客，渣渣得向大牛看齐！</p>
<h2 id="u5982_u4F55_u5199"><a href="#u5982_u4F55_u5199" class="headerlink" title="如何写"></a>如何写</h2><p>以前我写文章写博客，基本都是用Word,vim甚至记事本，这写东西写起文章来真是难受。用Word要时刻注意文章的排版，用vim码字是很爽，但真不适合写文章，至于记事本，这是什么玩意！最近看到有<a href="https://en.wikipedia.org/wiki/Markdown" target="_blank" rel="external">Markdown</a>这个东西，看了几分钟就喜欢上它了，这个东西的语法很简单，却能写出有很好排版的东西，据说很多文字工作者都在用，我算时坐井观天了。推荐在线markdown工具,<a href="https://www.zybuluo.com/" target="_blank" rel="external">cmd markdown</a>,离线markdown编辑器<a href="http://pad.haroopress.com/" target="_blank" rel="external">haroopad</a>.</p>
<h2 id="u600E_u4E48_u505A"><a href="#u600E_u4E48_u505A" class="headerlink" title="怎么做"></a>怎么做</h2><p>由于时间有限，且个人精力不是放在做网站上，所以选择现成的网站框架。这个博客是根据<a href="https://hexo.io" target="_blank" rel="external">hexo</a>和<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="external">hexo-theme-next</a>主题制作而成, hexo使用简单，几天简单的命令管理博客，大大提高了使用博客效率。然后将博客部署到<a href="https://pages.github.com" target="_blank" rel="external">github pages</a>上，然而github pages上的网站，国内访问速度较慢，且百度爬虫是爬不到的，所以我又将博客部署到了国内的<a href="https://gitcafe.com/" target="_blank" rel="external">gitcafe</a>上，速度立马起来了。<br>代码托管在github上：</p>
<ul>
<li><a href="https://github.com/pzengseu/hexo_zp_next" target="_blank" rel="external">源代码</a></li>
</ul>
<p>网站托管在github和gitcafe上</p>
<ul>
<li><a href="http://zpeng.gitcafe.io" target="_blank" rel="external">gitcafe pages</a></li>
<li><a href="https://pzengseu.github.io">github pages</a></li>
</ul>
<h2 id="hexo_u914D_u7F6E_u53C2_u8003"><a href="#hexo_u914D_u7F6E_u53C2_u8003" class="headerlink" title="hexo配置参考"></a>hexo配置参考</h2><h3 id="u7AD9_u70B9_u914D_u7F6E"><a href="#u7AD9_u70B9_u914D_u7F6E" class="headerlink" title="站点配置"></a>站点配置</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">#Hexo Configuration</span><br><span class="line">## Docs: http://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: zp's blog</span><br><span class="line">subtitle: Reading, thinking and coding</span><br><span class="line">description: 记录学习生活点滴</span><br><span class="line">author: zpeng</span><br><span class="line">email: zpeng@seu.edu.cn</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, <span class="operator"><span class="keyword">set</span> <span class="keyword">url</span> <span class="keyword">as</span> <span class="string">'http://yoursite.com/child'</span> <span class="keyword">and</span> root <span class="keyword">as</span> <span class="string">'/child/'</span></span><br><span class="line"><span class="keyword">url</span>: <span class="keyword">http</span>://pzengseu.github.io</span><br><span class="line">root: /</span><br><span class="line">permalink: :<span class="keyword">year</span>/:<span class="keyword">month</span>/:<span class="keyword">day</span>/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># <span class="keyword">Directory</span></span><br><span class="line">source_dir: <span class="keyword">source</span></span><br><span class="line">public_dir: <span class="keyword">public</span></span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # <span class="keyword">File</span> <span class="keyword">name</span> <span class="keyword">of</span> <span class="keyword">new</span> posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: <span class="literal">false</span> # Tran/Asform title <span class="keyword">into</span> titlecase</span><br><span class="line">external_link: <span class="literal">true</span> # <span class="keyword">Open</span> <span class="keyword">external</span> links <span class="keyword">in</span> <span class="keyword">new</span> tab</span><br><span class="line">filename_case: <span class="number">0</span></span><br><span class="line">render_drafts: <span class="literal">false</span></span><br><span class="line">post_asset_folder: <span class="literal">false</span></span><br><span class="line">relative_link: <span class="literal">false</span></span><br><span class="line">future: <span class="literal">true</span></span><br><span class="line">highlight:</span><br><span class="line">  <span class="keyword">enable</span>: <span class="literal">true</span></span><br><span class="line">  line_number: <span class="literal">true</span></span><br><span class="line">  auto_detect: <span class="literal">true</span></span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># <span class="keyword">Category</span> &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># <span class="built_in">Date</span> / <span class="keyword">Time</span> <span class="keyword">format</span></span><br><span class="line">## Hexo uses Moment.js <span class="keyword">to</span> <span class="keyword">parse</span> <span class="keyword">and</span> display <span class="built_in">date</span></span><br><span class="line">## You can customize the <span class="built_in">date</span> <span class="keyword">format</span> <span class="keyword">as</span> defined <span class="keyword">in</span></span><br><span class="line">## <span class="keyword">http</span>://momentjs.com/docs/#/displaying/<span class="keyword">format</span>/</span><br><span class="line"><span class="keyword">date_format</span>: YYYY-MM-DD</span><br><span class="line"><span class="keyword">time_format</span>: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## <span class="keyword">Set</span> per_page <span class="keyword">to</span> <span class="number">0</span> <span class="keyword">to</span> <span class="keyword">disable</span> pagination</span><br><span class="line">#per_page: <span class="number">5</span></span><br><span class="line">#pagination_dir: page</span><br><span class="line"></span><br><span class="line">index_generator:</span><br><span class="line">  per_page: <span class="number">5</span></span><br><span class="line"></span><br><span class="line">archive_generator:</span><br><span class="line">  per_page: <span class="number">20</span></span><br><span class="line">  yearly: <span class="literal">true</span></span><br><span class="line">  monthly: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">tag_generator:</span><br><span class="line">  per_page: <span class="number">10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: <span class="keyword">http</span>://hexo.io/plugins/</span><br><span class="line">## Themes: <span class="keyword">http</span>://hexo.io/themes/</span><br><span class="line">theme: <span class="keyword">next</span></span><br><span class="line">stylus: </span><br><span class="line">  <span class="keyword">compress</span>: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: <span class="keyword">http</span>://hexo.io/docs/deployment.html</span><br><span class="line">#deploy:</span><br><span class="line">#  <span class="keyword">type</span>: git</span><br><span class="line">#  repository: git@github.com:pzengseu/pzengseu.github.com.git</span><br><span class="line">#  branch: <span class="keyword">master</span></span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">  <span class="keyword">type</span>: git</span><br><span class="line">  repository: </span><br><span class="line">    gitcafe: git@gitcafe.com:zpeng/zpeng.git,gitcafe-pages</span><br><span class="line">    github: git@github.com:pzengseu/pzengseu.github.com.git,<span class="keyword">master</span></span><br><span class="line"></span><br><span class="line">feed:</span><br><span class="line">  <span class="keyword">type</span>: atom</span><br><span class="line">  <span class="keyword">path</span>: atom.<span class="keyword">xml</span></span><br><span class="line">  <span class="keyword">limit</span>: <span class="number">20</span></span><br><span class="line">  hub:</span></span><br></pre></td></tr></table></figure>
<h3 id="hexo-theme-next_u4E3B_u9898_u914D_u7F6E"><a href="#hexo-theme-next_u4E3B_u9898_u914D_u7F6E" class="headerlink" title="hexo-theme-next主题配置"></a>hexo-theme-next主题配置</h3><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Site Information Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Place your favicon.ico to /source directory.</span></span><br><span class="line">favicon: /favicon.ico</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Set default keywords (Use a comma to separate)</span></span><br><span class="line">keywords: <span class="string">"Hexo, NexT"</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Set rss to false to disable feed link.</span></span><br><span class="line"><span class="preprocessor"># Leave rss as empty to use site's feed link.</span></span><br><span class="line"><span class="preprocessor"># Set rss to specific value if you have burned your feed already.</span></span><br><span class="line">rss:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Specify the date when the site was setup</span></span><br><span class="line">since: <span class="number">2016</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Menu Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># When running hexo in a subdirectory (e.g. domain.tld/blog)</span></span><br><span class="line"><span class="preprocessor"># Remove leading slashes ( "/archives" -&gt; "archives" )</span></span><br><span class="line">menu:</span><br><span class="line">  home: /</span><br><span class="line">  categories: /categories</span><br><span class="line">  about: /about</span><br><span class="line">  archives: /archives</span><br><span class="line">  tags: /tags</span><br><span class="line">  #commonweal: /<span class="number">404.</span>html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Enable/Disable menu icons.</span></span><br><span class="line"><span class="preprocessor"># Icon Mapping:</span></span><br><span class="line"><span class="preprocessor">#   Map a menu item to a specific FontAwesome icon name.</span></span><br><span class="line"><span class="preprocessor">#   Key is the name of menu item and value is the name of FontAwsome icon.</span></span><br><span class="line"><span class="preprocessor">#   When an question mask icon presenting up means that the item has no mapping icon.</span></span><br><span class="line">menu_icons:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  # Icon Mapping.</span><br><span class="line">  home: home</span><br><span class="line">  about: user</span><br><span class="line">  categories: th</span><br><span class="line">  tags: tags</span><br><span class="line">  archives: archive</span><br><span class="line">  commonweal: heartbeat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Scheme Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Schemes</span></span><br><span class="line"><span class="preprocessor">#scheme: Misc</span></span><br><span class="line"><span class="preprocessor">#scheme: Mist</span></span><br><span class="line">scheme: Pisces</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Sidebar Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Social links</span></span><br><span class="line"><span class="preprocessor"># social:</span></span><br><span class="line">  #GitHub:</span><br><span class="line">  #Others:</span><br><span class="line"></span><br><span class="line">social:</span><br><span class="line">  GitHub: https:<span class="comment">//github.com/pzengseu</span></span><br><span class="line">  zhihu: https:<span class="comment">//www.zhihu.com/people/ceng-peng-66</span></span><br><span class="line">  HarkerRank: https:<span class="comment">//www.hackerrank.com/zpeng</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Social Icons</span></span><br><span class="line">social_icons:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  # Icon Mappings</span><br><span class="line">  GitHub: github</span><br><span class="line">  Twitter: twitter</span><br><span class="line">  Weibo: weibo</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#Sidebar Avatar</span></span><br><span class="line"><span class="preprocessor"># in theme directory(source/images): /images/avatar.jpg</span></span><br><span class="line"><span class="preprocessor"># in site  directory(source/uploads): /uploads/avatar.jpg</span></span><br><span class="line"><span class="preprocessor"># default : /images/default_avatar.jpg</span></span><br><span class="line">avatar: /images/avatar.jpg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># TOC in the Sidebar</span></span><br><span class="line">toc:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">links_title: 以前的博客，放弃管理</span><br><span class="line">links:</span><br><span class="line">  新浪博客: http:<span class="comment">//blog.sina.com.cn/u/2413914251</span></span><br><span class="line">  oschina code: http:<span class="comment">//www.oschina.net/code/list_by_user?id=256373</span></span><br><span class="line">  oschina blog: http:<span class="comment">//my.oschina.net/zpengseu/blog</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="preprocessor"># http://creativecommons.org/</span></span><br><span class="line"><span class="preprocessor"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span></span><br><span class="line">creative_commons: by-nc-sa</span><br><span class="line"><span class="preprocessor">#creative_commons:</span></span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right</span><br><span class="line">  position: left</span><br><span class="line">  #position: right</span><br><span class="line"></span><br><span class="line">  # Sidebar Display, available value:</span><br><span class="line">  #  - post    expand on posts automatically. Default.</span><br><span class="line">  #  - always  expand <span class="keyword">for</span> all pages automatically</span><br><span class="line">  #  - hide    expand only when click on the sidebar toggle icon.</span><br><span class="line">  #  - remove  Totally remove sidebar including sidebar toggle icon.</span><br><span class="line">  display: post</span><br><span class="line">  #display: always</span><br><span class="line">  #display: hide</span><br><span class="line">  #display: remove</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Misc Theme Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Custom Logo.</span></span><br><span class="line"><span class="preprocessor"># !!Only available for Default Scheme currently.</span></span><br><span class="line"><span class="preprocessor"># Options:</span></span><br><span class="line"><span class="preprocessor">#   enabled: [true/false] - Replace with specific image</span></span><br><span class="line"><span class="preprocessor">#   image: url-of-image   - Images's url</span></span><br><span class="line">custom_logo:</span><br><span class="line">  enabled: <span class="literal">false</span></span><br><span class="line">  image:</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Code Highlight theme</span></span><br><span class="line"><span class="preprocessor"># Available value:</span></span><br><span class="line"><span class="preprocessor">#    normal | night | night eighties | night blue | night bright</span></span><br><span class="line"><span class="preprocessor"># https://github.com/chriskempson/tomorrow-theme</span></span><br><span class="line">highlight_theme: night</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span></span><br><span class="line">scroll_to_more: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Automatically Excerpt</span></span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  length: <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Use Lato font</span></span><br><span class="line">use_font_lato: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor"># Third Party Services Settings</span></span><br><span class="line"><span class="preprocessor"># ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># MathJax Support</span></span><br><span class="line">mathjax:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Swiftype Search API Key</span></span><br><span class="line">swiftype_key: FvTPkqn3_SS5N9RwxEvY</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Baidu Analytics ID</span></span><br><span class="line">baidu_analytics: b390596cfb63b2f45c318f07ba310fed</span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#share</span></span><br><span class="line">jiathis: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Duoshuo ShortName</span></span><br><span class="line">duoshuo_shortname: pzeng</span><br><span class="line"><span class="preprocessor">#duoshuo_hotartical: true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Disqus</span></span><br><span class="line"><span class="preprocessor">#disqus_shortname:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Share</span></span><br><span class="line"><span class="preprocessor">#jiathis:</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Share</span></span><br><span class="line"><span class="preprocessor">#duoshuo_share: true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Google Webmaster tools verification setting</span></span><br><span class="line"><span class="preprocessor"># See: https://www.google.com/webmasters/</span></span><br><span class="line"><span class="preprocessor">#google_site_verification:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Google Analytics</span></span><br><span class="line"><span class="preprocessor">#google_analytics:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Make duoshuo show UA</span></span><br><span class="line"><span class="preprocessor"># user_id must NOT be null when admin_enable is true!</span></span><br><span class="line"><span class="preprocessor"># you can visit http://dev.duoshuo.com get duoshuo user id.</span></span><br><span class="line">duoshuo_info:</span><br><span class="line">  ua_enable: <span class="literal">true</span></span><br><span class="line">  admin_enable: <span class="literal">false</span></span><br><span class="line">  user_id: <span class="number">0</span></span><br><span class="line">  #admin_nickname: ROOT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Facebook SDK Support.</span></span><br><span class="line"><span class="preprocessor"># https://github.com/iissnan/hexo-theme-next/pull/410</span></span><br><span class="line">facebook_sdk:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  fb_admin:     #&lt;user_id&gt;</span><br><span class="line">  like_button:  #<span class="literal">true</span></span><br><span class="line">  webmaster:    #<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Show number of visitors to each article.</span></span><br><span class="line"><span class="preprocessor"># You can visit https://leancloud.cn get AppID and AppKey.</span></span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: <span class="literal">false</span></span><br><span class="line">  app_id: #&lt;app_id&gt;</span><br><span class="line">  app_key: #&lt;app_key&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Tencent analytics ID</span></span><br><span class="line"><span class="preprocessor"># tencent_analytics:</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="preprocessor">#! ---------------------------------------------------------------</span></span><br><span class="line"><span class="preprocessor">#! DO NOT EDIT THE FOLLOWING SETTINGS</span></span><br><span class="line"><span class="preprocessor">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span></span><br><span class="line"><span class="preprocessor">#! ---------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Motion</span></span><br><span class="line">use_motion: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Fancybox</span></span><br><span class="line">fancybox: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Static files</span></span><br><span class="line">vendors: vendors</span><br><span class="line">css: css</span><br><span class="line">js: js</span><br><span class="line">images: images</span><br><span class="line"></span><br><span class="line"><span class="preprocessor"># Theme version</span></span><br><span class="line">version: <span class="number">0.5</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[写博客，从互联网内容的消费者，转向内容的生产者，创造技术、阅读、生活等多个方面的内容。]]>
    
    </summary>
    
      <category term="hexo" scheme="http://pzengseu.github.io/tags/hexo/"/>
    
      <category term="next" scheme="http://pzengseu.github.io/tags/next/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[git简单记录]]></title>
    <link href="http://pzengseu.github.io/2016/01/17/other/git%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95/"/>
    <id>http://pzengseu.github.io/2016/01/17/other/git简单记录/</id>
    <published>2016-01-17T11:36:24.000Z</published>
    <updated>2016-01-26T02:13:56.000Z</updated>
    <content type="html"><![CDATA[<h2 id="u7B80_u5355_u7684_u8BB0_u5F55git_u7684_u4F7F_u7528_u65B9_u6CD5"><a href="#u7B80_u5355_u7684_u8BB0_u5F55git_u7684_u4F7F_u7528_u65B9_u6CD5" class="headerlink" title="简单的记录git的使用方法"></a>简单的记录git的使用方法</h2><ol>
<li><p>初始化git, git init</p>
</li>
<li><p>添加到git库, git add <file>, git commit -m “description”</file></p>
</li>
<li><p>查看状态 , git status</p>
</li>
<li><p>比较修改过得文件, git diff <file></file></p>
</li>
<li><p>版本回退, 查看提交历史git log, 产看命令历史git reflog, git reset –hard HEAD^/ HEAD~ / commit_id</p>
</li>
<li><p>丢弃工作区的修改, git checkout – file</p>
</li>
<li><p>丢弃工作去和暂存区的修改, gti reset HEAD file        </p>
</li>
<li><p>删除文件, rm file , (git rm  git commit)/ (git checkout – file)</p>
</li>
<li><p>关联远程库, git remote add origin git@server-name:path/repo-name.git</p>
</li>
</ol>
<ol>
<li><p>关联后第一次推送master分支的所有内容: git push -u origin master 之后推送, git push origin master</p>
</li>
<li><p>创建并切换到分支: git checkout -b dev 等价于 git branch dev, git checkout dev</p>
</li>
<li><p>查看分支: git branch</p>
</li>
<li><p>合并分支到当前分支 git merge dev</p>
</li>
<li><p>删除分支: git branch -d dev</p>
</li>
<li><p>分支合并图: git log –graph</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u7B80_u5355_u7684_u8BB0_u5F55git_u7684_u4F7F_u7528_u65B9_u6CD5"><a href="#u7B80_u5355_u7684_u8BB0_u5F55git_u7684_u4F7F_u7528_u65B9_u]]>
    </summary>
    
      <category term="git" scheme="http://pzengseu.github.io/tags/git/"/>
    
      <category term="技术" scheme="http://pzengseu.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2016书单]]></title>
    <link href="http://pzengseu.github.io/2016/01/01/read/2016%E4%B9%A6%E5%8D%95/"/>
    <id>http://pzengseu.github.io/2016/01/01/read/2016书单/</id>
    <published>2016-01-01T11:50:14.000Z</published>
    <updated>2016-04-06T11:15:41.000Z</updated>
    <content type="html"><![CDATA[<h2 id="2016_u9605_u8BFB_u8BA1_u5212"><a href="#2016_u9605_u8BFB_u8BA1_u5212" class="headerlink" title="2016阅读计划"></a>2016阅读计划</h2><p>这是2016年的阅读计划，包括了一些<em>闲书</em>和专业书,打算每月至少稳定输出两本，目前打算读的书如下：</p>
<h3 id="u6587_u5B66"><a href="#u6587_u5B66" class="headerlink" title="文学"></a>文学</h3><h4 id="u5176_u5B83"><a href="#u5176_u5B83" class="headerlink" title="其它"></a>其它</h4><ul>
<li>1984</li>
<li>不能承受生命之轻</li>
<li>穆斯林的葬礼</li>
<li>清明上河图密码</li>
</ul>
<h3 id="u5386_u53F2"><a href="#u5386_u53F2" class="headerlink" title="历史"></a>历史</h3><ul>
<li>明朝那些事儿</li>
<li>人类简史</li>
<li>枪炮、病菌与钢铁</li>
<li>从黎明到衰落</li>
<li>甲骨文</li>
</ul>
<h3 id="u54F2_u5B66"><a href="#u54F2_u5B66" class="headerlink" title="哲学"></a>哲学</h3><ul>
<li>苏菲的世界</li>
<li>影响力</li>
</ul>
<h3 id="u7ECF_u6D4E"><a href="#u7ECF_u6D4E" class="headerlink" title="经济"></a>经济</h3><ul>
<li>牛奶可乐经济学</li>
</ul>
<h3 id="u5FC3_u7406_u5B66"><a href="#u5FC3_u7406_u5B66" class="headerlink" title="心理学"></a>心理学</h3><ul>
<li>乌合之众</li>
<li>自私的基因</li>
</ul>
<h3 id="u4E13_u4E1A_u4E66"><a href="#u4E13_u4E1A_u4E66" class="headerlink" title="专业书"></a>专业书</h3><ul>
<li>机器学习 Tom M mictchell</li>
<li>机器学习 周志华</li>
<li>统计学习方法</li>
<li>Python机器学习实战</li>
<li>Python数据分析与挖掘实战</li>
<li>spark机器学习</li>
</ul>
<p><strong> 这个书单会逐步完善　</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="2016_u9605_u8BFB_u8BA1_u5212"><a href="#2016_u9605_u8BFB_u8BA1_u5212" class="headerlink" title="2016阅读计划"></a>2016阅读计划</h2><p>这是2016]]>
    </summary>
    
      <category term="书单" scheme="http://pzengseu.github.io/tags/%E4%B9%A6%E5%8D%95/"/>
    
      <category term="阅读" scheme="http://pzengseu.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="阅读" scheme="http://pzengseu.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2015书单]]></title>
    <link href="http://pzengseu.github.io/2015/12/31/read/2015%E9%98%85%E8%AF%BB%E5%A5%BD%E4%B9%A6/"/>
    <id>http://pzengseu.github.io/2015/12/31/read/2015阅读好书/</id>
    <published>2015-12-31T01:26:55.000Z</published>
    <updated>2016-01-21T14:50:09.000Z</updated>
    <content type="html"><![CDATA[<h1 id="2015_u4E66_u5355"><a href="#2015_u4E66_u5355" class="headerlink" title="2015书单"></a>2015书单</h1><p>１．《活着》，余华．看完这本书是非常沉重的，有的时候活着比死去更痛苦，因为要承受的更多．</p>
<p>２．《许三观卖血记》，余华．同样非常沉重的一本书，许三观为了生活一次次卖血，结局却换来子女冷漠的态度，令人苦涩．</p>
<p>３．《曾国藩传》，唐浩明．很好的一本人物传纪，比较全面的评价了曾国藩．PS:为官要学曾国藩，经商要学胡雪岩．</p>
<p>４．《尘埃落定》，阿来．充满异域风情的一本书，最复杂的历史由最简单的人物参透，最终也化为尘土．</p>
<p>５．《从你的全世界路过》，张嘉佳．由很多简短的故事组成，适合作为睡前读物．</p>
<p>６．《一句顶一万句》，刘震云．读完后让人倍感孤独．</p>
<p>７．《解忧杂货铺》，东野圭吾．结构非常奇妙的一本书，开头与结尾，完美的连在一起，就像一个无暇的圆，充满了温情．</p>
<p>８．《蛙》，莫言．揭露了计划生育给人们带来的苦难，页揭露了人性的丑陋．</p>
<p>９．《小王子》，安托万·德·圣·埃克苏佩里．写给成年人的童话．</p>
<p>10．《当我谈跑步时我说些什么》，村上春树．</p>
<blockquote>
<p>失去理智的人怀抱的美好幻想，在现实世界中根本是子虚乌有．</p>
<p>违背了自己定下的原则，哪怕只有一次，以后将违背更多的原则．</p>
</blockquote>
<p>11．《皮囊》，蔡崇达．很感人很现实的一本书，前面几篇很感人，后面趋于平淡．</p>
<p>12．《嫌疑人ｘ的献身》，东野圭吾．意料之外的推理，最无私的爱．</p>
<p>13．《三体》，刘慈欣．</p>
<ul>
<li><p>《地球往事》讲诉了人类发现三体将入侵人类的故事，叶文结打开了毁灭之门，也给出了自救的钥匙。</p>
</li>
<li><p>《黑暗森林》，三部曲中个人认为写的最好的一部。面壁计划中的四个每一个都能成为结局大招，却都泯灭了。对水滴的描述令人惊叹。罗辑一次次的拯救世界，却因为人性而失败。</p>
</li>
<li><p>《死神永生》人类最后的垂死挣扎，圣母程心，毁了一切。</p>
</li>
</ul>
<blockquote>
<p>失去人性，失去很多；失去兽性，失去一切。</p>
</blockquote>
<p>14．《白夜行》，东野圭吾又一神作，悲切的绝望。</p>
<blockquote>
<p>我的天空里没有太阳，总是黑夜，但并不暗，因为有东西代替了太阳。虽然没有太阳那么明亮，但对我来说已经足够。凭借着这份光，我便能把黑夜当成白天。我从来就没有太阳，所以不怕失去。</p>
</blockquote>
<p>15．《乖，摸摸头》，大冰。很傲娇的一本书，不太喜欢这种风格的书，但书中的爱情确实让人向往，阿明的故事让人懂得梦想的力量多么伟大。</p>
<p>16．《放学后》，东野圭吾。东野圭吾早期作品，与其它神作不同，这本书不到最后不知谁是凶手，充满了悬疑性，算是一本真正的推理小说。</p>
<p>17． 《极简欧洲史》,一本不错的欧洲历史扫盲书。</p>
<p>18． 《恶意》，东野圭吾又一神作，与《白夜行》齐名，《白夜行》为了爱粉身碎骨，《恶意》因为恨万劫不复。</p>
<p>19． 《万历十五年》，黄仁宇。逼格很高的一本书，莫名其妙的就读完了，书中虽说的万历皇帝，但读完不仅了解了文化政治制度的症结所在，人心被制度的扭曲，更是学习了一种大视野看问题的思维。绝赞推荐！</p>
<p>20． 《动物农场》，乔治.奥威尔。讲述了久经压迫的农场动物起身造反的故事。完全时映射前苏联，各种讽刺啊，读完也让人有种深深的恐惧感，但愿我们不要忘了当初的誓言，国家如此，个人也该如此。这本书现在不是禁书，也算是幸运，但说不定哪天就成了禁书。凡动物一律平等，但是有些动物比别的动物更加平等。</p>
<p>21．《挪威的森林》，村上春树。这是一本“黄书”，书中有很多sex的描写，是一本充满负能量的爱情小说，但不得不说这是一本好书。看完这本书陷入深深的郁闷中，不想说话，只有孤独感。借用书中一句话</p>
<blockquote>
<p>“哪里有人喜欢孤独！不过是不乱交朋友罢了。那样只能落得失望。”</p>
</blockquote>
<p>22．《岛上书店》，亚马逊畅销书。又是一本畅销书，畅销书能否成为经典得看多年后是否还有人阅读，对于这本畅销书，中文版翻译让人不能忍，故事也满是鸡汤，怕是很难成为经典！</p>
<p>23．《牧羊少年奇幻之旅》，2015年最后一本书，不错的一本童话，是一本不错的鸡汤文，作为2015年的最后一本书，还算不错。</p>
<h2 id="u5C0F_u5C0F_u7684_u603B_u7ED3"><a href="#u5C0F_u5C0F_u7684_u603B_u7ED3" class="headerlink" title="小小的总结"></a>小小的总结</h2><p>2015所读的好书比大一到大三读的书都多，从很多方面来说读书都是很有必要的。最初开始读书，充满了功利性，总想着从书中学到什么，不然时间岂不是浪费了。但这样读书很累，读书不是为了增加谈资，增加炫耀的资本，当然读书确实可以增加这些能力，但读书最重要的是丰富自己的思想体系，让自己在面对问题和困难时不至于手足无措。但书读多了，特别是读悲剧类型的书，会给人增加孤独感，特别是无人交流时，写读书博文，可能这可以发泄心中的想法。希望这一天早点到来，内心足够强大，冷静对待万物。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="2015_u4E66_u5355"><a href="#2015_u4E66_u5355" class="headerlink" title="2015书单"></a>2015书单</h1><p>１．《活着》，余华．看完这本书是非常沉重的，有的时候活着比死去更痛苦]]>
    </summary>
    
      <category term="书单" scheme="http://pzengseu.github.io/tags/%E4%B9%A6%E5%8D%95/"/>
    
      <category term="阅读" scheme="http://pzengseu.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="阅读" scheme="http://pzengseu.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
</feed>
